var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.769,1,2.885]],["body/modules/AppModule.html",[0,2.677,1,5.719,2,2.008,3,1.912,4,2.235,5,2.235,6,2.008,7,3.112,8,3.112,9,3.289,10,3.289,11,4.777,12,0.014,13,4.777,14,3.788,15,4.777,16,4.777,17,3.112,18,2.235,19,2.115,20,0.126,21,0.126,22,0.112,23,3.779,24,3.527,25,0.464,26,3.779,27,5.263,28,6.548,29,0.28,30,3.779,31,0.405,32,0.231,33,0.2,34,0.28,35,5.263,36,0.405,37,2.533,38,0.278,39,5.263,40,3.779,41,0.505,42,3.779,43,3.779,44,3.779,45,2.725,46,3.779,47,4.58,48,2.533,49,3.779,50,3.779,51,3.289,52,3.289,53,3.289,54,3.289,55,3.289,56,3.289,57,1.181,58,0.126,59,0.125,60,2.372,61,3.779,62,3.779,63,6.055,64,2.372,65,6.055,66,5.263,67,1.099,68,2.725,69,3.779,70,3.779,71,0.009,72,0.009]],["title/classes/Auth.html",[59,0.133,64,2.511]],["body/classes/Auth.html",[12,0.013,20,0.209,21,0.209,22,0.185,58,0.209,59,0.207,64,4.555,71,0.012,72,0.012,73,2.022,74,5.434]],["title/controllers/AuthController.html",[75,0.845,76,2.885]],["body/controllers/AuthController.html",[12,0.014,20,0.144,21,0.144,22,0.128,25,0.707,29,0.32,31,0.462,32,0.264,33,0.305,34,0.32,36,0.462,38,0.258,41,0.577,57,1.348,58,0.144,59,0.143,64,2.709,67,2.012,71,0.01,72,0.01,75,0.912,76,4.155,77,3.756,78,1.688,79,0.211,80,5.091,81,3.756,82,5.076,83,1.301,84,3.112,85,4.316,86,4.316,87,2.915,88,1.512,89,2.254,90,5.762,91,4.316,92,2.254,93,1.688,94,2.254,95,2.254,96,2.254,97,2.168,98,4.316,99,3.861,100,2.415,101,4.071,102,3.756,103,3.756,104,3.756,105,1.688,106,2.254,107,3.861,108,2.707,109,1.301,110,4.316,111,4.316,112,1.45,113,4.316,114,1.688,115,2.537,116,1.688,117,4.316,118,0.651,119,4.316]],["title/injectables/AuthMiddleware.html",[45,2.885,120,0.557]],["body/injectables/AuthMiddleware.html",[12,0.014,20,0.146,21,0.146,22,0.13,25,0.713,29,0.431,31,0.623,32,0.356,33,0.308,34,0.431,36,0.469,37,4.376,38,0.216,41,0.585,45,4.193,48,2.932,58,0.146,59,0.145,60,2.747,71,0.01,72,0.01,79,0.214,97,1.646,112,1.47,120,0.81,121,1.367,122,3.808,123,3.65,124,1.272,125,3.808,126,6.482,127,4.376,128,5.815,129,6.531,130,6.959,131,4.376,132,2.113,133,3.808,134,5.815,135,2.325,136,1.284,137,4.376,138,4.376,139,5.126,140,4.376,141,2.188,142,1.32,143,4.376,144,3.808,145,4.376,146,3.808,147,4.376,148,2.932,149,0.77,150,4.376,151,1.144,152,4.376,153,4.376,154,4.376]],["title/modules/AuthModule.html",[0,1.769,11,2.681]],["body/modules/AuthModule.html",[0,3.012,2,2.536,3,2.414,4,2.822,5,2.822,6,2.536,7,4.029,8,2.822,11,5.269,12,0.014,14,4.053,17,3.64,18,2.822,19,2.671,20,0.16,21,0.16,22,0.142,24,4.124,38,0.277,41,0.638,47,4.154,48,3.198,51,4.154,52,4.154,53,4.154,54,4.154,55,4.154,56,4.154,57,1.923,58,0.16,59,0.158,71,0.01,72,0.01,76,4.912,101,4.788,102,4.154,155,4.154,156,4.154,157,4.773,158,4.773,159,4.773,160,3.441]],["title/injectables/AuthService.html",[101,2.511,120,0.557]],["body/injectables/AuthService.html",[12,0.014,20,0.126,21,0.126,22,0.112,25,0.643,29,0.389,31,0.562,32,0.37,33,0.278,34,0.389,36,0.403,38,0.265,41,0.502,48,2.521,58,0.126,59,0.125,67,1.9,71,0.009,72,0.009,79,0.184,80,4.117,81,4.565,82,4.77,101,3.293,103,3.274,104,3.274,118,0.568,120,0.73,121,1.175,124,1.525,125,3.274,126,6.195,135,1.999,136,1.351,139,4.117,141,2.272,142,1.371,146,3.274,149,0.662,151,0.983,161,3.274,162,1.145,163,3.527,164,3.761,165,3.761,166,1.531,167,2.361,168,1.415,169,2.952,170,3.515,171,1.736,172,2.224,173,1.581,174,2.224,175,2.77,176,3.173,177,3.056,178,3.761,179,2.361,180,1.145,181,2.952,182,2.952,183,5.246,184,4.117,185,5.246,186,3.761,187,2.952,188,3.761,189,4.565,190,3.274,191,3.761,192,2.952,193,3.274,194,2.952]],["title/classes/Course.html",[59,0.133,195,1.046]],["body/classes/Course.html",[12,0.014,20,0.103,21,0.103,22,0.092,29,0.569,31,0.682,32,0.456,33,0.365,34,0.472,36,0.64,37,4.002,38,0.201,58,0.103,59,0.103,71,0.008,72,0.008,73,1.001,79,0.151,88,1.358,118,1.04,124,0.899,142,1.034,149,1.213,173,2.008,195,1.191,196,2.427,197,1.783,198,3.397,199,3.997,200,3.577,201,3.728,202,3.222,203,3.075,204,3.076,205,2.86,206,3.532,207,1.182,208,4.557,209,2.427,210,3.903,211,3.092,212,2.427,213,3.092,214,2.427,215,3.092,216,2.427,217,3.092,218,2.691,219,3.092,220,2.691,221,3.092,222,3.092,223,3.092,224,3.092,225,3.092,226,2.427,227,3.092,228,2.691,229,3.092,230,3.092,231,3.092,232,3.092,233,1.989,234,3.092,235,2.86,236,1.941,237,2.229,238,1.941,239,1.367,240,3.174,241,1.941,242,2.86,243,2.86,244,3.286,245,3.966,246,1.941,247,2.229,248,3.532,249,1.941,250,2.229,251,2.691,252,3.966,253,2.691]],["title/classes/CourseRepository.html",[59,0.133,254,1.696]],["body/classes/CourseRepository.html",[12,0.013,20,0.139,21,0.139,22,0.124,25,0.69,29,0.528,31,0.763,32,0.436,33,0.378,34,0.528,36,0.763,38,0.155,58,0.139,59,0.138,71,0.009,72,0.009,73,1.35,79,0.204,149,0.991,195,2.023,207,1.108,254,2.386,255,3.628,256,6.371,257,2.291,258,2.488,259,3.328,260,2.991,261,2.598,262,4.418,263,4.168,264,2.727,265,3.533,266,4.168,267,4.899,268,3.902,269,4.595,270,4.168,271,2.616,272,3.328,273,4.168,274,4.899,275,4.168,276,2.465]],["title/interfaces/CourseSchema.html",[210,2.885,239,1.769]],["body/interfaces/CourseSchema.html",[12,0.014,20,0.123,21,0.123,22,0.109,32,0.433,33,0.375,34,0.48,38,0.222,58,0.123,59,0.122,71,0.009,72,0.009,79,0.18,88,1.441,118,1.096,142,1.173,149,1.051,173,1.557,195,0.963,196,2.89,197,2.022,198,2.311,199,3.244,201,3.956,202,3.577,203,3.414,204,3.264,205,2.311,206,3.056,207,1.192,210,4.306,233,2.13,235,3.244,236,2.311,237,2.655,238,2.311,239,1.628,240,3.938,241,2.311,242,3.244,243,3.244,244,3.727,245,4.498,246,2.311,247,2.655,248,3.829,249,2.311,250,2.655,251,3.205,252,4.498,253,3.205,277,2.468]],["title/modules/CoursesModule.html",[0,1.769,13,2.681]],["body/modules/CoursesModule.html",[0,2.744,2,2.104,3,2.003,4,2.341,5,2.341,6,2.104,7,3.67,8,2.341,12,0.014,13,5.405,14,3.843,17,3.214,18,2.341,19,2.216,20,0.132,21,0.132,22,0.118,24,3.642,38,0.293,41,0.529,57,1.698,58,0.132,59,0.131,71,0.009,72,0.009,160,2.855,278,3.446,279,3.959,280,3.446,281,4.539,282,4.539,283,4.539,284,4.539,285,4.539,286,3.959,287,4.475,288,4.475,289,4.475,290,4.475,291,4.475,292,3.108,293,2.485,294,3.446,295,2.855,296,3.959,297,2.485,298,3.108,299,2.485,300,2.653,301,3.446]],["title/classes/CreateCourseDto.html",[59,0.133,302,2.885]],["body/classes/CreateCourseDto.html",[12,0.014,20,0.157,21,0.157,22,0.14,29,0.502,32,0.454,33,0.358,38,0.227,58,0.157,59,0.202,71,0.01,72,0.01,73,1.523,79,0.23,83,2.038,88,1.598,109,1.417,195,1.986,197,2.384,201,4.149,207,1.146,302,4.395,303,6.228,304,3.69,305,6.764,306,4.702,307,4.702,308,4.702,309,4.492,310,5.617,311,4.492,312,2.78]],["title/injectables/CreateCourseUseCase.html",[120,0.557,281,2.511]],["body/injectables/CreateCourseUseCase.html",[12,0.014,20,0.148,21,0.148,22,0.132,25,0.72,29,0.435,31,0.629,32,0.446,33,0.235,34,0.435,36,0.475,38,0.26,41,0.593,58,0.148,59,0.147,71,0.01,72,0.01,79,0.217,88,1.341,118,0.67,120,0.817,121,1.386,124,1.707,136,0.872,141,2.474,142,1.588,162,1.247,167,2.785,168,1.669,173,1.337,179,4.128,180,0.841,195,1.83,201,3.68,254,3.17,264,2.047,276,2.624,281,3.684,313,3.862,314,2.572,315,2.974,316,4.438,317,3.862,318,4.438,319,1.806,320,2.245,321,2.974,322,2.245,323,4.438,324,4.438,325,4.438,326,4.438]],["title/controllers/CreateCoursesController.html",[75,0.845,287,2.885]],["body/controllers/CreateCoursesController.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.675,29,0.299,31,0.432,32,0.247,33,0.291,34,0.299,36,0.432,38,0.262,41,0.538,57,1.259,58,0.135,59,0.134,71,0.009,72,0.009,75,0.852,78,1.576,79,0.197,83,1.214,84,2.906,88,1.544,89,2.152,92,2.152,93,1.576,94,2.152,95,2.152,96,2.152,97,2.07,99,3.686,100,2.255,105,1.576,106,2.152,107,3.686,108,2.755,109,1.214,112,1.354,114,1.576,115,2.632,116,1.576,118,0.608,136,0.792,142,1.249,162,1.187,166,1.64,180,0.764,195,2.032,257,2.739,262,3.163,276,2.383,281,3.453,287,3.967,293,2.53,327,3.507,328,2.039,329,4.03,330,4.03,331,4.318,332,3.163,333,4.318,334,4.318,335,3.163,336,4.03,337,2.332,338,3.253,339,2.701,340,2.701,341,1.64,342,3.163,343,1.782,344,3.507,345,2.53,346,4.03,347,3.507]],["title/classes/CreateLessonDto.html",[59,0.133,348,2.885]],["body/classes/CreateLessonDto.html",[12,0.014,20,0.146,21,0.146,22,0.129,29,0.515,32,0.443,33,0.368,38,0.242,58,0.146,59,0.192,71,0.01,72,0.01,73,1.41,79,0.213,83,2.093,88,1.591,109,1.311,151,1.89,197,2.266,207,1.122,233,2.169,309,4.539,310,5.676,311,4.539,312,2.573,348,4.178,349,6.293,350,3.416,351,3.658,352,5.45,353,6.944,354,4.352,355,4.352,356,4.352,357,4.696,358,4.352,359,1.845]],["title/injectables/CreateLessonUseCase.html",[120,0.557,360,2.511]],["body/injectables/CreateLessonUseCase.html",[12,0.014,20,0.116,21,0.116,22,0.147,25,0.606,29,0.366,31,0.529,32,0.424,33,0.262,34,0.366,36,0.37,38,0.258,41,0.462,58,0.116,59,0.115,71,0.008,72,0.008,79,0.169,88,1.283,118,0.522,120,0.688,121,1.08,124,1.437,135,2.626,136,1.309,141,2.605,142,1.618,151,1.292,162,1.093,167,3.62,168,1.301,173,1.489,179,2.17,180,0.937,195,1.292,204,1.596,207,0.87,233,1.966,254,3.023,257,1.407,264,1.723,314,2.256,319,1.407,320,1.749,322,1.749,351,3.369,360,3.102,361,3.009,362,2.316,363,3.68,364,3.457,365,3.457,366,3.457,367,3.457,368,2.386,369,1.837,370,2.493,371,1.749,372,2.316,373,2.044,374,2.17,375,2.316,376,1.859,377,2.713,378,2.713,379,2.316,380,2.316,381,1.934,382,1.162,383,3.009,384,3.009,385,3.009,386,3.009,387,3.009,388,3.009,389,3.009,390,3.009,391,3.009,392,4.301,393,3.009,394,3.009,395,3.009,396,3.009,397,3.009,398,3.009,399,3.009,400,3.009,401,4.301,402,2.493,403,3.009,404,3.009,405,3.009,406,3.457]],["title/controllers/CreateLessonsController.html",[75,0.845,407,2.885]],["body/controllers/CreateLessonsController.html",[12,0.014,20,0.113,21,0.113,22,0.1,25,0.595,29,0.25,31,0.361,32,0.381,33,0.257,34,0.25,36,0.361,38,0.245,41,0.45,57,1.052,58,0.113,59,0.112,71,0.008,72,0.008,75,0.712,78,1.318,79,0.165,83,1.015,84,2.429,88,1.545,89,1.897,92,1.897,93,1.318,94,1.897,95,1.897,96,1.897,97,1.825,99,3.251,100,2.714,105,1.318,106,1.897,107,3.251,108,2.578,109,1.015,112,1.132,114,1.318,115,2.433,116,1.318,118,0.508,132,3.003,136,1.118,142,1.101,148,2.257,149,0.593,151,1.626,162,1.078,166,1.371,180,0.638,195,1.268,207,0.858,233,2.393,257,2.683,293,2.114,331,3.807,332,2.644,337,2.057,341,1.371,342,2.644,343,2.513,345,2.114,351,2.876,360,3.045,373,1.992,376,2.34,382,1.132,402,2.429,407,3.498,408,2.932,409,2.114,410,3.369,411,2.932,412,3.369,413,2.342,414,1.626,415,3.369,416,1.79,417,2.869,418,2.257,419,2.257,420,2.257,421,3.369,422,3.369,423,3.369,424,3.369,425,3.369,426,2.114,427,3.369,428,5.685,429,5.685,430,5.685,431,3.045,432,3.369,433,3.369,434,3.369,435,3.369,436,3.369,437,3.369,438,3.369,439,2.114,440,3.369,441,3.369]],["title/controllers/CreateUserController.html",[75,0.845,442,2.885]],["body/controllers/CreateUserController.html",[12,0.014,20,0.131,21,0.131,22,0.116,25,0.661,29,0.29,31,0.419,32,0.239,33,0.285,34,0.29,36,0.419,38,0.259,41,0.522,57,1.222,58,0.131,59,0.13,67,2.146,71,0.009,72,0.009,75,0.826,78,1.53,79,0.191,83,1.178,84,2.82,88,1.575,89,2.108,92,2.108,93,1.53,94,2.108,95,2.108,96,2.108,97,2.027,99,3.611,100,2.188,105,1.53,106,2.108,107,3.611,108,2.818,109,1.178,112,1.314,114,1.53,115,2.726,116,1.53,118,0.59,136,0.769,142,1.223,162,1.169,166,1.592,180,0.741,257,2.705,293,2.454,331,4.229,332,3.069,333,4.229,334,4.229,335,3.069,341,1.592,342,3.069,343,1.729,344,3.403,442,3.886,443,3.403,444,3.91,445,4.947,446,3.91,447,3.91,448,4.69,449,3.611,450,3.91,451,3.91,452,3.91,453,2.82,454,3.187,455,3.187,456,2.62,457,2.62,458,2.82,459,3.91,460,3.403]],["title/classes/CreateUserDto.html",[59,0.133,445,2.681]],["body/classes/CreateUserDto.html",[12,0.014,20,0.136,21,0.136,22,0.121,29,0.525,32,0.433,33,0.375,38,0.235,58,0.136,59,0.184,67,2.057,71,0.009,72,0.009,73,1.322,79,0.2,83,2.132,88,1.442,109,1.23,151,1.85,175,3,176,3.266,177,3.58,197,2.171,207,1.147,309,4.581,310,5.729,311,4.581,312,2.414,352,5.554,359,1.731,368,3.044,445,3.719,461,6.352,462,3.204,463,4.082,464,4.082,465,6.766,466,4.082,467,4.082,468,4.082,469,4.082,470,5.55]],["title/interfaces/CreateUserRequest.html",[239,1.769,471,2.885]],["body/interfaces/CreateUserRequest.html",[12,0.014,20,0.126,21,0.126,22,0.112,32,0.437,33,0.365,38,0.265,41,0.505,58,0.126,59,0.125,67,2.002,71,0.009,72,0.009,79,0.185,118,0.57,120,0.733,123,2.372,124,1.099,136,1.035,141,1.98,142,1.374,151,1.95,162,0.716,163,2.924,167,3.304,168,1.422,169,2.966,170,2.533,171,1.745,172,2.235,173,1.139,174,2.235,175,3.101,176,3.376,177,3.606,180,1.241,181,2.966,182,2.966,184,2.966,197,2.059,207,1.204,239,1.671,277,2.533,314,1.478,359,1.602,368,2.541,426,2.372,449,3.527,454,2.235,458,2.725,471,4.366,472,2.966,473,4.131,474,3.289,475,3.289,476,4.131,477,3.289,478,3.795,479,2.966,480,2.966,481,3.289,482,2.966,483,2.533,484,3.289,485,2.372,486,3.289,487,3.289]],["title/injectables/CreateUserUseCase.html",[120,0.557,454,2.366]],["body/injectables/CreateUserUseCase.html",[12,0.014,20,0.128,21,0.128,22,0.114,25,0.652,29,0.394,31,0.569,32,0.424,33,0.282,34,0.394,36,0.411,38,0.267,41,0.512,58,0.128,59,0.127,67,2.012,71,0.009,72,0.009,79,0.188,118,0.579,120,0.74,121,1.198,123,2.407,124,1.546,136,1.045,141,2,142,1.385,151,1.809,162,1.157,163,3.457,166,1.561,167,3.337,168,1.443,169,3.01,170,2.569,171,1.77,172,2.267,173,1.156,174,2.267,175,2.794,176,3.042,177,3.087,180,1.249,181,3.01,182,3.01,184,3.01,207,1.044,239,1.695,314,2.387,317,3.337,359,1.626,368,2.567,426,2.407,449,3.562,454,3.144,458,2.765,471,4.751,472,3.01,473,4.172,474,3.337,475,3.337,476,4.172,477,3.337,478,3.833,479,3.01,480,3.01,481,3.337,482,3.01,483,2.569,484,3.337,485,2.407,486,3.337,487,3.337,488,2.569,489,3.834,490,3.834]],["title/modules/DatabaseModule.html",[0,1.769,14,2.126]],["body/modules/DatabaseModule.html",[0,2.891,2,2.332,3,2.22,4,2.595,5,2.595,6,2.332,7,3.867,8,3.867,12,0.014,14,4.323,17,3.445,18,2.595,19,2.455,20,0.147,21,0.147,22,0.13,38,0.27,41,0.586,58,0.147,59,0.146,71,0.01,72,0.01,171,3.699,319,3.262,371,4.054,491,3.819,492,3.819,493,3.819,494,4.171,495,4.388,496,4.388,497,4.388,498,4.388,499,4.388]],["title/controllers/DeleteCourseByIdController.html",[75,0.845,290,2.885]],["body/controllers/DeleteCourseByIdController.html",[12,0.014,20,0.138,21,0.138,22,0.123,25,0.686,29,0.306,31,0.442,32,0.253,33,0.219,34,0.306,36,0.442,38,0.236,41,0.551,57,1.289,58,0.138,59,0.137,71,0.009,72,0.009,75,0.872,78,1.613,79,0.202,83,1.243,88,1.553,89,2.186,92,2.186,93,1.613,94,2.186,95,2.186,96,2.186,97,1.552,105,1.613,106,2.186,108,2.778,109,1.243,112,1.386,114,1.613,115,2.658,116,1.613,132,3.06,136,0.811,149,1.196,151,1.461,162,1.202,180,0.782,195,1.914,207,0.957,258,3.139,282,3.508,290,4.03,299,2.589,328,2.087,337,2.369,339,2.764,340,2.764,341,1.679,343,2.802,382,1.386,413,2.698,414,1.991,416,2.192,439,2.589,500,3.59,501,3.237,502,3.237,503,2.974,504,4.386,505,3.237,506,3.237,507,4.125,508,2.974,509,3.237,510,3.59,511,2.589,512,2.439]],["title/injectables/DeleteCourseByIdUseCase.html",[120,0.557,282,2.511]],["body/injectables/DeleteCourseByIdUseCase.html",[12,0.014,20,0.152,21,0.152,22,0.135,25,0.731,29,0.442,31,0.638,32,0.365,33,0.316,34,0.442,36,0.486,38,0.248,41,0.606,58,0.152,59,0.151,71,0.01,72,0.01,79,0.222,120,0.829,121,1.418,124,1.732,135,2.412,136,0.892,141,2.241,142,1.352,149,0.799,151,1.846,162,1.26,168,1.708,173,1.368,180,1.129,207,1.135,254,3.19,258,2.007,264,2.078,282,3.739,314,2.33,315,3.042,319,1.848,320,2.297,321,3.042,322,2.297,328,2.297,369,2.412,381,2.54,382,1.525,483,3.042,513,3.951,514,4.539,515,3.334,516,4.539,517,3.563,518,3.273,519,5.958,520,3.563,521,4.539]],["title/controllers/DeleteLessonByIdController.html",[75,0.845,522,2.885]],["body/controllers/DeleteLessonByIdController.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.676,29,0.3,31,0.433,32,0.247,33,0.214,34,0.3,36,0.433,38,0.233,41,0.54,57,1.262,58,0.135,59,0.134,71,0.009,72,0.009,75,0.854,78,1.58,79,0.198,83,1.218,88,1.545,89,2.156,92,2.156,93,1.58,94,2.156,95,2.156,96,2.156,97,1.52,105,1.58,106,2.156,108,2.758,109,1.218,112,1.358,114,1.58,115,2.635,116,1.58,132,3.253,136,0.794,149,1.104,162,1.189,180,0.766,207,1.098,233,2.203,258,3.217,299,2.536,337,2.336,341,1.644,343,2.773,368,2.661,376,2.534,382,1.358,409,2.536,413,2.661,414,1.951,416,2.147,418,2.707,419,2.707,420,2.707,439,2.536,501,3.171,502,3.171,504,4.325,505,3.171,506,3.171,508,2.913,509,3.171,511,2.536,512,2.389,522,3.974,523,3.516,524,4.04,525,4.04,526,3.459]],["title/injectables/DeleteLessonByIdUseCase.html",[120,0.557,526,2.511]],["body/injectables/DeleteLessonByIdUseCase.html",[12,0.014,20,0.144,21,0.144,22,0.128,25,0.705,29,0.426,31,0.616,32,0.352,33,0.305,34,0.426,36,0.461,38,0.257,41,0.575,58,0.144,59,0.143,71,0.01,72,0.01,79,0.211,120,0.801,121,1.345,124,1.672,135,3.056,136,0.846,141,2.164,142,1.305,149,0.758,162,1.228,168,1.619,173,1.733,180,1.09,195,1.504,204,1.987,207,1.175,254,3.209,258,1.903,264,2.006,314,2.25,319,1.752,320,2.178,322,2.178,362,2.884,363,3.056,368,3.127,369,2.287,371,3.498,372,2.884,374,2.702,375,2.884,376,2.437,377,3.378,378,3.378,379,2.884,380,2.884,381,2.409,382,1.446,515,3.218,526,3.61,527,3.746,528,4.305,529,4.305,530,4.305]],["title/controllers/DeleteUserController.html",[75,0.845,531,2.885]],["body/controllers/DeleteUserController.html",[12,0.014,20,0.139,21,0.139,22,0.123,25,0.688,29,0.307,31,0.444,32,0.254,33,0.22,34,0.307,36,0.444,38,0.237,41,0.554,57,1.295,58,0.139,59,0.138,67,2.132,71,0.009,72,0.009,75,0.876,78,1.622,79,0.203,83,1.25,88,1.555,89,2.194,92,2.194,93,1.622,94,2.194,95,2.194,96,2.194,97,1.56,105,1.622,106,2.194,108,2.783,109,1.25,112,1.393,114,1.622,115,2.663,116,1.622,132,3.069,136,0.815,149,1.119,151,1.466,162,1.205,180,0.786,207,0.959,258,3.145,299,2.603,337,2.378,341,1.688,343,2.81,382,1.393,413,2.708,414,2.002,416,2.203,439,2.603,456,2.778,457,2.778,501,3.254,502,3.254,504,4.402,505,3.254,506,3.254,508,2.99,509,3.254,510,3.609,511,2.603,512,2.452,531,4.044,532,3.609,533,3.609,534,4.146,535,3.52]],["title/injectables/DeleteUserUseCase.html",[120,0.557,535,2.511]],["body/injectables/DeleteUserUseCase.html",[12,0.014,20,0.157,21,0.157,22,0.139,25,0.746,29,0.451,31,0.652,32,0.373,33,0.322,34,0.451,36,0.502,38,0.251,41,0.626,58,0.157,59,0.156,71,0.01,72,0.01,79,0.229,120,0.847,121,1.464,124,1.769,135,2.491,141,1.763,142,1.064,149,0.825,151,1.869,162,1.28,163,3.665,168,1.763,171,2.164,172,2.772,173,1.413,174,2.772,180,0.889,207,1.146,258,2.072,264,2.122,314,2.38,426,2.942,488,3.141,515,3.404,517,3.679,518,3.38,535,3.819,536,4.08,537,4.688,538,4.688,539,3.38,540,2.942,541,4.688]],["title/controllers/FindAllCoursesController.html",[75,0.845,288,2.885]],["body/controllers/FindAllCoursesController.html",[12,0.014,20,0.123,21,0.123,22,0.109,25,0.634,29,0.273,31,0.394,32,0.366,33,0.361,34,0.273,36,0.394,38,0.241,41,0.492,57,1.15,58,0.123,59,0.122,71,0.009,72,0.009,75,0.778,78,1.44,79,0.18,83,1.11,87,2.615,88,1.556,89,2.022,92,2.022,93,1.44,94,2.022,95,2.022,96,2.022,97,1.385,105,1.44,106,2.022,108,2.532,109,1.11,112,1.237,114,1.44,115,2.336,116,1.44,118,0.556,136,0.724,162,1.132,166,1.499,179,4.064,180,0.698,259,3.531,268,4.17,283,3.244,288,3.727,295,2.655,328,3.45,337,2.191,338,3.056,339,2.468,340,2.468,341,1.499,431,3.244,478,2.655,485,3.244,542,3.205,543,3.205,544,4.738,545,2.89,546,3.056,547,3.683,548,4.056,549,2.468,550,3.205,551,4.966,552,5.082,553,3.683,554,4.056,555,4.056,556,3.683,557,2.89,558,2.89,559,5.197,560,2.468,561,3.205,562,3.205,563,3.683,564,3.683]],["title/injectables/FindAllCoursesUseCase.html",[120,0.557,283,2.511]],["body/injectables/FindAllCoursesUseCase.html",[12,0.014,20,0.149,21,0.149,22,0.132,25,0.721,29,0.436,31,0.63,32,0.36,33,0.312,34,0.436,36,0.477,38,0.261,41,0.594,58,0.149,59,0.148,71,0.01,72,0.01,79,0.218,118,0.672,120,0.819,121,1.39,124,1.71,136,1.156,141,1.674,142,1.01,162,1.248,168,1.674,173,1.341,180,0.843,195,1.163,254,3.172,264,2.051,268,3.976,271,2.793,276,2.631,283,3.691,314,2.3,315,2.982,319,1.811,320,2.251,321,2.982,322,2.251,328,3.332,369,2.364,382,1.495,431,2.793,544,4.881,551,3.94,565,3.873,566,4.45,567,5.88,568,4.45,569,4.45,570,4.45,571,3.493,572,4.45]],["title/controllers/FindAllLessonsByCourseController.html",[75,0.845,573,2.885]],["body/controllers/FindAllLessonsByCourseController.html",[12,0.014,20,0.119,21,0.119,22,0.106,25,0.62,29,0.264,31,0.382,32,0.359,33,0.381,34,0.264,36,0.382,38,0.238,41,0.476,57,1.114,58,0.119,59,0.118,71,0.008,72,0.008,75,0.754,78,1.395,79,0.175,83,1.075,87,2.556,88,1.545,92,1.976,93,1.395,94,1.976,95,1.976,96,1.976,97,1.342,105,1.395,106,1.976,108,2.635,109,1.075,112,1.198,114,1.395,115,2.497,116,1.395,118,0.538,136,0.701,162,1.112,166,1.451,179,4.007,180,0.676,195,1.321,204,1.646,207,0.885,259,3.47,268,4.177,337,2.142,341,1.451,345,2.238,376,2.208,382,1.198,409,2.238,413,2.439,414,1.722,416,1.895,417,3.47,418,2.39,419,2.39,420,2.39,431,3.171,478,2.571,485,3.171,543,3.104,544,4.689,545,2.799,546,2.988,550,3.104,551,4.926,552,5.01,554,3.966,555,3.966,557,2.799,558,2.799,559,5.107,561,3.104,562,3.104,573,3.643,574,3.104,575,3.566,576,3.566,577,3.566,578,3.566,579,3.171,580,3.104,581,3.566,582,3.566]],["title/injectables/FindAllLessonsByCourseUseCase.html",[120,0.557,579,2.511]],["body/injectables/FindAllLessonsByCourseUseCase.html",[12,0.014,20,0.134,21,0.134,22,0.119,25,0.672,29,0.406,31,0.587,32,0.336,33,0.29,34,0.406,36,0.429,38,0.27,41,0.536,58,0.134,59,0.133,71,0.009,72,0.009,79,0.196,118,0.605,120,0.763,121,1.253,124,1.594,136,1.228,141,2.062,142,1.244,162,1.184,168,1.508,173,1.652,180,1.039,195,1.433,204,2.884,207,0.943,233,1.253,254,3.151,264,1.912,268,3.857,271,3.441,314,2.443,319,1.632,320,2.028,322,2.028,362,2.687,363,3.857,369,2.13,370,2.891,371,2.028,372,2.687,373,2.371,374,2.517,375,2.687,376,2.35,380,2.687,381,2.244,382,1.842,431,2.517,544,4.712,551,4.5,571,3.147,579,3.441,583,3.49,584,4.01,585,3.49,586,4.01,587,4.01,588,4.01,589,4.01]],["title/controllers/FindAllUserController.html",[75,0.845,590,2.885]],["body/controllers/FindAllUserController.html",[12,0.014,20,0.142,21,0.142,22,0.126,25,0.698,29,0.314,31,0.454,32,0.259,33,0.224,34,0.314,36,0.454,38,0.256,41,0.566,57,1.323,58,0.142,59,0.141,67,1.231,71,0.009,72,0.009,75,0.895,78,1.657,79,0.207,83,1.276,87,2.878,88,1.504,89,2.225,92,2.225,93,1.657,94,2.225,95,2.225,96,2.225,97,2.14,105,1.657,106,2.225,108,2.687,109,1.276,112,1.423,114,1.657,115,2.513,116,1.657,118,0.639,132,3.102,136,1.119,151,1.107,162,1.218,166,1.724,180,0.803,259,3.364,295,3.054,337,2.412,341,1.724,343,2.84,439,2.658,455,3.364,456,2.838,457,2.838,540,4.311,546,3.364,548,4.465,549,2.838,560,2.838,590,4.102,591,3.686,592,4.235,593,4.235,594,4.235,595,4.235,596,3.571,597,4.235,598,4.235,599,4.235,600,4.235]],["title/injectables/FindAllUsersUseCase.html",[120,0.557,596,2.511]],["body/injectables/FindAllUsersUseCase.html",[12,0.014,20,0.158,21,0.158,22,0.14,25,0.749,29,0.453,31,0.654,32,0.374,33,0.324,34,0.453,36,0.505,38,0.252,41,0.63,58,0.158,59,0.157,71,0.01,72,0.01,79,0.231,118,0.712,120,0.85,121,1.473,124,1.776,135,2.505,136,0.927,141,1.774,142,1.07,151,1.597,162,1.284,163,3.671,166,1.919,168,1.774,171,2.177,172,2.789,173,1.421,174,2.789,180,0.894,207,1.022,314,2.389,426,2.96,488,3.16,517,3.701,518,3.4,539,3.4,540,4.252,596,3.833,601,4.104,602,4.716,603,6.107,604,4.716,605,4.716,606,4.716]],["title/controllers/FindCourseByIdController.html",[75,0.845,289,2.885]],["body/controllers/FindCourseByIdController.html",[12,0.014,20,0.139,21,0.139,22,0.123,25,0.689,29,0.308,31,0.445,32,0.255,33,0.22,34,0.308,36,0.445,38,0.254,41,0.555,57,1.299,58,0.139,59,0.138,71,0.009,72,0.009,75,0.879,78,1.626,79,0.203,83,1.253,87,2.843,88,1.555,89,2.198,92,2.198,93,1.626,94,2.198,95,2.198,96,2.198,97,2.114,105,1.626,106,2.198,108,2.785,109,1.253,112,1.397,114,1.626,115,2.666,116,1.626,118,0.627,136,0.817,149,1.12,162,1.206,166,1.692,180,0.788,195,1.961,207,0.96,260,2.985,272,2.458,284,3.527,289,4.051,297,2.609,328,2.103,337,2.382,338,3.323,339,2.786,340,2.786,341,1.692,382,1.397,413,2.713,414,2.007,416,2.209,503,2.998,512,2.458,546,3.323,549,2.786,560,2.786,607,3.618,608,3.618,609,4.157,610,3.618,611,4.157,612,4.157]],["title/injectables/FindCourseByIdUseCase.html",[120,0.557,284,2.511]],["body/injectables/FindCourseByIdUseCase.html",[12,0.014,20,0.158,21,0.158,22,0.14,25,0.749,29,0.453,31,0.654,32,0.374,33,0.324,34,0.453,36,0.505,38,0.267,41,0.63,58,0.158,59,0.157,71,0.01,72,0.01,79,0.231,118,0.712,120,0.85,121,1.473,124,1.776,136,0.927,141,1.774,142,1.07,149,0.83,162,1.284,168,1.774,173,1.421,180,0.894,195,1.873,207,1.022,254,3.223,264,2.13,276,2.789,284,3.833,314,2.389,315,3.16,319,1.919,320,2.386,321,3.16,322,2.386,369,2.505,381,2.639,382,1.585,515,3.417,520,3.701,613,4.104,614,4.716,615,4.716]],["title/controllers/FindLessonByIdController.html",[75,0.845,616,2.885]],["body/controllers/FindLessonByIdController.html",[12,0.014,20,0.131,21,0.131,22,0.116,25,0.662,29,0.291,31,0.42,32,0.24,33,0.208,34,0.291,36,0.42,38,0.248,41,0.524,57,1.225,58,0.131,59,0.13,71,0.009,72,0.009,75,0.828,78,1.533,79,0.192,83,1.181,87,2.731,88,1.534,89,2.111,92,2.111,93,1.533,94,2.111,95,2.111,96,2.111,97,2.031,105,1.533,106,2.111,108,2.729,109,1.181,112,1.317,114,1.533,115,2.602,116,1.533,118,0.592,132,3.212,136,1.061,148,2.627,149,1.171,162,1.17,166,1.596,180,0.743,207,1.088,233,2.308,260,3.28,297,2.461,337,2.288,341,1.596,343,2.729,376,2.502,382,1.317,409,2.461,413,2.606,414,1.893,416,2.083,417,3.192,418,2.627,419,2.627,420,2.627,503,2.827,511,2.461,512,2.318,546,3.192,549,2.627,560,2.627,608,3.412,610,3.412,616,3.892,617,3.412,618,3.412,619,3.92,620,3.388,621,4.698,622,3.412]],["title/injectables/FindLessonByIdUseCase.html",[120,0.557,620,2.511]],["body/injectables/FindLessonByIdUseCase.html",[12,0.014,20,0.14,21,0.14,22,0.124,25,0.692,29,0.418,31,0.604,32,0.345,33,0.299,34,0.418,36,0.448,38,0.274,41,0.558,58,0.14,59,0.139,71,0.009,72,0.009,79,0.205,118,0.631,120,0.785,121,1.306,124,1.64,136,1.109,141,2.121,142,1.28,149,0.736,162,1.21,168,1.572,173,1.699,180,1.21,195,1.474,207,1.109,233,2.134,254,3.185,264,1.966,314,2.206,319,1.701,320,2.114,322,2.114,362,2.801,363,3.905,369,2.221,370,3.013,371,2.114,372,2.801,373,2.471,374,2.623,375,2.801,376,2.401,380,2.801,381,2.339,382,1.895,515,3.155,620,3.539,621,5.554,623,3.637,624,4.179,625,4.179,626,4.179,627,4.179,628,4.179,629,4.179,630,3.637]],["title/controllers/FindUserByIdController.html",[75,0.845,631,2.885]],["body/controllers/FindUserByIdController.html",[12,0.014,20,0.136,21,0.136,22,0.121,25,0.68,29,0.302,31,0.436,32,0.249,33,0.216,34,0.302,36,0.436,38,0.263,41,0.544,57,1.272,58,0.136,59,0.135,67,2.208,71,0.009,72,0.009,75,0.86,78,1.593,79,0.199,83,1.227,87,2.803,88,1.548,89,2.167,92,2.167,93,1.593,94,2.167,95,2.167,96,2.167,97,2.084,105,1.593,106,2.167,108,2.765,109,1.227,112,1.368,114,1.593,115,2.644,116,1.593,118,0.614,132,3.04,136,1.089,149,0.717,162,1.194,166,1.657,180,0.772,260,2.943,297,2.556,337,2.349,341,1.657,343,2.988,382,1.368,413,2.675,414,1.966,455,3.276,456,2.728,457,2.728,460,3.543,503,2.936,545,3.196,546,3.276,549,2.728,560,2.728,618,3.543,631,3.995,632,3.543,633,4.072,634,3.477,635,3.196,636,4.072,637,3.196,638,4.072,639,4.072]],["title/injectables/FindUserByIdUseCase.html",[120,0.557,634,2.511]],["body/injectables/FindUserByIdUseCase.html",[12,0.014,20,0.161,21,0.161,22,0.143,25,0.758,29,0.458,31,0.662,32,0.378,33,0.327,34,0.458,36,0.514,38,0.269,41,0.641,58,0.161,59,0.159,67,1.987,71,0.01,72,0.01,79,0.235,118,0.725,120,0.86,121,1.5,124,1.797,136,0.944,149,0.845,162,1.295,163,3.689,168,1.806,171,2.217,172,2.839,173,1.447,174,2.839,180,0.91,207,1.031,264,2.155,314,2.417,488,3.218,515,3.457,539,3.462,634,3.878,640,4.179,641,4.802,642,4.802,643,3.462,644,4.179]],["title/classes/Lesson.html",[59,0.133,233,1.25]],["body/classes/Lesson.html",[12,0.014,20,0.097,21,0.097,22,0.087,29,0.572,31,0.698,32,0.456,33,0.368,34,0.483,36,0.665,37,4.163,38,0.195,58,0.097,59,0.097,71,0.007,72,0.007,73,0.944,79,0.143,88,1.329,118,1.049,124,0.848,142,0.662,149,1.19,151,1.705,173,1.965,197,1.706,198,3.281,199,3.9,200,3.424,202,3.143,203,2.802,205,2.738,206,3.431,207,1.195,209,2.288,212,2.288,214,2.288,216,2.288,218,2.537,220,2.537,226,2.288,228,2.537,233,1.363,235,2.738,236,1.83,238,1.83,239,1.289,240,2.777,241,1.83,242,2.738,243,2.738,244,3.145,246,1.83,247,2.102,248,3.674,249,1.83,250,2.102,351,3.299,357,4.48,359,1.236,376,2.453,645,2.288,646,4.362,647,3.769,648,2.915,649,2.915,650,2.915,651,2.915,652,2.915,653,2.915,654,2.915,655,2.915,656,2.915,657,2.915,658,2.537,659,2.915,660,2.537,661,2.915,662,2.915,663,2.915,664,2.915,665,2.915,666,2.915,667,2.915,668,3.796,669,3.145,670,3.796,671,2.537,672,2.102,673,2.537]],["title/classes/LessonRepository.html",[59,0.133,363,2.126]],["body/classes/LessonRepository.html",[12,0.013,20,0.127,21,0.127,22,0.113,25,0.649,29,0.53,31,0.765,32,0.438,33,0.379,34,0.53,36,0.765,38,0.142,58,0.127,59,0.126,71,0.009,72,0.009,73,1.233,79,0.186,149,0.931,207,1.205,233,2.371,256,6.372,257,2.153,258,2.338,260,2.81,261,2.442,264,2.731,265,3.32,268,3.796,269,4.383,271,3.815,272,3.128,363,2.81,373,2.251,376,1.99,637,4.771,674,3.313,675,5.29,676,4.603,677,4.603,678,3.807,679,3.807,680,3.313,681,3.807,682,3.807,683,4.603,684,3.807,685,4.603,686,3.807,687,2.745]],["title/interfaces/LessonSchema.html",[239,1.769,647,2.885]],["body/interfaces/LessonSchema.html",[12,0.014,20,0.118,21,0.118,22,0.105,32,0.428,33,0.38,34,0.373,38,0.218,58,0.118,59,0.118,71,0.008,72,0.008,79,0.173,88,1.423,118,1.107,142,0.804,149,1.029,151,1.825,173,1.515,197,1.967,198,2.223,199,3.156,202,3.532,203,3.245,205,2.223,206,2.974,207,1.21,233,1.107,235,3.156,236,2.223,238,2.223,239,1.566,240,3.815,241,2.223,242,3.156,243,3.156,244,3.626,246,2.223,247,2.554,248,3.974,249,2.223,250,2.554,277,2.374,351,3.532,357,4.846,359,1.502,376,2.627,645,2.78,647,4.215,668,4.376,669,3.626,670,4.376,671,3.083,672,2.554,673,3.083]],["title/modules/LessonsModule.html",[0,1.769,15,2.681]],["body/modules/LessonsModule.html",[0,2.817,2,2.215,3,2.109,4,2.465,5,2.465,6,2.215,7,3.769,8,2.465,12,0.014,14,3.902,15,5.391,17,3.328,18,2.465,19,2.332,20,0.139,21,0.139,22,0.124,24,3.772,38,0.291,41,0.557,57,1.758,58,0.139,59,0.138,71,0.009,72,0.009,160,3.006,292,3.272,293,2.616,297,2.616,298,3.272,299,2.616,360,4.61,407,4.595,522,4.595,526,4.61,573,4.595,579,4.61,580,3.628,616,4.595,620,4.61,688,3.628,689,4.168,690,3.628,691,4.168,692,3.628,693,4.168]],["title/classes/LoginAuthDto.html",[59,0.133,82,2.681]],["body/classes/LoginAuthDto.html",[12,0.014,20,0.156,21,0.156,22,0.138,29,0.499,33,0.357,34,0.529,38,0.173,58,0.156,59,0.155,67,2.204,71,0.01,72,0.01,73,1.51,79,0.228,82,4.061,83,2.03,88,1.373,109,1.404,175,3.135,176,3.413,177,3.74,179,4.757,197,2.37,207,1.144,309,4.477,352,5.286,552,5.598,694,6.207,695,4.056,696,4.66,697,5.274,698,4.66,699,4.66]],["title/classes/PrismaCourseMapper.html",[59,0.133,700,2.885]],["body/classes/PrismaCourseMapper.html",[12,0.014,20,0.152,21,0.152,22,0.135,25,0.732,29,0.443,31,0.639,32,0.433,33,0.316,34,0.443,36,0.639,38,0.222,58,0.152,59,0.151,71,0.01,72,0.01,73,1.475,79,0.223,88,1.217,118,0.901,142,1.355,149,0.801,195,2.059,201,3.34,202,3.02,203,2.198,240,2.419,359,1.93,700,4.304,701,3.962,702,4.727,703,4.685,704,4.685,705,5.969,706,6.679,707,4.553,708,5.969,709,4.553,710,3.962,711,3.962,712,3.962,713,3.962,714,3.962,715,4.553,716,4.553,717,4.553,718,4.553,719,4.553,720,3.962]],["title/injectables/PrismaCourseRepository.html",[120,0.557,319,1.628]],["body/injectables/PrismaCourseRepository.html",[12,0.014,20,0.1,21,0.1,22,0.089,25,0.546,29,0.489,31,0.706,32,0.403,33,0.349,34,0.489,36,0.673,38,0.245,41,0.4,58,0.1,59,0.1,60,1.882,71,0.007,72,0.007,79,0.147,112,1.007,118,0.888,120,0.62,121,0.936,124,0.872,136,1.408,149,1.107,162,1.458,180,1.192,195,1.978,204,3.042,207,0.994,254,1.888,257,1.813,258,1.969,259,2.634,260,2.367,261,2.056,262,3.496,264,2.541,265,2.796,267,3.877,268,3.501,269,4.534,271,3.336,272,2.634,274,3.877,319,1.813,345,2.796,374,1.882,494,3.292,697,3.877,700,2.162,706,5.734,710,2.609,720,2.609,721,2.609,722,2.353,723,2.998,724,3.212,725,2.998,726,2.998,727,2.998,728,2.998,729,2.998,730,2.353,731,2.998,732,2.009,733,2.609,734,4.454,735,2.998,736,3.212,737,2.998,738,2.998,739,4.454,740,2.998,741,4.454,742,4.454,743,4.454,744,2.998,745,2.353,746,2.998,747,2.998]],["title/classes/PrismaLessonMapper.html",[59,0.133,732,2.681]],["body/classes/PrismaLessonMapper.html",[12,0.014,20,0.148,21,0.148,22,0.131,25,0.719,29,0.434,31,0.627,32,0.428,33,0.31,34,0.434,36,0.627,38,0.218,58,0.148,59,0.147,71,0.01,72,0.01,73,1.433,79,0.217,88,1.194,118,0.884,142,1.33,149,0.779,151,1.532,202,2.964,203,2.136,204,2.043,233,2.417,237,3.191,240,2.351,351,2.964,359,1.876,376,2.204,702,4.69,703,4.598,704,4.598,732,3.926,748,3.851,749,5.858,750,6.633,751,4.425,752,5.858,753,4.425,754,4.425,755,3.851,756,3.851,757,3.851,758,3.851,759,3.851,760,4.425,761,3.851,762,4.425,763,4.425,764,4.425,765,4.425,766,4.425,767,4.425,768,3.851]],["title/injectables/PrismaLessonRepository.html",[120,0.557,371,2.024]],["body/injectables/PrismaLessonRepository.html",[12,0.014,20,0.098,21,0.098,22,0.087,25,0.538,29,0.502,31,0.726,32,0.415,33,0.359,34,0.502,36,0.7,38,0.232,41,0.392,58,0.098,59,0.097,60,1.843,71,0.007,72,0.007,79,0.144,112,0.987,118,0.792,120,0.611,121,0.917,124,0.854,136,1.145,149,1.151,162,1.482,180,1.239,204,1.356,207,1.157,233,2.299,237,2.117,257,1.785,258,1.939,260,2.331,261,2.025,264,2.599,265,2.753,268,3.474,269,4.2,271,3.656,272,2.594,363,2.331,371,2.219,376,2.191,494,3.259,637,4.571,675,4.57,676,3.818,677,3.818,680,2.556,683,3.818,685,3.818,687,3.163,722,2.305,724,3.163,730,2.305,732,1.968,733,2.556,736,3.786,745,2.305,750,5.069,761,2.556,768,2.556,769,2.556,770,2.937,771,2.937,772,2.937,773,2.937,774,2.937,775,2.937,776,2.937,777,2.937,778,4.386,779,2.937,780,2.937,781,4.386,782,2.937,783,2.937,784,2.937,785,4.386,786,2.556]],["title/injectables/PrismaService.html",[120,0.557,494,2.239]],["body/injectables/PrismaService.html",[12,0.014,20,0.182,21,0.182,22,0.162,25,0.82,29,0.404,36,0.583,38,0.249,41,0.728,58,0.182,59,0.181,60,3.419,71,0.011,72,0.011,79,0.267,120,0.931,121,1.702,162,1.372,180,1.032,359,2.309,494,3.743,787,4.741,788,4.823,789,7.239,790,7.888,791,5.447,792,5.447]],["title/classes/PrismaUserMapper.html",[59,0.133,793,2.885]],["body/classes/PrismaUserMapper.html",[12,0.014,20,0.148,21,0.148,22,0.131,25,0.717,29,0.434,31,0.626,32,0.428,33,0.31,34,0.434,36,0.626,38,0.218,58,0.148,59,0.146,67,2.276,71,0.01,72,0.01,73,1.429,79,0.216,118,0.882,142,1.327,149,0.777,151,1.529,175,2.479,176,2.699,177,2.958,187,3.463,189,3.84,190,3.84,192,3.463,193,3.84,194,3.463,202,2.958,203,2.13,240,2.345,359,1.871,368,3.166,702,4.686,703,4.589,704,4.589,793,4.216,794,3.84,795,5.847,796,6.628,797,4.413,798,5.847,799,4.413,800,3.84,801,4.413,802,4.413,803,4.413,804,4.413,805,4.413,806,4.413,807,4.413,808,3.84]],["title/injectables/PrismaUserRepository.html",[120,0.557,171,1.847]],["body/injectables/PrismaUserRepository.html",[12,0.014,20,0.098,21,0.098,22,0.087,25,0.539,29,0.517,31,0.726,32,0.415,33,0.359,34,0.503,36,0.726,38,0.232,41,0.393,58,0.098,59,0.098,60,1.847,67,2.23,71,0.007,72,0.007,79,0.144,112,0.989,118,1.023,120,0.612,121,0.919,124,0.855,136,1.286,149,1.098,162,1.503,163,2.121,171,2.028,175,1.862,176,2.028,180,1.285,207,1.125,257,1.788,258,1.942,259,3.447,260,2.334,261,2.028,264,2.653,265,2.757,272,2.597,494,3.262,540,1.847,722,2.309,724,3.167,730,2.309,736,3.167,745,4.126,793,2.121,796,5.074,800,2.56,808,2.56,809,2.56,810,3.823,811,3.823,812,2.942,813,3.823,814,2.942,815,2.942,816,2.942,817,3.823,818,2.942,819,2.942,820,3.823,821,2.942,822,3.823,823,2.942,824,2.942,825,2.942,826,4.393,827,2.942,828,5.256,829,5.256,830,2.942,831,2.942,832,2.942,833,2.942]],["title/controllers/UpdateCourseByIdController.html",[75,0.845,291,2.885]],["body/controllers/UpdateCourseByIdController.html",[12,0.014,20,0.129,21,0.129,22,0.114,25,0.653,29,0.285,31,0.412,32,0.235,33,0.204,34,0.285,36,0.412,38,0.258,41,0.513,57,1.201,58,0.129,59,0.128,71,0.009,72,0.009,75,0.812,78,1.503,79,0.188,83,1.158,87,2.694,88,1.527,89,2.083,92,2.083,93,1.503,94,2.083,95,2.083,96,2.083,97,2.003,100,2.98,105,1.503,106,2.083,108,2.709,109,1.158,112,1.292,114,1.503,115,2.58,116,1.503,118,0.58,132,3.185,136,1.047,148,2.576,149,1.075,151,1.392,162,1.158,166,1.564,180,0.729,195,1.811,207,0.922,261,3.198,285,3.342,291,3.84,300,2.576,328,1.945,337,2.258,338,3.149,339,2.576,340,2.576,341,1.564,343,2.701,345,2.413,347,3.345,382,1.292,413,2.571,414,1.856,416,2.042,511,2.413,512,2.273,834,3.345,835,3.017,836,5.019,837,3.345,838,3.844,839,3.017,840,3.844,841,2.772,842,2.413,843,3.017,844,3.345,845,3.017]],["title/classes/UpdateCourseDto.html",[59,0.133,836,2.681]],["body/classes/UpdateCourseDto.html",[12,0.014,20,0.15,21,0.15,22,0.133,29,0.49,32,0.447,33,0.35,34,0.556,38,0.246,58,0.15,59,0.196,71,0.01,72,0.01,73,1.45,79,0.219,83,1.99,88,1.581,109,1.349,195,1.959,197,2.309,201,4.084,207,1.131,257,1.821,302,3.227,304,3.512,309,4.407,311,4.407,312,2.646,788,4.256,836,3.955,843,3.512,846,6.111,847,5.902,848,6.604,849,4.475,850,4.475,851,4.475,852,3.512,853,5.511]],["title/injectables/UpdateCourseUseCase.html",[120,0.557,285,2.511]],["body/injectables/UpdateCourseUseCase.html",[12,0.014,20,0.138,21,0.138,22,0.123,25,0.686,29,0.414,31,0.599,32,0.342,33,0.296,34,0.414,36,0.442,38,0.264,41,0.551,58,0.138,59,0.137,71,0.009,72,0.009,79,0.202,118,0.622,120,0.778,121,1.289,124,1.625,135,2.969,136,0.811,141,2.103,142,1.268,149,0.984,151,1.776,162,1.202,168,1.552,173,1.243,180,1.059,195,1.776,207,1.105,254,3.104,261,1.904,264,1.949,276,2.439,285,3.508,314,2.479,315,2.764,319,1.679,320,2.087,321,2.764,322,2.087,328,2.087,369,2.192,379,2.764,381,2.308,382,1.386,483,2.764,515,2.308,518,2.974,520,3.237,712,3.59,713,3.59,714,3.59,836,5.017,842,2.589,843,3.237,854,3.59,855,4.125,856,4.125,857,5.589,858,5.589,859,5.589,860,4.125]],["title/controllers/UpdateLessonByIdController.html",[75,0.845,861,3.14]],["body/controllers/UpdateLessonByIdController.html",[12,0.014,20,0.126,21,0.126,22,0.112,25,0.643,29,0.279,31,0.403,32,0.23,33,0.278,34,0.279,36,0.403,38,0.243,41,0.502,57,1.175,58,0.126,59,0.125,71,0.009,72,0.009,75,0.795,78,1.471,79,0.184,83,1.133,87,2.654,88,1.519,89,2.052,92,2.052,93,1.471,94,2.052,95,2.052,96,2.052,97,1.973,100,2.935,105,1.471,106,2.052,107,3.515,108,2.688,109,1.133,112,1.264,114,1.471,115,2.556,116,1.471,118,0.568,132,3.155,136,1.031,162,1.145,166,1.531,180,0.713,207,1.074,233,2.147,261,3.173,300,2.521,337,2.224,341,1.531,343,2.67,368,2.533,376,2.458,382,1.264,409,2.361,411,3.274,413,2.533,414,1.816,416,1.999,418,2.521,419,2.521,420,2.521,439,2.361,511,2.361,687,4.712,835,2.952,837,3.274,839,2.952,841,2.712,842,2.361,844,3.274,845,2.952,861,4.117,862,3.274,863,5.071,864,3.761,865,3.761,866,2.952,867,3.782,868,5.246,869,3.761]],["title/injectables/UpdateLessonByIdUseCase.html",[120,0.557,867,2.885]],["body/injectables/UpdateLessonByIdUseCase.html",[12,0.014,20,0.106,21,0.106,22,0.138,25,0.571,29,0.345,31,0.499,32,0.285,33,0.247,34,0.345,36,0.341,38,0.259,41,0.425,58,0.106,59,0.106,71,0.008,72,0.008,79,0.156,118,0.481,120,0.649,121,0.995,124,1.354,135,2.475,136,1.324,141,2.617,142,1.578,151,0.833,162,1.044,167,2.924,168,1.198,173,1.404,180,1.044,195,1.44,204,1.47,207,1.098,233,1.893,254,2.949,261,1.47,264,1.624,314,2.154,319,1.296,320,1.611,322,1.611,351,2.357,362,2.134,363,3.578,368,2.659,369,1.692,370,2.297,371,1.611,372,2.134,373,1.884,374,1.999,375,2.134,376,1.752,377,2.5,378,2.5,379,2.134,380,2.134,381,1.782,382,1.565,383,2.772,384,2.772,385,2.772,386,2.772,387,2.772,388,2.772,389,2.772,390,2.772,391,2.772,392,4.054,393,2.772,394,2.772,395,2.772,396,2.772,397,2.772,398,2.772,399,2.772,400,2.772,401,4.054,402,2.297,403,2.772,404,2.772,405,2.772,585,2.772,630,2.772,687,3.971,711,2.772,755,2.772,756,2.772,757,2.772,758,2.772,759,2.772,842,1.999,863,4.06,866,2.5,867,3.359,870,2.772,871,3.185,872,6.059,873,3.185,874,3.185,875,3.185,876,3.185,877,4.658,878,4.658,879,4.658,880,4.658,881,3.185]],["title/classes/UpdateLessonDto.html",[59,0.133,863,2.681]],["body/classes/UpdateLessonDto.html",[12,0.014,20,0.138,21,0.138,22,0.123,29,0.504,32,0.435,33,0.36,34,0.565,38,0.253,58,0.138,59,0.186,71,0.009,72,0.009,73,1.34,79,0.202,83,2.05,88,1.575,109,1.246,151,1.858,197,2.19,207,1.106,233,2.381,257,1.683,309,4.461,311,4.461,312,2.446,348,2.982,350,3.246,351,3.596,357,4.577,359,1.753,788,4.037,852,3.246,853,5.578,863,3.752,866,3.246,882,6.186,883,5.599,884,6.802,885,4.136,886,4.136,887,4.136,888,4.136]],["title/controllers/UpdateUserController.html",[75,0.845,889,2.885]],["body/controllers/UpdateUserController.html",[12,0.014,20,0.126,21,0.126,22,0.112,25,0.643,29,0.279,31,0.403,32,0.23,33,0.199,34,0.279,36,0.403,38,0.256,41,0.502,57,1.175,58,0.126,59,0.125,67,2.07,71,0.009,72,0.009,75,0.795,78,1.471,79,0.184,83,1.133,87,2.654,88,1.593,89,2.052,92,2.052,93,1.471,94,2.052,95,2.052,96,2.052,97,1.973,100,2.935,105,1.471,106,2.052,108,2.857,109,1.133,112,1.264,114,1.471,115,2.784,116,1.471,118,0.568,132,2.916,136,1.031,148,2.521,149,0.662,162,1.145,166,1.531,180,0.713,261,3.017,300,2.521,333,4.117,334,4.117,335,2.952,337,2.224,341,1.531,343,2.889,345,2.361,382,1.264,413,2.533,414,1.816,448,4.565,453,2.712,455,3.102,456,2.521,457,2.521,512,2.224,533,3.274,835,2.952,839,2.952,841,3.782,842,2.361,845,2.952,889,3.782,890,3.274,891,4.992,892,3.761,893,3.761,894,3.761,895,3.293,896,3.761,897,3.761,898,3.761]],["title/classes/UpdateUserDto.html",[59,0.133,891,2.681]],["body/classes/UpdateUserDto.html",[12,0.014,20,0.159,21,0.159,22,0.141,29,0.504,32,0.417,33,0.36,34,0.565,38,0.253,58,0.159,59,0.204,71,0.01,72,0.01,73,1.541,79,0.233,83,2.05,175,2.884,177,3.442,197,2.403,207,1.15,257,1.937,311,4.512,312,2.814,445,3.188,453,3.431,462,3.735,788,4.429,852,3.735,853,5.642,891,4.116,899,6.257,900,6.143,901,6.803,902,4.758,903,4.758,904,4.758,905,4.141,906,3.735]],["title/injectables/UpdateUserUseCase.html",[120,0.557,895,2.511]],["body/injectables/UpdateUserUseCase.html",[12,0.014,20,0.138,21,0.138,22,0.122,25,0.684,29,0.414,31,0.598,32,0.342,33,0.296,34,0.414,36,0.441,38,0.272,41,0.55,58,0.138,59,0.137,67,1.841,71,0.009,72,0.009,79,0.201,118,0.621,120,0.777,121,1.285,123,2.582,124,1.622,136,1.097,141,1.548,142,0.934,149,0.982,162,1.2,163,3.532,168,1.548,170,3.738,171,1.899,172,2.433,173,1.24,174,2.433,175,1.744,180,1.287,187,3.229,192,3.229,194,3.229,207,0.955,264,1.946,314,2.182,449,2.757,453,2.966,473,3.229,476,4.379,485,2.582,488,2.757,515,3.122,539,2.966,643,2.966,644,3.58,842,2.582,891,5.014,895,3.502,907,3.58,908,4.114,909,4.114,910,5.579,911,6.33,912,4.114,913,4.114,914,4.114,915,4.114,916,4.114,917,4.114]],["title/classes/User.html",[59,0.133,67,1.163]],["body/classes/User.html",[12,0.014,20,0.099,21,0.099,22,0.088,29,0.569,31,0.702,32,0.457,33,0.37,34,0.486,36,0.67,37,4.19,38,0.196,58,0.099,59,0.098,67,1.283,71,0.007,72,0.007,73,0.958,79,0.145,118,1.025,124,0.86,142,0.671,149,1.196,151,1.714,173,1.976,175,2.78,176,3.027,177,3.317,197,1.725,198,3.31,199,3.925,200,3.462,202,3.163,203,1.428,205,2.769,206,3.457,207,1.197,209,2.322,212,2.322,214,2.322,216,2.322,226,2.322,235,2.769,236,1.857,238,1.857,239,1.308,240,2.802,241,1.857,242,2.769,243,2.769,246,1.857,248,3.697,249,1.857,359,1.254,368,3.019,658,2.575,660,2.575,669,3.18,672,2.133,918,2.322,919,4.411,920,3.803,921,2.959,922,2.959,923,2.959,924,2.959,925,2.959,926,2.959,927,2.959,928,2.959,929,2.959,930,2.959,931,2.959,932,2.959,933,2.959,934,2.959,935,2.959,936,2.959,937,2.959,938,2.959,939,2.959,940,2.575,941,3.839,942,3.839,943,3.839,944,2.575,945,2.575,946,2.575]],["title/modules/UserModule.html",[0,1.769,16,2.681]],["body/modules/UserModule.html",[0,2.744,2,2.104,3,2.003,4,2.341,5,2.341,6,2.104,7,3.67,8,2.341,12,0.014,14,3.843,16,5.405,17,3.214,18,2.341,19,2.216,20,0.132,21,0.132,22,0.118,24,3.642,38,0.293,41,0.529,57,1.698,58,0.132,59,0.131,71,0.009,72,0.009,160,2.855,292,3.108,293,2.485,294,3.446,295,2.855,297,2.485,298,3.108,299,2.485,300,2.653,301,3.446,442,4.475,454,4.277,531,4.475,535,4.539,590,4.475,596,4.539,631,4.475,634,4.539,692,3.446,889,4.475,895,4.539,947,3.446,948,3.446,949,3.959,950,3.959]],["title/classes/UserRepository.html",[59,0.133,163,1.931]],["body/classes/UserRepository.html",[12,0.013,20,0.129,21,0.129,22,0.115,25,0.657,29,0.546,31,0.769,32,0.44,33,0.381,34,0.533,36,0.789,38,0.144,58,0.129,59,0.129,67,2.215,71,0.009,72,0.009,73,1.254,79,0.19,149,0.942,163,2.584,175,1.642,176,1.787,207,1.185,256,6.438,257,2.178,258,2.366,259,3.913,260,2.844,261,2.471,264,2.776,265,3.359,272,3.165,643,2.792,810,4.658,811,4.658,813,4.658,817,4.658,820,4.658,822,4.658,951,3.37,952,3.872,953,3.872,954,3.872,955,3.872,956,3.872,957,3.872,958,3.872]],["title/interfaces/UserSchema.html",[239,1.769,920,2.885]],["body/interfaces/UserSchema.html",[12,0.014,20,0.119,21,0.119,22,0.106,32,0.428,33,0.381,34,0.375,38,0.218,58,0.119,59,0.118,67,1.037,71,0.008,72,0.008,79,0.175,118,1.086,142,0.809,149,1.033,151,1.829,173,1.523,175,2.966,176,3.23,177,3.54,197,1.976,198,2.238,199,3.171,202,3.54,203,3.082,205,2.238,206,2.988,207,1.211,235,3.171,236,2.238,238,2.238,239,1.577,240,3.823,241,2.238,242,3.171,243,3.171,246,2.238,248,3.984,249,2.238,277,2.39,359,1.512,368,3.253,669,3.643,672,2.571,918,2.799,920,4.231,940,3.104,941,4.397,942,4.397,943,4.397,944,3.104,945,3.104,946,3.104]],["title/classes/ViewModelUser.html",[59,0.133,455,2.366]],["body/classes/ViewModelUser.html",[12,0.014,20,0.171,21,0.171,22,0.152,25,0.789,29,0.379,31,0.548,32,0.452,33,0.271,34,0.379,36,0.548,38,0.19,58,0.171,59,0.17,67,2.339,71,0.011,72,0.011,73,1.656,79,0.25,118,0.771,149,1.238,151,1.839,175,2.982,176,3.248,455,3.803,643,3.686,702,4.416,959,4.449,960,5.522,961,4.012,962,5.112]],["title/coverage.html",[963,4.764]],["body/coverage.html",[6,1.33,12,0.014,22,0.074,33,0.133,45,1.805,59,0.256,64,1.572,67,0.728,68,1.805,71,0.006,72,0.006,74,2.179,75,1.587,76,1.805,77,2.179,82,1.678,101,1.572,120,1.08,122,2.179,133,2.179,142,0.568,161,2.179,163,1.209,171,1.156,195,0.655,196,3.049,210,1.805,233,0.782,239,2.372,254,1.061,255,2.179,281,1.572,282,1.572,283,1.572,284,1.572,285,1.572,287,1.805,288,1.805,289,1.805,290,1.805,291,1.805,302,1.805,303,2.179,304,3.049,313,2.179,319,1.019,327,2.179,338,1.481,348,1.805,349,2.179,350,3.049,360,1.572,361,2.179,363,1.33,371,1.267,407,1.805,408,2.179,417,1.481,442,1.805,443,2.179,445,1.678,454,1.481,455,1.481,461,2.179,462,3.049,471,1.805,472,3.049,494,1.401,500,2.179,513,2.179,522,1.805,523,2.179,526,1.572,527,2.179,531,1.805,532,2.179,535,1.572,536,2.179,542,2.179,565,2.179,571,6.541,573,1.805,574,2.179,579,1.572,583,2.179,590,1.805,591,2.179,596,1.572,601,2.179,607,2.179,613,2.179,616,1.805,617,2.179,620,1.572,623,2.179,631,1.805,632,2.179,634,1.572,640,2.179,645,3.049,647,1.805,674,2.179,694,2.179,695,2.179,700,1.805,701,2.179,721,2.179,732,1.678,748,2.179,769,2.179,787,2.179,793,1.805,794,2.179,809,2.179,834,2.179,836,1.678,846,2.179,854,2.179,861,1.965,862,2.179,863,1.678,867,1.805,870,2.179,882,2.179,889,1.805,890,2.179,891,1.678,895,1.572,899,2.179,907,2.179,918,3.049,920,1.805,951,2.179,959,2.179,963,2.179,964,2.504,965,2.504,966,7.715,967,7.715,968,6.411,969,3.885,970,4.76,971,4.76,972,2.179,973,5.365,974,2.504,975,3.885,976,2.179,977,2.179,978,2.504,979,2.179]],["title/dependencies.html",[3,2.436,980,2.902]],["body/dependencies.html",[3,2.746,12,0.014,41,0.725,48,3.638,59,0.222,71,0.011,72,0.011,109,1.636,170,3.638,312,3.21,359,2.301,635,4.261,905,4.724,906,4.261,981,7.228,982,5.428,983,5.428,984,5.428,985,5.428,986,5.428,987,5.428,988,5.428,989,5.428,990,5.428,991,5.428,992,5.428,993,5.428,994,5.428,995,5.428,996,5.428,997,5.428,998,5.428,999,5.428]],["title/miscellaneous/functions.html",[1000,2.404,1001,4.191]],["body/miscellaneous/functions.html",[6,4.09,12,0.012,71,0.012,72,0.012,79,0.308,977,5.477,1000,4.538,1001,5.477,1002,6.293]],["title/index.html",[79,0.163,1003,2.617,1004,2.617]],["body/index.html",[3,0.586,12,0.013,31,0.219,32,0.421,34,0.245,64,1.282,67,1.965,68,1.976,71,0.003,72,0.003,80,1.603,88,1.461,89,1.072,99,3.207,100,2.517,123,2.075,139,2.594,142,1.237,149,1.317,151,1.581,175,2.135,176,2.325,177,1.386,195,1.839,201,2.517,202,1.908,203,1.821,204,1.265,233,2.068,248,0.684,257,1.831,258,2.487,261,1.922,268,1.756,328,2.421,343,2.41,351,2.421,376,1.692,379,0.776,402,3.45,409,2.075,426,2.075,431,1.72,449,0.776,479,1.603,482,2.151,483,2.528,485,1.72,508,1.976,540,1.72,544,1.368,546,2.462,548,3.268,551,2.79,554,1.603,555,1.603,557,2.594,558,1.603,724,1.473,736,2.383,786,1.777,841,1.473,906,2.594,979,1.007,1003,2.594,1004,2.594,1005,1.777,1006,1.158,1007,1.158,1008,3.772,1009,2.042,1010,3.624,1011,1.158,1012,1.158,1013,1.158,1014,2.042,1015,2.042,1016,4.785,1017,3.772,1018,3.305,1019,2.74,1020,2.74,1021,2.042,1022,1.473,1023,4.498,1024,1.158,1025,3.305,1026,2.74,1027,1.158,1028,1.158,1029,1.158,1030,2.74,1031,1.158,1032,1.158,1033,1.158,1034,1.158,1035,2.74,1036,3.305,1037,2.042,1038,2.74,1039,2.74,1040,1.158,1041,1.158,1042,3.305,1043,1.158,1044,1.158,1045,2.042,1046,1.158,1047,1.158,1048,1.158,1049,1.158,1050,2.042,1051,1.158,1052,1.158,1053,2.042,1054,1.158,1055,1.158,1056,2.042,1057,1.158,1058,1.158,1059,1.158,1060,1.158,1061,1.158,1062,1.158,1063,2.042,1064,1.158,1065,1.158,1066,1.158,1067,1.158,1068,3.914,1069,2.74,1070,2.74,1071,2.74,1072,2.042,1073,1.158,1074,1.158,1075,1.158,1076,2.042,1077,1.158,1078,1.158,1079,1.158,1080,1.158,1081,1.158,1082,1.158,1083,2.042,1084,1.158,1085,1.007,1086,2.042,1087,2.042,1088,5.921,1089,4.164,1090,4.164,1091,3.305,1092,1.158,1093,1.158,1094,1.158,1095,2.042,1096,1.158,1097,1.158,1098,1.158,1099,1.158,1100,1.158,1101,1.158,1102,3.305,1103,1.158,1104,2.74,1105,1.158,1106,1.158,1107,2.042,1108,1.158,1109,2.042,1110,1.158,1111,1.158,1112,1.158,1113,1.158,1114,1.158,1115,1.158,1116,1.158,1117,1.158,1118,1.158,1119,1.158,1120,1.158,1121,1.158,1122,0.908,1123,1.158,1124,6.165,1125,2.74,1126,6.759,1127,3.305,1128,4.498,1129,3.305,1130,3.305,1131,1.158,1132,6.165,1133,6.821,1134,6.821,1135,6.821,1136,6.821,1137,3.772,1138,1.158,1139,2.74,1140,2.042,1141,1.158,1142,1.158,1143,1.158,1144,1.158,1145,1.158,1146,1.158,1147,2.74,1148,1.007,1149,2.74,1150,2.74,1151,1.158,1152,2.74,1153,2.74,1154,3.305,1155,3.305,1156,2.042,1157,1.007,1158,1.158,1159,1.158,1160,1.158,1161,4.164,1162,6.543,1163,6.272,1164,4.164,1165,3.305,1166,5.256,1167,5.256,1168,5.256,1169,4.498,1170,1.158,1171,6.821,1172,4.785,1173,3.305,1174,4.785,1175,3.305,1176,3.772,1177,1.158,1178,1.158,1179,4.498,1180,3.772,1181,3.772,1182,2.74,1183,1.158,1184,2.74,1185,1.158,1186,1.158,1187,1.158,1188,1.007,1189,1.158,1190,2.042,1191,2.042,1192,1.158,1193,1.158,1194,1.158,1195,2.042,1196,1.158,1197,2.042,1198,1.158,1199,1.007]],["title/license.html",[1003,2.617,1004,2.617,1022,2.404]],["body/license.html",[12,0.01,19,2.639,68,3.4,71,0.01,72,0.01,123,3.833,144,4.104,635,3.701,1022,3.4,1122,3.701,1200,6.774,1201,4.716,1202,4.716,1203,4.716,1204,6.107,1205,4.716,1206,4.716,1207,4.716,1208,4.716,1209,4.716,1210,4.716,1211,6.107,1212,7.927,1213,4.716,1214,4.716,1215,4.716,1216,6.774,1217,4.716,1218,6.107,1219,4.716,1220,4.716,1221,4.716,1222,4.716,1223,4.716,1224,4.716,1225,4.716,1226,4.716,1227,4.716,1228,6.107,1229,4.716,1230,4.716,1231,4.716,1232,4.716,1233,4.716,1234,4.716,1235,4.716,1236,6.107,1237,6.107,1238,4.716,1239,4.716,1240,4.716,1241,4.716,1242,4.716,1243,4.716,1244,4.716,1245,4.716,1246,4.716,1247,4.716,1248,4.716,1249,4.716,1250,4.716,1251,4.716,1252,4.716,1253,4.716,1254,4.716,1255,4.716,1256,4.716,1257,4.716,1258,4.716,1259,4.716,1260,4.716,1261,4.716,1262,4.716,1263,4.716,1264,4.716,1265,4.716]],["title/modules.html",[2,2.908]],["body/modules.html",[1,4.157,2,3.063,11,3.863,12,0.011,13,3.863,14,3.063,15,3.863,16,3.863,71,0.011,72,0.011,1085,6.957,1266,7.994,1267,7.994,1268,7.994]],["title/overview.html",[1269,4.764]],["body/overview.html",[0,1.525,1,5.548,2,1.833,3,1.745,4,2.04,5,2.04,6,1.833,7,2.04,8,2.04,9,3.002,10,3.002,11,4.775,12,0.014,13,5.274,14,4.247,15,5.201,16,5.274,17,2.918,18,2.04,19,1.93,57,1.078,71,0.008,72,0.008,73,1.117,101,3.616,121,1.078,155,3.002,156,3.002,171,3.289,277,2.311,278,3.002,280,3.002,281,3.616,282,3.616,283,3.616,284,3.616,285,3.616,319,2.9,360,3.616,371,3.605,454,3.407,491,3.002,492,3.002,493,3.002,494,3.224,526,3.616,535,3.616,579,3.616,596,3.616,620,3.616,634,3.616,688,3.002,690,3.002,895,3.616,947,3.002,948,3.002,1148,3.002,1157,3.002,1199,3.002,1269,3.002,1270,3.449,1271,3.449]],["title/properties.html",[197,1.883,980,2.902]],["body/properties.html",[12,0.013,67,1.996,71,0.011,72,0.011,88,1.158,195,1.486,197,2.223,233,1.775,257,2.313,328,2.875,458,4.097,480,4.46,540,3.567,1005,4.945,1010,4.945,1022,4.097,1068,4.945,1122,4.46,1188,4.945,1272,5.682,1273,5.682,1274,5.682,1275,5.682,1276,5.682,1277,5.682,1278,5.682,1279,5.682,1280,5.682,1281,5.682,1282,5.682,1283,5.682,1284,5.682,1285,5.682]],["title/miscellaneous/typealiases.html",[1000,2.404,1286,4.815]],["body/miscellaneous/typealiases.html",[12,0.012,33,0.333,71,0.012,72,0.012,79,0.308,206,4.311,1000,4.538,1287,6.293,1288,6.293,1289,6.293]],["title/classes/viewModelCourse.html",[59,0.133,338,2.366]],["body/classes/viewModelCourse.html",[12,0.014,20,0.165,21,0.165,22,0.147,25,0.771,29,0.366,31,0.529,32,0.446,33,0.262,34,0.366,36,0.529,38,0.234,58,0.165,59,0.164,71,0.01,72,0.01,73,1.599,79,0.242,88,1.411,118,0.745,149,1.218,195,2.09,201,3.873,203,3.342,204,3.195,276,2.919,338,3.719,417,2.919,622,4.296,702,4.345,960,5.433,961,3.875,972,4.296,1290,4.937,1291,4.937,1292,4.937]],["title/classes/viewModelLesson.html",[59,0.133,417,2.366]],["body/classes/viewModelLesson.html",[12,0.014,20,0.169,21,0.169,22,0.15,25,0.782,29,0.374,31,0.541,32,0.45,33,0.267,34,0.374,36,0.541,38,0.188,58,0.169,59,0.168,71,0.011,72,0.011,73,1.635,79,0.247,88,1.426,118,0.762,149,1.231,151,1.828,233,2.526,351,3.538,373,2.984,376,2.631,417,3.772,702,4.39,960,5.489,961,3.961,976,4.392,1293,5.047]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["0",{"_index":571,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1273,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["01t00:00:00z",{"_index":1169,"title":{},"body":{"index.html":{}}}],["02t00:00:00z",{"_index":1184,"title":{},"body":{"index.html":{}}}],["04",{"_index":1168,"title":{},"body":{"index.html":{}}}],["1",{"_index":431,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["10",{"_index":485,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{}}}],["10.0.0",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1192,"title":{},"body":{"index.html":{}}}],["12",{"_index":1193,"title":{},"body":{"index.html":{}}}],["123e4567",{"_index":1133,"title":{},"body":{"index.html":{}}}],["12d3",{"_index":1135,"title":{},"body":{"index.html":{}}}],["13",{"_index":1194,"title":{},"body":{"index.html":{}}}],["14",{"_index":1196,"title":{},"body":{"index.html":{}}}],["15",{"_index":1198,"title":{},"body":{"index.html":{}}}],["16",{"_index":1199,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":1138,"title":{},"body":{"index.html":{}}}],["20",{"_index":1271,"title":{},"body":{"overview.html":{}}}],["200",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["201",{"_index":331,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["2023",{"_index":1167,"title":{},"body":{"index.html":{}}}],["2024",{"_index":1202,"title":{},"body":{"license.html":{}}}],["204",{"_index":504,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["21",{"_index":1270,"title":{},"body":{"overview.html":{}}}],["26ad0bdcda7c",{"_index":425,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["3",{"_index":1146,"title":{},"body":{"index.html":{}}}],["3000:3000",{"_index":1059,"title":{},"body":{"index.html":{}}}],["4",{"_index":1148,"title":{},"body":{"index.html":{},"overview.html":{}}}],["400",{"_index":333,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{}}}],["401",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["404",{"_index":413,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["409",{"_index":448,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{}}}],["42661417400",{"_index":1137,"title":{},"body":{"index.html":{}}}],["42661417401",{"_index":1141,"title":{},"body":{"index.html":{}}}],["42661417402",{"_index":1166,"title":{},"body":{"index.html":{}}}],["42661417403",{"_index":1176,"title":{},"body":{"index.html":{}}}],["42661417404",{"_index":1178,"title":{},"body":{"index.html":{}}}],["42661417405",{"_index":1185,"title":{},"body":{"index.html":{}}}],["42661417406",{"_index":1187,"title":{},"body":{"index.html":{}}}],["47a3",{"_index":423,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["5",{"_index":1151,"title":{},"body":{"index.html":{}}}],["5.1.1",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["5.13.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":404,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["500",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["5000",{"_index":401,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["59f501ef",{"_index":421,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["6",{"_index":1157,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6h",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["7",{"_index":1160,"title":{},"body":{"index.html":{}}}],["7.3.1",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["7373",{"_index":422,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["8",{"_index":1170,"title":{},"body":{"index.html":{}}}],["9",{"_index":1177,"title":{},"body":{"index.html":{}}}],["9.0.1",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":198,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["a14e",{"_index":424,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["a456",{"_index":1136,"title":{},"body":{"index.html":{}}}],["above",{"_index":1235,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":256,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"classes/UserRepository.html":{}}}],["access",{"_index":1068,"title":{},"body":{"index.html":{},"properties.html":{}}}],["accessors",{"_index":200,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["action",{"_index":1259,"title":{},"body":{"license.html":{}}}],["add",{"_index":1110,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1078,"title":{},"body":{"index.html":{}}}],["administrator",{"_index":426,"title":{},"body":{"controllers/CreateLessonsController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"index.html":{}}}],["administrators",{"_index":518,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["admins",{"_index":378,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["advanced",{"_index":1179,"title":{},"body":{"index.html":{}}}],["aims",{"_index":1277,"title":{},"body":{"properties.html":{}}}],["aliases",{"_index":1287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedextensions",{"_index":386,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["allowedextensions.includes(fileextension",{"_index":391,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["already",{"_index":449,"title":{},"body":{"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{}}}],["and/or",{"_index":1226,"title":{},"body":{"license.html":{}}}],["api",{"_index":1008,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":337,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apibody",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["apioperation",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apioperation({summary",{"_index":502,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["apiproperty",{"_index":309,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{}}}],["apiproperty({description",{"_index":352,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["apiquery",{"_index":559,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["apiresponse",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apitags",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apitags('auth",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('courses",{"_index":339,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["apitags('lessons",{"_index":418,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["apitags('users",{"_index":456,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["application",{"_index":1049,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1060,"title":{},"body":{"index.html":{}}}],["apply(authmiddleware",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciate",{"_index":1092,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1069,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1263,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1213,"title":{},"body":{"license.html":{}}}],["async",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["auth",{"_index":64,"title":{"classes/Auth.html":{}},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{},"index.html":{}}}],["auth.controller",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.dto.ts",{"_index":695,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:11",{"_index":698,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.dto.ts:5",{"_index":699,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.dto.ts:8",{"_index":696,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.service",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.middleware",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":76,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1282,"title":{},"body":{"properties.html":{}}}],["authmiddleware",{"_index":45,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1283,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authorization?.replace('bearer",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authors",{"_index":1252,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":101,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1140,"title":{},"body":{"index.html":{}}}],["await",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["b",{"_index":1106,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1056,"title":{},"body":{"index.html":{}}}],["bad",{"_index":334,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{}}}],["badrequestexception",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["badrequestexception('banner",{"_index":325,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["badrequestexception('description",{"_index":324,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["badrequestexception('email",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('invalid",{"_index":392,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["badrequestexception('name",{"_index":323,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["banner",{"_index":201,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"classes/PrismaCourseMapper.html":{},"classes/UpdateCourseDto.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["banner(banner",{"_index":251,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["basics",{"_index":1164,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":916,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["below",{"_index":1100,"title":{},"body":{"index.html":{}}}],["between",{"_index":403,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["body",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1030,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1268,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1085,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":1053,"title":{},"body":{"index.html":{}}}],["c",{"_index":1201,"title":{},"body":{"license.html":{}}}],["catch",{"_index":153,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["cd",{"_index":1034,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1108,"title":{},"body":{"index.html":{}}}],["characters",{"_index":405,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["charge",{"_index":1208,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":1105,"title":{},"body":{"index.html":{}}}],["checks",{"_index":1119,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1255,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/Auth.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["classes",{"_index":73,"title":{},"body":{"classes/Auth.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"overview.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["click",{"_index":1077,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1027,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":278,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_imports",{"_index":279,"title":{},"body":{"modules/CoursesModule.html":{}}}],["cluster_coursesmodule_providers",{"_index":280,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":491,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":492,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":493,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_lessonsmodule",{"_index":688,"title":{},"body":{"modules/LessonsModule.html":{},"overview.html":{}}}],["cluster_lessonsmodule_imports",{"_index":689,"title":{},"body":{"modules/LessonsModule.html":{}}}],["cluster_lessonsmodule_providers",{"_index":690,"title":{},"body":{"modules/LessonsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":947,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":949,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":948,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1009,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1109,"title":{},"body":{"index.html":{}}}],["concepts",{"_index":1197,"title":{},"body":{"index.html":{}}}],["conditionals",{"_index":1191,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1234,"title":{},"body":{"license.html":{}}}],["configure",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":896,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["conflict.'})@apiresponse({status",{"_index":893,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["conflictexception",{"_index":473,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["conflictexception('this",{"_index":914,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["connection",{"_index":1264,"title":{},"body":{"license.html":{}}}],["const",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{}}}],["constructor(courserepository",{"_index":315,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["constructor(jwtservice",{"_index":125,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["constructor(lessonrepository",{"_index":362,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["constructor(prisma",{"_index":722,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["constructor(props",{"_index":205,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["constructor(userrepository",{"_index":488,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["consumer",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":1057,"title":{},"body":{"index.html":{}}}],["content",{"_index":351,"title":{},"body":{"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["content(content",{"_index":671,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["content.length",{"_index":400,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["content.split('.').pop().tolowercase",{"_index":385,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["contents",{"_index":1013,"title":{},"body":{"index.html":{}}}],["conteúdo",{"_index":436,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["contract",{"_index":1260,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1098,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1021,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1093,"title":{},"body":{"index.html":{}}}],["control",{"_index":1188,"title":{},"body":{"index.html":{},"properties.html":{}}}],["controller",{"_index":75,"title":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('courses",{"_index":340,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["controller('courses/:courseid/lessons",{"_index":419,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["controller('user",{"_index":457,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["controller/create.controller",{"_index":292,"title":{},"body":{"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/delete.controller",{"_index":298,"title":{},"body":{"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/findall.controller",{"_index":294,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UserModule.html":{}}}],["controller/findallbycourse.controller",{"_index":693,"title":{},"body":{"modules/LessonsModule.html":{}}}],["controller/findbyid.controller",{"_index":692,"title":{},"body":{"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/update.controller",{"_index":301,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UserModule.html":{}}}],["controllers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"modules/LessonsModule.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copies",{"_index":1228,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1211,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1200,"title":{},"body":{"license.html":{}}}],["course",{"_index":195,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"classes/viewModelCourse.html":{}}}],["course'})@apibody({type",{"_index":329,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["course'})@apiresponse({status",{"_index":838,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{}}}],["course.banner",{"_index":714,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.createdat",{"_index":715,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["course.description",{"_index":713,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.dto",{"_index":843,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.dto.ts",{"_index":304,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["course.dto.ts:13",{"_index":307,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:14",{"_index":850,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.dto.ts:18",{"_index":306,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:19",{"_index":849,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.dto.ts:8",{"_index":308,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:9",{"_index":851,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.id",{"_index":711,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["course.lessons",{"_index":743,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["course.name",{"_index":712,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["courseexists",{"_index":519,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["courseid",{"_index":376,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["courseid(courseid",{"_index":673,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["courseraw",{"_index":706,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["courseraw.banner",{"_index":718,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.createdat",{"_index":719,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.description",{"_index":717,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.id",{"_index":720,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["courseraw.lessons.map(prismalessonmapper.todomain",{"_index":741,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["courseraw.name",{"_index":716,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courserepository",{"_index":254,"title":{"classes/CourseRepository.html":{}},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["courses",{"_index":328,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"index.html":{},"properties.html":{}}}],["courses'})@apiresponse({status",{"_index":547,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["courses.length",{"_index":570,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["courses.map(viewmodelcourse.tohttp",{"_index":564,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["courses/:courseid/lessons",{"_index":409,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"index.html":{}}}],["courses/:courseid/lessons/:id",{"_index":1090,"title":{},"body":{"index.html":{}}}],["courses/:id",{"_index":1089,"title":{},"body":{"index.html":{}}}],["courses/courses.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["courseschema",{"_index":210,"title":{"interfaces/CourseSchema.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":13,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesraw",{"_index":737,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["coursesraw.map((courseraw",{"_index":740,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["course})@apiresponse({status",{"_index":330,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["coverage",{"_index":963,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":257,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"index.html":{},"properties.html":{}}}],["create(@body",{"_index":344,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateUserController.html":{}}}],["create(course",{"_index":262,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/CreateCoursesController.html":{},"injectables/PrismaCourseRepository.html":{}}}],["create(createuserdto",{"_index":444,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["create(lesson",{"_index":677,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["create(req",{"_index":410,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["create(user",{"_index":813,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["createcoursedto",{"_index":302,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["createcoursescontroller",{"_index":287,"title":{"controllers/CreateCoursesController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"coverage.html":{}}}],["createcourseusecase",{"_index":281,"title":{"injectables/CreateCourseUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":342,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["created.'})@apiresponse({status",{"_index":332,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["createdat",{"_index":202,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["createlessondto",{"_index":348,"title":{"classes/CreateLessonDto.html":{}},"body":{"classes/CreateLessonDto.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["createlessonscontroller",{"_index":407,"title":{"controllers/CreateLessonsController.html":{}},"body":{"controllers/CreateLessonsController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["createlessonusecase",{"_index":360,"title":{"injectables/CreateLessonUseCase.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1125,"title":{},"body":{"index.html":{}}}],["createusercontroller",{"_index":442,"title":{"controllers/CreateUserController.html":{}},"body":{"controllers/CreateUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":445,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":447,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["createuserrequest",{"_index":471,"title":{"interfaces/CreateUserRequest.html":{}},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["createuserusecase",{"_index":454,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["creation",{"_index":1280,"title":{},"body":{"properties.html":{}}}],["crypto",{"_index":236,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["da",{"_index":437,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["damages",{"_index":1256,"title":{},"body":{"license.html":{}}}],["data",{"_index":736,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["database",{"_index":1017,"title":{},"body":{"index.html":{}}}],["database/database.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["database_url=\\nport=\\njwt_secret",{"_index":1048,"title":{},"body":{"index.html":{}}}],["databasemodule",{"_index":14,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["db",{"_index":1065,"title":{},"body":{"index.html":{}}}],["de",{"_index":429,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["deal",{"_index":1215,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1265,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCourseDto.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LoginAuthDto.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{}}}],["deeper",{"_index":1181,"title":{},"body":{"index.html":{}}}],["default",{"_index":557,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["defined",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["delete",{"_index":258,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["delete(':id",{"_index":509,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["delete(@req",{"_index":510,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["delete(id",{"_index":265,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["delete(req",{"_index":501,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["deletecoursebyidcontroller",{"_index":290,"title":{"controllers/DeleteCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"coverage.html":{}}}],["deletecoursebyidusecase",{"_index":282,"title":{"injectables/DeleteCourseByIdUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["deleted",{"_index":508,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"index.html":{}}}],["deleted.'})@apiresponse({status",{"_index":505,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["deletelessonbyidcontroller",{"_index":522,"title":{"controllers/DeleteLessonByIdController.html":{}},"body":{"controllers/DeleteLessonByIdController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["deletelessonbyidusecase",{"_index":526,"title":{"injectables/DeleteLessonByIdUseCase.html":{}},"body":{"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["deletes",{"_index":1149,"title":{},"body":{"index.html":{}}}],["deleteusercontroller",{"_index":531,"title":{"controllers/DeleteUserController.html":{}},"body":{"controllers/DeleteUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deleteuserusecase",{"_index":535,"title":{"injectables/DeleteUserUseCase.html":{}},"body":{"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"index.html":{},"properties.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["description(description",{"_index":250,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["detailed",{"_index":1073,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1062,"title":{},"body":{"index.html":{}}}],["different",{"_index":1067,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1084,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1033,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1224,"title":{},"body":{"license.html":{}}}],["dive",{"_index":1180,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1016,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["docx",{"_index":389,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["doe",{"_index":1128,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":452,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["dto/login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":842,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["e",{"_index":1047,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":1134,"title":{},"body":{"index.html":{}}}],["each",{"_index":1075,"title":{},"body":{"index.html":{}}}],["echo",{"_index":1046,"title":{},"body":{"index.html":{}}}],["email",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{}}}],["email(email",{"_index":945,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["endpoint",{"_index":1076,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1020,"title":{},"body":{"index.html":{}}}],["enroll",{"_index":1276,"title":{},"body":{"properties.html":{}}}],["ensure",{"_index":1114,"title":{},"body":{"index.html":{}}}],["entities/course.entity",{"_index":276,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"classes/viewModelCourse.html":{}}}],["entities/lesson.entity",{"_index":373,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/viewModelLesson.html":{}}}],["entities/user.entity",{"_index":643,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{}}}],["env",{"_index":1045,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1041,"title":{},"body":{"index.html":{}}}],["error",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["error.'})@apiquery({name",{"_index":550,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["error.'})@delete(':id",{"_index":506,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["esta",{"_index":432,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["este",{"_index":434,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["event",{"_index":1251,"title":{},"body":{"license.html":{}}}],["example",{"_index":1126,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["execute",{"_index":314,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["execute(courseid",{"_index":585,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["execute(id",{"_index":515,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["execute(page",{"_index":567,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["execute(role",{"_index":603,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["execute(undefined",{"_index":317,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateUserUseCase.html":{}}}],["execute(userrole",{"_index":365,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["exists",{"_index":458,"title":{},"body":{"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"properties.html":{}}}],["exists.'})@apiresponse({status",{"_index":450,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["expiresin",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["explore",{"_index":1082,"title":{},"body":{"index.html":{}}}],["export",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":635,"title":{},"body":{"controllers/FindUserByIdController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":788,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":393,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjzdwiioiixmjm0nty3ocwidxnlcm5hbwuioijqb2huywrvbm9liiwiawf0ijoxnte2mjm5mdiyfq.sflkxwrjsmekkf2qt4fwpmejf36pok6yjv_adqssw5c",{"_index":1159,"title":{},"body":{"index.html":{}}}],["false",{"_index":552,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"classes/LoginAuthDto.html":{}}}],["feature",{"_index":1102,"title":{},"body":{"index.html":{}}}],["feature/my",{"_index":1107,"title":{},"body":{"index.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["file'].includes(role",{"_index":383,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["fileextension",{"_index":384,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["files",{"_index":1214,"title":{},"body":{"license.html":{}}}],["find",{"_index":546,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"index.html":{}}}],["findall",{"_index":259,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findall(@req",{"_index":598,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["findall(page",{"_index":543,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["findall(req",{"_index":592,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["findall(skip",{"_index":267,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/PrismaCourseRepository.html":{}}}],["findallbycourse",{"_index":675,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["findallbycourse(courseid",{"_index":680,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["findallcoursescontroller",{"_index":288,"title":{"controllers/FindAllCoursesController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"coverage.html":{}}}],["findallcoursesusecase",{"_index":283,"title":{"injectables/FindAllCoursesUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["findalllessonsbycoursecontroller",{"_index":573,"title":{"controllers/FindAllLessonsByCourseController.html":{}},"body":{"controllers/FindAllLessonsByCourseController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["findalllessonsbycourseusecase",{"_index":579,"title":{"injectables/FindAllLessonsByCourseUseCase.html":{}},"body":{"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["findallusercontroller",{"_index":590,"title":{"controllers/FindAllUserController.html":{}},"body":{"controllers/FindAllUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["findallusersusecase",{"_index":596,"title":{"injectables/FindAllUsersUseCase.html":{}},"body":{"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["findbyemail",{"_index":810,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyemail(email",{"_index":817,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid",{"_index":260,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid(@param('id",{"_index":611,"title":{},"body":{"controllers/FindCourseByIdController.html":{}}}],["findbyid(@req",{"_index":636,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["findbyid(id",{"_index":272,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindCourseByIdController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid(req",{"_index":618,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["findbyusername",{"_index":811,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyusername(username",{"_index":820,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findcoursebyidcontroller",{"_index":289,"title":{"controllers/FindCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"coverage.html":{}}}],["findcoursebyidusecase",{"_index":284,"title":{"injectables/FindCourseByIdUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["findlessonbyidcontroller",{"_index":616,"title":{"controllers/FindLessonByIdController.html":{}},"body":{"controllers/FindLessonByIdController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["findlessonbyidusecase",{"_index":620,"title":{"injectables/FindLessonByIdUseCase.html":{}},"body":{"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["finds",{"_index":1147,"title":{},"body":{"index.html":{}}}],["finduserbyidcontroller",{"_index":631,"title":{"controllers/FindUserByIdController.html":{}},"body":{"controllers/FindUserByIdController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["finduserbyidusecase",{"_index":634,"title":{"injectables/FindUserByIdUseCase.html":{}},"body":{"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["first",{"_index":1173,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1247,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1103,"title":{},"body":{"index.html":{}}}],["flow",{"_index":1189,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1025,"title":{},"body":{"index.html":{}}}],["following",{"_index":1233,"title":{},"body":{"license.html":{}}}],["fork",{"_index":1101,"title":{},"body":{"index.html":{}}}],["forroutes",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":382,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{}}}],["found.'})@apiresponse({status",{"_index":414,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["free",{"_index":1207,"title":{},"body":{"license.html":{}}}],["ftp|http|https",{"_index":396,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["fullname",{"_index":1203,"title":{},"body":{"license.html":{}}}],["function",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functionalities",{"_index":1012,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1001,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1231,"title":{},"body":{"license.html":{}}}],["get(':id",{"_index":610,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{}}}],["get(':id')@apioperation({summary",{"_index":608,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{}}}],["get('all",{"_index":597,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["get('all')@apioperation({summary",{"_index":593,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["get()@apioperation({summary",{"_index":545,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindUserByIdController.html":{}}}],["getbanner",{"_index":222,"title":{},"body":{"classes/Course.html":{}}}],["getcontent",{"_index":654,"title":{},"body":{"classes/Lesson.html":{}}}],["getcourseid",{"_index":662,"title":{},"body":{"classes/Lesson.html":{}}}],["getcreatedat",{"_index":226,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getdescription",{"_index":218,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["getemail",{"_index":929,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":212,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getlessons",{"_index":230,"title":{},"body":{"classes/Course.html":{}}}],["getname",{"_index":214,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getpassword",{"_index":933,"title":{},"body":{"classes/User.html":{}}}],["getrole",{"_index":658,"title":{},"body":{"classes/Lesson.html":{},"classes/User.html":{}}}],["getting",{"_index":1003,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getupdatedat",{"_index":228,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["getusername",{"_index":925,"title":{},"body":{"classes/User.html":{}}}],["git",{"_index":1104,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1206,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":1118,"title":{},"body":{"index.html":{}}}],["hash",{"_index":475,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["hash(password",{"_index":484,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["haven't",{"_index":1052,"title":{},"body":{"index.html":{}}}],["header",{"_index":1070,"title":{},"body":{"index.html":{}}}],["helped",{"_index":1094,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1205,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1253,"title":{},"body":{"license.html":{}}}],["https://example.com/images/advanced",{"_index":1182,"title":{},"body":{"index.html":{}}}],["https://example.com/images/programming.jpg",{"_index":1165,"title":{},"body":{"index.html":{}}}],["https://github.com/walttinho/lms.git",{"_index":1031,"title":{},"body":{"index.html":{}}}],["id",{"_index":149,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["id'})@apiresponse({status",{"_index":503,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["identifier",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1054,"title":{},"body":{"index.html":{}}}],["implements",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}}}],["implied",{"_index":1243,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["in.'})@apiresponse({status",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["include",{"_index":739,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["included",{"_index":1238,"title":{},"body":{"license.html":{}}}],["including",{"_index":1218,"title":{},"body":{"license.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["information",{"_index":1074,"title":{},"body":{"index.html":{}}}],["initial",{"_index":1064,"title":{},"body":{"index.html":{}}}],["inject",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["inject(prismacourserepository",{"_index":322,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["inject(prismalessonrepository",{"_index":375,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["inject(prismauserrepository",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["injectable",{"_index":120,"title":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["injectables",{"_index":121,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"overview.html":{}}}],["install",{"_index":1036,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1014,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1099,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1080,"title":{},"body":{"index.html":{}}}],["interested",{"_index":1097,"title":{},"body":{"index.html":{}}}],["interface",{"_index":239,"title":{"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"interfaces/LessonSchema.html":{},"interfaces/UserSchema.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["interfaces",{"_index":277,"title":{},"body":{"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"interfaces/LessonSchema.html":{},"interfaces/UserSchema.html":{},"overview.html":{}}}],["internal",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["introduction",{"_index":1161,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["isemail",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":310,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":853,"title":{},"body":{"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":901,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring()@apiproperty({description",{"_index":884,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["ispasswordvalid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":311,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":305,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["isstring()@isoptional()@apiproperty({description",{"_index":848,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["items",{"_index":554,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["jane",{"_index":1142,"title":{},"body":{"index.html":{}}}],["jane.smith@example.com",{"_index":1145,"title":{},"body":{"index.html":{}}}],["janesmith",{"_index":1144,"title":{},"body":{"index.html":{}}}],["john",{"_index":1127,"title":{},"body":{"index.html":{}}}],["john.doe@example.com",{"_index":1130,"title":{},"body":{"index.html":{}}}],["johnathan",{"_index":1153,"title":{},"body":{"index.html":{}}}],["johnathan.doe@example.com",{"_index":1155,"title":{},"body":{"index.html":{}}}],["johnathandoe",{"_index":1154,"title":{},"body":{"index.html":{}}}],["johndoe",{"_index":1129,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":126,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["kind",{"_index":1242,"title":{},"body":{"license.html":{}}}],["learn",{"_index":1163,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lesson",{"_index":233,"title":{"classes/Lesson.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"classes/viewModelLesson.html":{}}}],["lesson'})@apibody({type",{"_index":411,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["lesson'})@apiresponse({status",{"_index":524,"title":{},"body":{"controllers/DeleteLessonByIdController.html":{}}}],["lesson'})@isstring()@isnotempty",{"_index":353,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.content",{"_index":757,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.courseid",{"_index":759,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.createdat",{"_index":760,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lesson.description",{"_index":756,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.dto",{"_index":866,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts",{"_index":350,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["lesson.dto.ts:10",{"_index":887,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:14",{"_index":355,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:15",{"_index":886,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:19",{"_index":354,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:20",{"_index":885,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:24",{"_index":358,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:25",{"_index":888,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:9",{"_index":356,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.id",{"_index":754,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lesson.name",{"_index":755,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.role",{"_index":758,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonid",{"_index":687,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonraw",{"_index":750,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["lessonraw.content",{"_index":764,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.courseid",{"_index":766,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.createdat",{"_index":767,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.description",{"_index":763,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.id",{"_index":768,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["lessonraw.name",{"_index":762,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.role",{"_index":765,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonrepository",{"_index":363,"title":{"classes/LessonRepository.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["lessonrole",{"_index":357,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/UpdateLessonDto.html":{}}}],["lessons",{"_index":204,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["lessons'})@apiresponse({status",{"_index":575,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["lessons(lessons",{"_index":253,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["lessons.length",{"_index":588,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["lessons.map((lesson",{"_index":783,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["lessons/lessons.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["lessons?.map((lesson",{"_index":1292,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["lessonschema",{"_index":647,"title":{"interfaces/LessonSchema.html":{}},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"coverage.html":{}}}],["lessonsmodule",{"_index":15,"title":{"modules/LessonsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonsModule.html":{},"modules.html":{},"overview.html":{}}}],["lessonupdate",{"_index":872,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.content",{"_index":879,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.description",{"_index":878,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.name",{"_index":877,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.role",{"_index":880,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson})@apiresponse({status",{"_index":412,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["liability",{"_index":1257,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1254,"title":{},"body":{"license.html":{}}}],["license",{"_index":1022,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1123,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1219,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1244,"title":{},"body":{"license.html":{}}}],["line",{"_index":1115,"title":{},"body":{"index.html":{}}}],["link'].includes(role",{"_index":394,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["list",{"_index":548,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"index.html":{}}}],["lists",{"_index":1139,"title":{},"body":{"index.html":{}}}],["lição",{"_index":428,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["lms",{"_index":1035,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1024,"title":{},"body":{"index.html":{}}}],["logged",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["login'})@apibody({type",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginauthdto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginauthdto",{"_index":82,"title":{"classes/LoginAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["loginauthdto})@apiresponse({status",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":1158,"title":{},"body":{"index.html":{}}}],["loops",{"_index":1190,"title":{},"body":{"index.html":{}}}],["machine",{"_index":1051,"title":{},"body":{"index.html":{}}}],["make",{"_index":1095,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1275,"title":{},"body":{"properties.html":{}}}],["management",{"_index":1281,"title":{},"body":{"properties.html":{}}}],["managing",{"_index":1011,"title":{},"body":{"index.html":{}}}],["mappers/prisma.course.mapper",{"_index":731,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["mappers/prisma.lesson.mapper",{"_index":733,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["mappers/prisma.user.mapper",{"_index":825,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["master",{"_index":1029,"title":{},"body":{"index.html":{}}}],["matching",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["merchantability",{"_index":1246,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1222,"title":{},"body":{"license.html":{}}}],["message",{"_index":1150,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["middlewareconsumer",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":1061,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":1018,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1000,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":1221,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["name(name",{"_index":249,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["navigate",{"_index":1032,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1043,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1121,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoursesModule.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"modules/LessonsModule.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":905,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCourseDto.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LoginAuthDto.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["netto",{"_index":1285,"title":{},"body":{"properties.html":{}}}],["new",{"_index":142,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{},"index.html":{}}}],["newsecurepassword123",{"_index":1156,"title":{},"body":{"index.html":{}}}],["next",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["noninfringement",{"_index":1250,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":369,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('course",{"_index":381,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('courses",{"_index":572,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["notfoundexception('lesson",{"_index":630,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('lessons",{"_index":589,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["notice",{"_index":1236,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1038,"title":{},"body":{"index.html":{}}}],["null",{"_index":745,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["number",{"_index":268,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"index.html":{}}}],["number'})@apiquery({name",{"_index":553,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["o",{"_index":435,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["object.values(userrole).includes(role",{"_index":477,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["obtaining",{"_index":1210,"title":{},"body":{"license.html":{}}}],["online",{"_index":1005,"title":{},"body":{"index.html":{},"properties.html":{}}}],["onmoduleinit",{"_index":790,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1112,"title":{},"body":{"index.html":{}}}],["optional",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["origin",{"_index":1111,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1262,"title":{},"body":{"license.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1269,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1058,"title":{},"body":{"index.html":{}}}],["package",{"_index":980,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":551,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["page'})@apiquery({name",{"_index":577,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["param",{"_index":416,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["param('courseid",{"_index":420,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["param('id",{"_index":511,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["part",{"_index":876,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["partialtype",{"_index":852,"title":{},"body":{"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcoursedto",{"_index":847,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["partialtype(createlessondto",{"_index":883,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["partialtype(createuserdto",{"_index":900,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1248,"title":{},"body":{"license.html":{}}}],["passing",{"_index":1120,"title":{},"body":{"index.html":{}}}],["password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["password(password",{"_index":946,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["patch",{"_index":841,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["patch(':id",{"_index":844,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":837,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["patch()@apioperation({summary",{"_index":892,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":146,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["payload.role",{"_index":152,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["payload.sub",{"_index":150,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["pdf",{"_index":387,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["per",{"_index":555,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["permission",{"_index":1204,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1229,"title":{},"body":{"license.html":{}}}],["person",{"_index":1209,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1230,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1274,"title":{},"body":{"properties.html":{}}}],["please",{"_index":479,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"index.html":{}}}],["portions",{"_index":1240,"title":{},"body":{"license.html":{}}}],["post",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"index.html":{}}}],["post()@apioperation({summary",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["pptx",{"_index":390,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["prisma",{"_index":724,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["prisma.service",{"_index":730,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["prisma/client",{"_index":359,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateLessonDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":496,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.course.repository",{"_index":498,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.lesson.repository",{"_index":499,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.user.repository",{"_index":497,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prismaclient",{"_index":789,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismacoursemapper",{"_index":700,"title":{"classes/PrismaCourseMapper.html":{}},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"coverage.html":{}}}],["prismacoursemapper.todomain(courseraw",{"_index":742,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["prismacoursemapper.toprisma(course",{"_index":734,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["prismacourserepository",{"_index":319,"title":{"injectables/PrismaCourseRepository.html":{}},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["prismalessonmapper",{"_index":732,"title":{"classes/PrismaLessonMapper.html":{}},"body":{"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"coverage.html":{}}}],["prismalessonmapper.todomain(lesson",{"_index":781,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["prismalessonmapper.toprisma(lesson",{"_index":778,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["prismalessonrepository",{"_index":371,"title":{"injectables/PrismaLessonRepository.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice",{"_index":494,"title":{"injectables/PrismaService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismausermapper",{"_index":793,"title":{"classes/PrismaUserMapper.html":{}},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["prismausermapper.todomain(user",{"_index":829,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismausermapper.toprisma(user",{"_index":826,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismauserrepository",{"_index":171,"title":{"injectables/PrismaUserRepository.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["process",{"_index":1279,"title":{},"body":{"properties.html":{}}}],["process.env.jwt_secret",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["professor",{"_index":482,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"index.html":{}}}],["program",{"_index":1174,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1162,"title":{},"body":{"index.html":{}}}],["programming.jpg",{"_index":1195,"title":{},"body":{"index.html":{}}}],["project",{"_index":1010,"title":{},"body":{"index.html":{},"properties.html":{}}}],["project's",{"_index":1116,"title":{},"body":{"index.html":{}}}],["promise",{"_index":264,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":197,"title":{"properties.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"properties.html":{}}}],["props",{"_index":199,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["props.createdat",{"_index":940,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["provide",{"_index":480,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"properties.html":{}}}],["provided",{"_index":144,"title":{},"body":{"injectables/AuthMiddleware.html":{},"license.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["publish",{"_index":1223,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1113,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1249,"title":{},"body":{"license.html":{}}}],["push",{"_index":786,"title":{},"body":{"injectables/PrismaLessonRepository.html":{},"index.html":{}}}],["put",{"_index":1091,"title":{},"body":{"index.html":{}}}],["python",{"_index":1171,"title":{},"body":{"index.html":{}}}],["python.jpg",{"_index":1183,"title":{},"body":{"index.html":{}}}],["query",{"_index":558,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["query('page",{"_index":561,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["query('size",{"_index":562,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["randomuuid",{"_index":235,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["readonly",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["registration",{"_index":1006,"title":{},"body":{"index.html":{}}}],["replace",{"_index":206,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":1028,"title":{},"body":{"index.html":{}}}],["repository/course.repository",{"_index":321,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["repository/lesson.repository",{"_index":370,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["repository/user.repository",{"_index":539,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["req",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["req.body",{"_index":427,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["req.headers",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req['user",{"_index":148,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CreateLessonsController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["req['user'].id",{"_index":638,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["req['user'].role",{"_index":439,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["request",{"_index":343,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["request.'})@apiresponse({status",{"_index":335,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{}}}],["requestmethod",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"classes/LoginAuthDto.html":{}}}],["res",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":1132,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1217,"title":{},"body":{"license.html":{}}}],["result",{"_index":345,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/PrismaCourseRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["result.map(viewmodellesson.tohttp",{"_index":582,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["results",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["retrieved",{"_index":560,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["retrieved.'})@apiresponse({status",{"_index":549,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["return",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["returns",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["rights",{"_index":1220,"title":{},"body":{"license.html":{}}}],["role",{"_index":151,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["role(role",{"_index":672,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["roleuser",{"_index":438,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["route",{"_index":1124,"title":{},"body":{"index.html":{}}}],["run",{"_index":1023,"title":{},"body":{"index.html":{}}}],["running",{"_index":1015,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["secret",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["securepassword123",{"_index":1131,"title":{},"body":{"index.html":{}}}],["see",{"_index":605,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["seed",{"_index":1063,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1227,"title":{},"body":{"license.html":{}}}],["server",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["set",{"_index":248,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["setbanner(banner",{"_index":224,"title":{},"body":{"classes/Course.html":{}}}],["setcontent(content",{"_index":656,"title":{},"body":{"classes/Lesson.html":{}}}],["setcourseid(courseid",{"_index":664,"title":{},"body":{"classes/Lesson.html":{}}}],["setdescription(description",{"_index":220,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["setemail(email",{"_index":931,"title":{},"body":{"classes/User.html":{}}}],["setlessons(lessons",{"_index":232,"title":{},"body":{"classes/Course.html":{}}}],["setname(name",{"_index":216,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["setpassword(password",{"_index":935,"title":{},"body":{"classes/User.html":{}}}],["setrole(role",{"_index":660,"title":{},"body":{"classes/Lesson.html":{},"classes/User.html":{}}}],["setusername(username",{"_index":927,"title":{},"body":{"classes/User.html":{}}}],["shall",{"_index":1237,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["simple",{"_index":1175,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":1071,"title":{},"body":{"index.html":{}}}],["simulating",{"_index":1066,"title":{},"body":{"index.html":{}}}],["size",{"_index":544,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["skip",{"_index":271,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["smith",{"_index":1143,"title":{},"body":{"index.html":{}}}],["software",{"_index":1212,"title":{},"body":{"license.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["specific",{"_index":1088,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../replace.ts",{"_index":1288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:32",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.middleware.ts",{"_index":122,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:11",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.middleware.ts:9",{"_index":127,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.module.ts",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":694,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":74,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/courses/controller/create.controller.ts",{"_index":327,"title":{},"body":{"controllers/CreateCoursesController.html":{},"coverage.html":{}}}],["src/courses/controller/create.controller.ts:38",{"_index":336,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["src/courses/controller/delete.controller.ts",{"_index":500,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/delete.controller.ts:24",{"_index":507,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{}}}],["src/courses/controller/findall.controller.ts",{"_index":542,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"coverage.html":{}}}],["src/courses/controller/findall.controller.ts:44",{"_index":556,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["src/courses/controller/findbyid.controller",{"_index":296,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/controller/findbyid.controller.ts",{"_index":607,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/findbyid.controller.ts:35",{"_index":609,"title":{},"body":{"controllers/FindCourseByIdController.html":{}}}],["src/courses/controller/update.controller.ts",{"_index":834,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/update.controller.ts:36",{"_index":840,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{}}}],["src/courses/courses.module.ts",{"_index":286,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/dto/create",{"_index":303,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/courses/dto/update",{"_index":846,"title":{},"body":{"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["src/courses/entities/course.entity",{"_index":710,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["src/courses/entities/course.entity.ts",{"_index":196,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"coverage.html":{}}}],["src/courses/entities/course.entity.ts:15",{"_index":211,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:16",{"_index":208,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:27",{"_index":213,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:31",{"_index":215,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:35",{"_index":219,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:39",{"_index":223,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:43",{"_index":227,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:47",{"_index":229,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:51",{"_index":217,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:55",{"_index":221,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:59",{"_index":225,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:63",{"_index":231,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:67",{"_index":234,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/repository/course.repository",{"_index":374,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/courses/repository/course.repository.ts",{"_index":255,"title":{},"body":{"classes/CourseRepository.html":{},"coverage.html":{}}}],["src/courses/repository/course.repository.ts:4",{"_index":263,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:5",{"_index":270,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:6",{"_index":273,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:7",{"_index":266,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:8",{"_index":275,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/usecase/create.usecase.ts",{"_index":313,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/create.usecase.ts:13",{"_index":318,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["src/courses/usecase/create.usecase.ts:7",{"_index":316,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["src/courses/usecase/delete.usecase.ts",{"_index":513,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/delete.usecase.ts:11",{"_index":514,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["src/courses/usecase/delete.usecase.ts:16",{"_index":516,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["src/courses/usecase/findall.usecase.ts",{"_index":565,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/findall.usecase.ts:12",{"_index":568,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["src/courses/usecase/findall.usecase.ts:7",{"_index":566,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["src/courses/usecase/findbyid.usecase.ts",{"_index":613,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/findbyid.usecase.ts:12",{"_index":615,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{}}}],["src/courses/usecase/findbyid.usecase.ts:7",{"_index":614,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{}}}],["src/courses/usecase/update.usecase.ts",{"_index":854,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/update.usecase.ts:14",{"_index":855,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["src/courses/usecase/update.usecase.ts:19",{"_index":856,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["src/courses/viewmodelcourse.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"classes/viewModelCourse.html":{}}}],["src/courses/viewmodelcourse.ts:5",{"_index":1290,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["src/database/database.module",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["src/database/database.module.ts",{"_index":495,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts",{"_index":701,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts:15",{"_index":707,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts:4",{"_index":709,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts",{"_index":748,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts:18",{"_index":751,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts:4",{"_index":753,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts",{"_index":794,"title":{},"body":{"classes/PrismaUserMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts:18",{"_index":797,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts:5",{"_index":799,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/database/prisma/prisma.service.ts",{"_index":787,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/database/prisma/prisma.service.ts:6",{"_index":791,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/database/prisma/repository/prisma.course.repository",{"_index":320,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts",{"_index":721,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:12",{"_index":725,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:19",{"_index":727,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:38",{"_index":728,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:59",{"_index":726,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:67",{"_index":729,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:9",{"_index":723,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository",{"_index":372,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts",{"_index":769,"title":{},"body":{"injectables/PrismaLessonRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:10",{"_index":771,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:17",{"_index":774,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:26",{"_index":773,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:41",{"_index":772,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:49",{"_index":775,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:59",{"_index":776,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:7",{"_index":770,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts",{"_index":809,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:11",{"_index":814,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:19",{"_index":818,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:31",{"_index":821,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:43",{"_index":816,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:48",{"_index":819,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:60",{"_index":815,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:68",{"_index":823,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:8",{"_index":812,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/lessons/controller/create.controller.ts",{"_index":408,"title":{},"body":{"controllers/CreateLessonsController.html":{},"coverage.html":{}}}],["src/lessons/controller/create.controller.ts:38",{"_index":415,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["src/lessons/controller/delete.controller.ts",{"_index":523,"title":{},"body":{"controllers/DeleteLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/delete.controller.ts:33",{"_index":525,"title":{},"body":{"controllers/DeleteLessonByIdController.html":{}}}],["src/lessons/controller/findallbycourse.controller.ts",{"_index":574,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"coverage.html":{}}}],["src/lessons/controller/findallbycourse.controller.ts:36",{"_index":578,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["src/lessons/controller/findbyid.controller.ts",{"_index":617,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/findbyid.controller.ts:29",{"_index":619,"title":{},"body":{"controllers/FindLessonByIdController.html":{}}}],["src/lessons/controller/update.controller.ts",{"_index":862,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/update.controller.ts:37",{"_index":865,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["src/lessons/dto/create",{"_index":349,"title":{},"body":{"classes/CreateLessonDto.html":{},"coverage.html":{}}}],["src/lessons/dto/update",{"_index":882,"title":{},"body":{"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["src/lessons/entities/lesson.entity",{"_index":237,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["src/lessons/entities/lesson.entity.ts",{"_index":645,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"coverage.html":{}}}],["src/lessons/entities/lesson.entity.ts:15",{"_index":648,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:16",{"_index":646,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:24",{"_index":649,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:27",{"_index":650,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:30",{"_index":652,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:33",{"_index":655,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:36",{"_index":659,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:39",{"_index":663,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:42",{"_index":666,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:45",{"_index":667,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:48",{"_index":651,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:51",{"_index":653,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:54",{"_index":657,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:57",{"_index":661,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:60",{"_index":665,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/lessons.module.ts",{"_index":691,"title":{},"body":{"modules/LessonsModule.html":{}}}],["src/lessons/repository/lesson.repository",{"_index":777,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts",{"_index":674,"title":{},"body":{"classes/LessonRepository.html":{},"coverage.html":{}}}],["src/lessons/repository/lesson.repository.ts:11",{"_index":679,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:12",{"_index":684,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:13",{"_index":686,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:4",{"_index":678,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:5",{"_index":682,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:6",{"_index":681,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/usecase/create.usecase.ts",{"_index":361,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/create.usecase.ts:15",{"_index":364,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["src/lessons/usecase/create.usecase.ts:22",{"_index":367,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["src/lessons/usecase/delete.usecase.ts",{"_index":527,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/delete.usecase.ts:12",{"_index":528,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["src/lessons/usecase/delete.usecase.ts:19",{"_index":529,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts",{"_index":583,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts:15",{"_index":586,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts:9",{"_index":584,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts",{"_index":623,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts:15",{"_index":625,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts:9",{"_index":624,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["src/lessons/usecase/update.usecase.ts",{"_index":870,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/update.usecase.ts:16",{"_index":871,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/lessons/usecase/update.usecase.ts:22",{"_index":873,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/lessons/viewmodellesson",{"_index":1291,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["src/lessons/viewmodellesson.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"classes/viewModelLesson.html":{}}}],["src/lessons/viewmodellesson.ts:4",{"_index":1293,"title":{},"body":{"classes/viewModelLesson.html":{}}}],["src/main.ts",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/controller/create.controller.ts",{"_index":443,"title":{},"body":{"controllers/CreateUserController.html":{},"coverage.html":{}}}],["src/user/controller/create.controller.ts:23",{"_index":451,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["src/user/controller/delete.controller.ts",{"_index":532,"title":{},"body":{"controllers/DeleteUserController.html":{},"coverage.html":{}}}],["src/user/controller/delete.controller.ts:33",{"_index":534,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["src/user/controller/findall.controller.ts",{"_index":591,"title":{},"body":{"controllers/FindAllUserController.html":{},"coverage.html":{}}}],["src/user/controller/findall.controller.ts:31",{"_index":595,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["src/user/controller/findbyid.controller.ts",{"_index":632,"title":{},"body":{"controllers/FindUserByIdController.html":{},"coverage.html":{}}}],["src/user/controller/findbyid.controller.ts:36",{"_index":633,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["src/user/controller/update.controller.ts",{"_index":890,"title":{},"body":{"controllers/UpdateUserController.html":{},"coverage.html":{}}}],["src/user/controller/update.controller.ts:44",{"_index":894,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["src/user/dto/create",{"_index":461,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":899,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":800,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["src/user/entities/user.entity.ts",{"_index":918,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:17",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:31",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":926,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":930,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":934,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:47",{"_index":937,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:51",{"_index":939,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:55",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:59",{"_index":928,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:63",{"_index":932,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:67",{"_index":936,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:71",{"_index":938,"title":{},"body":{"classes/User.html":{}}}],["src/user/repository/user.repository",{"_index":824,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/user/repository/user.repository.ts",{"_index":951,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/user/repository/user.repository.ts:10",{"_index":954,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:12",{"_index":956,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:14",{"_index":953,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:16",{"_index":958,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:4",{"_index":952,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:6",{"_index":955,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:8",{"_index":957,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/usecase/create.usecase.ts",{"_index":472,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/create.usecase.ts:22",{"_index":489,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/user/usecase/create.usecase.ts:27",{"_index":490,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/user/usecase/delete.usecase.ts",{"_index":536,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/delete.usecase.ts:11",{"_index":538,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/user/usecase/delete.usecase.ts:6",{"_index":537,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/user/usecase/findall.usecase.ts",{"_index":601,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/findall.usecase.ts:11",{"_index":604,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["src/user/usecase/findall.usecase.ts:6",{"_index":602,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["src/user/usecase/findbyid.usecase.ts",{"_index":640,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/findbyid.usecase.ts:12",{"_index":642,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{}}}],["src/user/usecase/findbyid.usecase.ts:7",{"_index":641,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{}}}],["src/user/usecase/update.usecase.ts",{"_index":907,"title":{},"body":{"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/update.usecase.ts:14",{"_index":909,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["src/user/usecase/update.usecase.ts:9",{"_index":908,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["src/user/user.module.ts",{"_index":950,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/viewmodeluser.ts",{"_index":959,"title":{},"body":{"classes/ViewModelUser.html":{},"coverage.html":{}}}],["src/user/viewmodeluser.ts:4",{"_index":962,"title":{},"body":{"classes/ViewModelUser.html":{}}}],["src/utils/replace",{"_index":238,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["src/utils/replace.ts",{"_index":1289,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start:dev",{"_index":1050,"title":{},"body":{"index.html":{}}}],["started",{"_index":1004,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":702,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["status",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["steps",{"_index":1026,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":1278,"title":{},"body":{"properties.html":{}}}],["string",{"_index":207,"title":{},"body":{"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{}}}],["student",{"_index":1072,"title":{},"body":{"index.html":{}}}],["students",{"_index":483,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"index.html":{}}}],["students'].includes(userreq.role",{"_index":626,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["students'].includes(userrole",{"_index":377,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["style",{"_index":1117,"title":{},"body":{"index.html":{}}}],["sub",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1232,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1225,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1239,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["summary",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["superagent",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1266,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1267,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1081,"title":{},"body":{"index.html":{}}}],["system",{"_index":1007,"title":{},"body":{"index.html":{}}}],["t",{"_index":1055,"title":{},"body":{"index.html":{}}}],["table",{"_index":979,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":269,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["teachers",{"_index":379,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{}}}],["test",{"_index":1083,"title":{},"body":{"index.html":{}}}],["text",{"_index":402,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{}}}],["text'].includes(role",{"_index":399,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["texto",{"_index":430,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["this.$connect",{"_index":792,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._id",{"_index":242,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.authservice.login(loginauthdto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.courserepository.create(course",{"_index":326,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["this.courserepository.delete(id",{"_index":521,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["this.courserepository.findall(skip",{"_index":569,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["this.courserepository.findbyid(courseid",{"_index":380,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.courserepository.findbyid(id",{"_index":520,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["this.courserepository.update(course",{"_index":860,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["this.jwtservice.sign(payload",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":147,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.lessonrepository.create(lesson",{"_index":406,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["this.lessonrepository.delete(id",{"_index":530,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["this.lessonrepository.findallbycourse",{"_index":587,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["this.lessonrepository.findbyid(id",{"_index":629,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["this.lessonrepository.findbyid(lessonid",{"_index":874,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.lessonrepository.update(lesson",{"_index":881,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.lessonrepository.updatewatching(id",{"_index":627,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["this.prisma.course.create",{"_index":735,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.delete",{"_index":746,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.findmany",{"_index":738,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.findunique",{"_index":744,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.update",{"_index":747,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.lessons.create",{"_index":779,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.delete",{"_index":784,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.findmany",{"_index":782,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.findunique",{"_index":780,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.update",{"_index":785,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.user.create",{"_index":827,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.delete",{"_index":832,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.findmany",{"_index":830,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.findunique",{"_index":828,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.update",{"_index":833,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.props",{"_index":241,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.banner",{"_index":245,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["this.props.content",{"_index":668,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.courseid",{"_index":670,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.createdat",{"_index":246,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.description",{"_index":244,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.email",{"_index":942,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.lessons",{"_index":252,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["this.props.name",{"_index":243,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.password",{"_index":943,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.role",{"_index":669,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.updatedat",{"_index":247,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.username",{"_index":941,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.usecase.execute",{"_index":869,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["this.usecase.execute(+page",{"_index":563,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["this.usecase.execute(course",{"_index":346,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["this.usecase.execute(courseid",{"_index":581,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["this.usecase.execute(createuserdto",{"_index":459,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["this.usecase.execute(id",{"_index":512,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["this.usecase.execute(role",{"_index":599,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["this.usecase.execute(roleuser",{"_index":440,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["this.usecase.execute(userid",{"_index":639,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["this.userrepository.create(user",{"_index":487,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.delete(id",{"_index":541,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["this.userrepository.findall",{"_index":606,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["this.userrepository.findbyemail",{"_index":912,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["this.userrepository.findbyemail(email",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.findbyid(id",{"_index":644,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["this.userrepository.findbyusername(username",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.update(user",{"_index":917,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["throw",{"_index":141,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["today",{"_index":1096,"title":{},"body":{"index.html":{}}}],["todomain",{"_index":703,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["todomain(courseraw",{"_index":705,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["todomain(lessonraw",{"_index":749,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["todomain(userraw",{"_index":795,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["tohttp",{"_index":960,"title":{},"body":{"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["tohttp(undefined",{"_index":961,"title":{},"body":{"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["token",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["toprisma",{"_index":704,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["toprisma(course",{"_index":708,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["toprisma(lesson",{"_index":752,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["toprisma(user",{"_index":798,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["tort",{"_index":1261,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1044,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":697,"title":{},"body":{"classes/LoginAuthDto.html":{},"injectables/PrismaCourseRepository.html":{}}}],["try",{"_index":145,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["type",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["typealiases",{"_index":1286,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":906,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{},"index.html":{}}}],["uma",{"_index":433,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["unauthorized",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["unauthorized.'})@apiresponse({status",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["unauthorizedexception",{"_index":135,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["unauthorizedexception('invalid",{"_index":154,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception('lesson",{"_index":875,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["unauthorizedexception('only",{"_index":517,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{}}}],["unauthorizedexception('token",{"_index":143,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception('user",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":366,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["undefined})@apiresponse({status",{"_index":576,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["understand",{"_index":1186,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["up",{"_index":1040,"title":{},"body":{"index.html":{}}}],["update",{"_index":261,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["update(@req",{"_index":897,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["update(course",{"_index":274,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/PrismaCourseRepository.html":{}}}],["update(lesson",{"_index":683,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["update(req",{"_index":835,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["update(user",{"_index":822,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["updatecoursebyidcontroller",{"_index":291,"title":{"controllers/UpdateCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"coverage.html":{}}}],["updatecoursedto",{"_index":836,"title":{"classes/UpdateCourseDto.html":{}},"body":{"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"coverage.html":{}}}],["updatecoursedto.banner",{"_index":859,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecoursedto.description",{"_index":858,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecoursedto.name",{"_index":857,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecourseusecase",{"_index":285,"title":{"injectables/UpdateCourseUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updated",{"_index":845,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["updated.'})@apiresponse({status",{"_index":839,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["updatedat",{"_index":203,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["updatedlesson",{"_index":868,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["updatelessonbyidcontroller",{"_index":861,"title":{"controllers/UpdateLessonByIdController.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"coverage.html":{}}}],["updatelessonbyidusecase",{"_index":867,"title":{"injectables/UpdateLessonByIdUseCase.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["updatelessondto",{"_index":863,"title":{"classes/UpdateLessonDto.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["updatelessondto})@apiresponse({status",{"_index":864,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["updates",{"_index":1152,"title":{},"body":{"index.html":{}}}],["updateusercontroller",{"_index":889,"title":{"controllers/UpdateUserController.html":{}},"body":{"controllers/UpdateUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":891,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["updateuserdto.email",{"_index":911,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserdto.name",{"_index":910,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserdto.password",{"_index":915,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserusecase",{"_index":895,"title":{"injectables/UpdateUserUseCase.html":{}},"body":{"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["updatewatching",{"_index":676,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["updatewatching(lessonid",{"_index":685,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["url",{"_index":398,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["urlregex",{"_index":395,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["urlregex.test(content",{"_index":397,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["use",{"_index":123,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{},"license.html":{}}}],["use(req",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["usecase",{"_index":341,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["usecase/create.usecase",{"_index":293,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/delete.usecase",{"_index":299,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/findall.usecase",{"_index":295,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"modules/UserModule.html":{}}}],["usecase/findallbycourse.usecase",{"_index":580,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"modules/LessonsModule.html":{}}}],["usecase/findbyid.usecase",{"_index":297,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/update.usecase",{"_index":300,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"modules/UserModule.html":{}}}],["user",{"_index":67,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["user'})@apibody({type",{"_index":446,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["user'})@apiresponse({status",{"_index":533,"title":{},"body":{"controllers/DeleteUserController.html":{},"controllers/UpdateUserController.html":{}}}],["user'})@isemail()@isstring()@isnotempty",{"_index":463,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isstring()@isnotempty",{"_index":465,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.createdat",{"_index":801,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["user.dto",{"_index":453,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.dto.ts",{"_index":462,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":904,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":902,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":464,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":467,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":468,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":903,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":466,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.id",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user.name",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.password",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.role",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user.username",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user/:id",{"_index":1087,"title":{},"body":{"index.html":{}}}],["user/all",{"_index":1086,"title":{},"body":{"index.html":{}}}],["user/entities/user.entity",{"_index":474,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["user/repository/user.repository",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["user/user.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["user['role",{"_index":486,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["useralreadyexist",{"_index":476,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["useralreadyexist.id",{"_index":913,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["userid",{"_index":637,"title":{},"body":{"controllers/FindUserByIdController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{}}}],["username(username",{"_index":944,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["userraw",{"_index":796,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["userraw.createdat",{"_index":807,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.email",{"_index":804,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.id",{"_index":808,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["userraw.name",{"_index":802,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.password",{"_index":805,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.role",{"_index":806,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.username",{"_index":803,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userrepository",{"_index":163,"title":{"classes/UserRepository.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["userreq",{"_index":621,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{}}}],["userreq.id",{"_index":628,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["userrole",{"_index":368,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"classes/PrismaUserMapper.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["users",{"_index":540,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{},"properties.html":{}}}],["users'})@apiresponse({status",{"_index":594,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["users.map(prismausermapper.todomain",{"_index":831,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["users.map(viewmodeluser.tohttp",{"_index":600,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["userschema",{"_index":920,"title":{"interfaces/UserSchema.html":{}},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["using",{"_index":1037,"title":{},"body":{"index.html":{}}}],["valid",{"_index":481,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["validator",{"_index":312,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":478,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["variables",{"_index":1042,"title":{},"body":{"index.html":{}}}],["version",{"_index":1272,"title":{},"body":{"properties.html":{}}}],["viewmodelcourse",{"_index":338,"title":{"classes/viewModelCourse.html":{}},"body":{"controllers/CreateCoursesController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"coverage.html":{},"classes/viewModelCourse.html":{}}}],["viewmodelcourse.tohttp(course",{"_index":612,"title":{},"body":{"controllers/FindCourseByIdController.html":{}}}],["viewmodelcourse.tohttp(result",{"_index":347,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["viewmodellesson",{"_index":417,"title":{"classes/viewModelLesson.html":{}},"body":{"controllers/CreateLessonsController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"coverage.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["viewmodellesson.tohttp(lesson",{"_index":622,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"classes/viewModelCourse.html":{}}}],["viewmodellesson.tohttp(result",{"_index":441,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["viewmodeluser",{"_index":455,"title":{"classes/ViewModelUser.html":{}},"body":{"controllers/CreateUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{},"classes/ViewModelUser.html":{},"coverage.html":{}}}],["viewmodeluser.tohttp(result",{"_index":898,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["viewmodeluser.tohttp(user",{"_index":460,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/FindUserByIdController.html":{}}}],["visit",{"_index":1079,"title":{},"body":{"index.html":{}}}],["void",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["walter",{"_index":1284,"title":{},"body":{"properties.html":{}}}],["warranties",{"_index":1245,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1241,"title":{},"body":{"license.html":{}}}],["watching",{"_index":761,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["whether",{"_index":1258,"title":{},"body":{"license.html":{}}}],["without",{"_index":1216,"title":{},"body":{"license.html":{}}}],["write",{"_index":1172,"title":{},"body":{"index.html":{}}}],["xlsx",{"_index":388,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["yarn",{"_index":1039,"title":{},"body":{"index.html":{}}}],["yes",{"_index":209,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nLessonsModule\n\nLessonsModule\n\nAppModule -->\n\nLessonsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            LessonsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { DatabaseModule } from './database/database.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthMiddleware } from './auth/auth.middleware';\nimport { JwtModule } from '@nestjs/jwt';\nimport { CoursesModule } from './courses/courses.module';\nimport { LessonsModule } from './lessons/lessons.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    UserModule,\n    AuthModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '6h' },\n    }),\n    CoursesModule,\n    LessonsModule,\n  ],\n  controllers: [],\n  providers: [],\n  exports: [JwtModule],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .exclude(\n        { path: 'auth', method: RequestMethod.POST },\n        { path: 'user', method: RequestMethod.POST },\n        { path: 'documentation', method: RequestMethod.GET },\n      )\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'User login'})@ApiBody({type: LoginAuthDto})@ApiResponse({status: 200, description: 'The user has been successfully logged in.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'User login' })\n  @ApiBody({ type: LoginAuthDto })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully logged in.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  login(@Body() loginAuthDto: LoginAuthDto) {\n    return this.authService.login(loginAuthDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.middleware.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.middleware.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private jwtService: JwtService) {}\n  use(req: any, res: any, next: () => void) {\n    const { authorization } = req.headers;\n    const token = authorization?.replace('Bearer ', '');\n    if (!token) {\n      throw new UnauthorizedException('Token not provided');\n    }\n    try {\n      const payload = this.jwtService.verify(token);\n      req['user'] = {\n        id: payload.sub,\n        role: payload.role,\n      };\n\n      next();\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { DatabaseModule } from 'src/database/database.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '6h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserRepository } from '../user/repository/user.repository';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async login(loginAuthDto: LoginAuthDto) {\n    const { email, username, password } = loginAuthDto;\n\n    if (!email && !username) {\n      throw new BadRequestException('Email or Username is required');\n    }\n\n    const user = username\n      ? await this.userRepository.findByUsername(username)\n      : await this.userRepository.findByEmail(email);\n    if (!user) {\n      throw new UnauthorizedException('User or Password is invalid');\n    }\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('User or Password is invalid');\n    }\n\n    const payload = { user: email, sub: user.id, role: user.role };\n    const token = this.jwtService.sign(payload);\n\n    return {\n      user: {\n        id: user.id,\n        name: user.name,\n        username: user.username,\n        email: user.email,\n      },\n      token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/entities/course.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    banner\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                                \n                                    lessons\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/courses/entities/course.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/entities/course.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/entities/course.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:31\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:35\n                                \n                            \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        banner\n                    \n                \n\n                \n                    \n                        getbanner()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setbanner(banner: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            banner\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lessons\n                    \n                \n\n                \n                    \n                        getlessons()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:63\n                                \n                            \n\n                \n                    \n                        setlessons(lessons: Lesson[])\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            lessons\n                                                    \n                                                            \n                                                                            Lesson[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Replace } from 'src/utils/replace';\n\ninterface CourseSchema {\n  name: string;\n  description: string;\n  banner: string;\n  createdAt: Date;\n  updatedAt?: Date;\n  lessons?: Lesson[];\n}\n\nexport class Course {\n  private props: CourseSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get description() {\n    return this.props.description;\n  }\n\n  get banner() {\n    return this.props.banner;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set description(description: string) {\n    this.props.description = description;\n  }\n\n  set banner(banner: string) {\n    this.props.banner = banner;\n  }\n\n  get lessons() {\n    return this.props.lessons;\n  }\n\n  set lessons(lessons: Lesson[]) {\n    this.props.lessons = lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseRepository.html":{"url":"classes/CourseRepository.html","title":"class - CourseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/repository/course.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '../entities/course.entity';\n\nexport abstract class CourseRepository {\n  abstract create(course: Course): Promise;\n  abstract findAll(skip: number, take: number): Promise;\n  abstract findById(id: string): Promise;\n  abstract delete(id: string): Promise;\n  abstract update(course: Course): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseSchema.html":{"url":"interfaces/CourseSchema.html","title":"interface - CourseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CourseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/entities/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            banner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lessons\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        banner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lessons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lessons:         Lesson[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Replace } from 'src/utils/replace';\n\ninterface CourseSchema {\n  name: string;\n  description: string;\n  banner: string;\n  createdAt: Date;\n  updatedAt?: Date;\n  lessons?: Lesson[];\n}\n\nexport class Course {\n  private props: CourseSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get description() {\n    return this.props.description;\n  }\n\n  get banner() {\n    return this.props.banner;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set description(description: string) {\n    this.props.description = description;\n  }\n\n  set banner(banner: string) {\n    this.props.banner = banner;\n  }\n\n  get lessons() {\n    return this.props.lessons;\n  }\n\n  set lessons(lessons: Lesson[]) {\n    this.props.lessons = lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_imports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nDatabaseModule->CoursesModule\n\n\n\n\n\nCreateCourseUseCase\n\nCreateCourseUseCase\n\nCoursesModule -->\n\nCreateCourseUseCase->CoursesModule\n\n\n\n\n\nDeleteCourseByIdUseCase\n\nDeleteCourseByIdUseCase\n\nCoursesModule -->\n\nDeleteCourseByIdUseCase->CoursesModule\n\n\n\n\n\nFindAllCoursesUseCase\n\nFindAllCoursesUseCase\n\nCoursesModule -->\n\nFindAllCoursesUseCase->CoursesModule\n\n\n\n\n\nFindCourseByIdUseCase\n\nFindCourseByIdUseCase\n\nCoursesModule -->\n\nFindCourseByIdUseCase->CoursesModule\n\n\n\n\n\nUpdateCourseUseCase\n\nUpdateCourseUseCase\n\nCoursesModule -->\n\nUpdateCourseUseCase->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateCourseUseCase\n                        \n                        \n                            DeleteCourseByIdUseCase\n                        \n                        \n                            FindAllCoursesUseCase\n                        \n                        \n                            FindCourseByIdUseCase\n                        \n                        \n                            UpdateCourseUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateCoursesController\n                        \n                        \n                            FindAllCoursesController\n                        \n                        \n                            FindCourseByIdController\n                        \n                        \n                            DeleteCourseByIdController\n                        \n                        \n                            UpdateCourseByIdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateCoursesController } from './controller/create.controller';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { CreateCourseUseCase } from './useCase/create.useCase';\nimport { FindAllCoursesController } from './controller/findAll.controller';\nimport { FindAllCoursesUseCase } from './useCase/findAll.useCase';\nimport { FindCourseByIdController } from 'src/courses/controller/findById.controller';\nimport { FindCourseByIdUseCase } from './useCase/findById.useCase';\nimport { DeleteCourseByIdController } from './controller/delete.controller';\nimport { DeleteCourseByIdUseCase } from './useCase/delete.useCase';\nimport { UpdateCourseUseCase } from './useCase/update.useCase';\nimport { UpdateCourseByIdController } from './controller/update.controller';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateCoursesController,\n    FindAllCoursesController,\n    FindCourseByIdController,\n    DeleteCourseByIdController,\n    UpdateCourseByIdController,\n  ],\n  providers: [\n    CreateCourseUseCase,\n    FindAllCoursesUseCase,\n    FindCourseByIdUseCase,\n    DeleteCourseByIdUseCase,\n    UpdateCourseUseCase,\n  ],\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/create-course.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                banner\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course banner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateCourseDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course name' })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course description' })\n  description: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course banner' })\n  banner: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCourseUseCase.html":{"url":"injectables/CreateCourseUseCase.html","title":"injectable - CreateCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/create.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/create.useCase.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { Course } from '../entities/course.entity';\nimport { CourseRepository } from '../repository/course.repository';\n\n@Injectable()\nexport class CreateCourseUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository)\n    private courseRepository: CourseRepository,\n  ) {}\n\n  async execute({ name, description, banner }): Promise {\n    if (!name) {\n      throw new BadRequestException('Name is required');\n    }\n\n    if (!description) {\n      throw new BadRequestException('Description is required');\n    }\n\n    if (!banner) {\n      throw new BadRequestException('Banner is required');\n    }\n\n    const course = new Course({\n      name,\n      description,\n      banner,\n    });\n    await this.courseRepository.create(course);\n\n    return course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateCoursesController.html":{"url":"controllers/CreateCoursesController.html","title":"controller - CreateCoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateCoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new course'})@ApiBody({type: Course})@ApiResponse({status: 201, description: 'The course has been successfully created.'})@ApiResponse({status: 400, description: 'Bad request.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/create.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateCourseUseCase } from '../useCase/create.useCase';\nimport { Course } from '../entities/course.entity';\nimport { viewModelCourse } from '../viewModelCourse';\n\n@ApiTags('courses')\n@ApiBearerAuth()\n@Controller('courses')\nexport class CreateCoursesController {\n  constructor(private useCase: CreateCourseUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new course' })\n  @ApiBody({ type: Course })\n  @ApiResponse({\n    status: 201,\n    description: 'The course has been successfully created.',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad request.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async create(@Body() course: Course) {\n    const result = await this.useCase.execute(course);\n    return viewModelCourse.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLessonDto.html":{"url":"classes/CreateLessonDto.html","title":"class - CreateLessonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLessonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/dto/create-lesson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The content of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The role of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LessonRole } from '@prisma/client';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateLessonDto {\n  @ApiProperty({ description: 'The name of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ description: 'The description of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({ description: 'The content of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  content: string;\n\n  @ApiProperty({ description: 'The role of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  role: LessonRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateLessonUseCase.html":{"url":"injectables/CreateLessonUseCase.html","title":"injectable - CreateLessonUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateLessonUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/create.useCase.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(userRole: string, undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/create.useCase.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class CreateLessonUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository)\n    private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    userRole: string,\n    { name, description, content, role, courseId },\n  ): Promise {\n    if (!name || !description || !content)\n      throw new BadRequestException(\n        'Name, description and content are required',\n      );\n\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can create lessons',\n      );\n    }\n\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n\n    if (['FILE'].includes(role)) {\n      const fileExtension = content.split('.').pop().toLowerCase();\n      const allowedExtensions = ['pdf', 'xlsx', 'docx', 'pptx'];\n      if (!allowedExtensions.includes(fileExtension)) {\n        throw new BadRequestException('Invalid file extension');\n      }\n    }\n\n    if (['LINK'].includes(role)) {\n      const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n      if (!urlRegex.test(content)) {\n        throw new BadRequestException('Invalid URL');\n      }\n    }\n\n    if (\n      ['TEXT'].includes(role) &&\n      (content.length  5000)\n    ) {\n      throw new BadRequestException(\n        'Text content must be between 50 and 5000 characters',\n      );\n    }\n\n    const lesson = new Lesson({\n      name,\n      description,\n      content,\n      role,\n      courseId,\n    });\n    await this.lessonRepository.create(lesson);\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateLessonsController.html":{"url":"controllers/CreateLessonsController.html","title":"controller - CreateLessonsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateLessonsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: Request, courseId: string, lesson: Lesson)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new lesson'})@ApiBody({type: Lesson})@ApiResponse({status: 201, description: 'The lesson has been successfully created.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/create.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Req } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateLessonUseCase } from '../useCase/create.useCase';\nimport { Lesson } from '../entities/lesson.entity';\nimport { viewModelLesson } from '../viewModelLesson';\n\n@ApiTags('lessons')\n@ApiBearerAuth()\n@Controller('courses/:courseId/lessons')\nexport class CreateLessonsController {\n  constructor(private useCase: CreateLessonUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new lesson' })\n  @ApiBody({ type: Lesson })\n  @ApiResponse({\n    status: 201,\n    description: 'The lesson has been successfully created.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Course not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async create(\n    @Req() req: Request,\n    @Param('courseId') courseId: string,\n    @Body() lesson: Lesson,\n  ) {\n    /* req['user'] { id: '59f501ef-7373-47a3-a14e-26ad0bdcda7c', role: 'ADMINISTRATOR' }\nreq.body {\n  name: 'Lição de Texto 1',\n  description: 'Esta é uma lição de texto',\n  content: 'Este é o conteúdo da lição de texto 1.',\n  role: 'TEXT' */\n\n    const roleUser = req['user'].role;\n    const { name, description, content, role } = lesson;\n\n    const result = await this.useCase.execute(roleUser, {\n      courseId,\n      name,\n      description,\n      content,\n      role,\n    });\n    return viewModelLesson.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateUserController.html":{"url":"controllers/CreateUserController.html","title":"controller - CreateUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'The user has been successfully created.'})@ApiResponse({status: 400, description: 'Bad request.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 409, description: 'User already exists.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/create.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\n\nimport { CreateUserUseCase } from '../useCase/create.useCase';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ViewModelUser } from '../viewModelUser';\n\n@ApiTags('users')\n@Controller('user')\nexport class CreateUserController {\n  constructor(private useCase: CreateUserUseCase) {}\n  @Post()\n  @ApiOperation({ summary: 'Create a new user' })\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({\n    status: 201,\n    description: 'The user has been successfully created.',\n  })\n  @ApiResponse({ status: 400, description: 'Bad request.' })\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 409, description: 'User already exists.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  async create(@Body() createUserDto: CreateUserDto) {\n    const user = await this.useCase.execute(createUserDto);\n\n    return ViewModelUser.toHttp(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user'})@IsEmail()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The role of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserRole } from '@prisma/client';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: 'The name of the user' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ description: 'The username of the user' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty({ description: 'The email of the user' })\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({ description: 'The password of the user' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({ description: 'The role of the user' })\n  @IsString()\n  @IsNotEmpty()\n  role: UserRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserRequest.html":{"url":"interfaces/CreateUserRequest.html","title":"interface - CreateUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/create.useCase.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { UserRepository } from '../../user/repository/user.repository';\nimport { User } from '../../user/entities/user.entity';\nimport { hash } from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRole } from '@prisma/client';\n\ninterface CreateUserRequest {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: string;\n}\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute({ name, username, email, password, role }: CreateUserRequest) {\n    const userAlreadyExist =\n      (await this.userRepository.findByEmail(email)) ||\n      (await this.userRepository.findByUsername(username));\n\n    if (userAlreadyExist)\n      throw new ConflictException(\n        'User already exists, username or email already in use',\n      );\n\n    if (!Object.values(UserRole).includes(role as UserRole)) {\n      throw new BadRequestException(\n        'Invalid role value. Please provide a valid value [ADMINISTRATOR | PROFESSOR | STUDENTS].',\n      );\n    }\n\n    const user = new User({\n      name,\n      username,\n      email,\n      password: await hash(password, 10),\n      role: role as User['role'],\n    });\n\n    await this.userRepository.create(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/create.useCase.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: CreateUserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/create.useCase.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { UserRepository } from '../../user/repository/user.repository';\nimport { User } from '../../user/entities/user.entity';\nimport { hash } from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRole } from '@prisma/client';\n\ninterface CreateUserRequest {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: string;\n}\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute({ name, username, email, password, role }: CreateUserRequest) {\n    const userAlreadyExist =\n      (await this.userRepository.findByEmail(email)) ||\n      (await this.userRepository.findByUsername(username));\n\n    if (userAlreadyExist)\n      throw new ConflictException(\n        'User already exists, username or email already in use',\n      );\n\n    if (!Object.values(UserRole).includes(role as UserRole)) {\n      throw new BadRequestException(\n        'Invalid role value. Please provide a valid value [ADMINISTRATOR | PROFESSOR | STUDENTS].',\n      );\n    }\n\n    const user = new User({\n      name,\n      username,\n      email,\n      password: await hash(password, 10),\n      role: role as User['role'],\n    });\n\n    await this.userRepository.create(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nPrismaCourseRepository \n\nPrismaCourseRepository \n\n\n\nPrismaLessonRepository \n\nPrismaLessonRepository \n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nPrismaCourseRepository  -->\n\nDatabaseModule->PrismaCourseRepository \n\n\n\nPrismaLessonRepository  -->\n\nDatabaseModule->PrismaLessonRepository \n\n\n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\n\n\nPrismaCourseRepository\n\nPrismaCourseRepository\n\nDatabaseModule -->\n\nPrismaCourseRepository->DatabaseModule\n\n\n\n\n\nPrismaLessonRepository\n\nPrismaLessonRepository\n\nDatabaseModule -->\n\nPrismaLessonRepository->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaCourseRepository\n                        \n                        \n                            PrismaLessonRepository\n                        \n                        \n                            PrismaService\n                        \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaCourseRepository\n                        \n                        \n                            PrismaLessonRepository\n                        \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaUserRepository } from './prisma/repository/prisma.user.repository';\nimport { PrismaCourseRepository } from './prisma/repository/prisma.course.repository';\nimport { PrismaLessonRepository } from './prisma/repository/prisma.lesson.repository';\n\n@Module({\n  providers: [\n    PrismaService,\n    PrismaUserRepository,\n    PrismaCourseRepository,\n    PrismaLessonRepository,\n  ],\n  exports: [\n    PrismaUserRepository,\n    PrismaCourseRepository,\n    PrismaLessonRepository,\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteCourseByIdController.html":{"url":"controllers/DeleteCourseByIdController.html","title":"controller - DeleteCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete course by id'})@ApiResponse({status: 204, description: 'The course has been successfully deleted.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/delete.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { DeleteCourseByIdUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('courses')\n@ApiBearerAuth()\n@Controller('courses')\nexport class DeleteCourseByIdController {\n  constructor(private useCase: DeleteCourseByIdUseCase) {}\n  @ApiOperation({ summary: 'Delete course by id' })\n  @ApiResponse({\n    status: 204,\n    description: 'The course has been successfully deleted.',\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 404, description: 'Course not found.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  @Delete(':id')\n  async delete(@Req() req: Request, @Param('id') id: string) {\n    const role = req['user'].role;\n    await this.useCase.execute(id, role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteCourseByIdUseCase.html":{"url":"injectables/DeleteCourseByIdUseCase.html","title":"injectable - DeleteCourseByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteCourseByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/delete.useCase.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/delete.useCase.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\n\n@Injectable()\nexport class DeleteCourseByIdUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, role: string): Promise {\n    if (role === 'STUDENTS') {\n      throw new UnauthorizedException('Only administrators can delete courses');\n    }\n    const courseExists = await this.courseRepository.findById(id);\n    if (!courseExists) throw new NotFoundException('Course not found');\n\n    await this.courseRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteLessonByIdController.html":{"url":"controllers/DeleteLessonByIdController.html","title":"controller - DeleteLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete lesson'})@ApiResponse({status: 204, description: 'The lesson has been successfully deleted.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Lesson not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { DeleteLessonByIdUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('lessons')\n@ApiBearerAuth()\n@Controller('courses/:courseId/lessons')\nexport class DeleteLessonByIdController {\n  constructor(private useCase: DeleteLessonByIdUseCase) {}\n  @ApiOperation({ summary: 'Delete lesson' })\n  @ApiResponse({\n    status: 204,\n    description: 'The lesson has been successfully deleted.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Lesson not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  @Delete(':id')\n  async delete(\n    @Req() req: Request,\n    @Param('id') id: string,\n    @Param('courseId') courseId: string,\n  ) {\n    const userRole = req['user'].role;\n    await this.useCase.execute(id, courseId, userRole);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteLessonByIdUseCase.html":{"url":"injectables/DeleteLessonByIdUseCase.html","title":"injectable - DeleteLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: PrismaLessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/delete.useCase.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        PrismaLessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, courseId: string, userRole: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/delete.useCase.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\n\n@Injectable()\nexport class DeleteLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository)\n    private lessonRepository: PrismaLessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, courseId: string, userRole: string): Promise {\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can delete lessons',\n      );\n    }\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n    await this.lessonRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteUserController.html":{"url":"controllers/DeleteUserController.html","title":"controller - DeleteUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete user'})@ApiResponse({status: 204, description: 'The user has been successfully deleted.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'User not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/delete.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { DeleteUserUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('users')\n@ApiBearerAuth()\n@Controller('user')\nexport class DeleteUserController {\n  constructor(private useCase: DeleteUserUseCase) {}\n  @ApiOperation({ summary: 'Delete user' })\n  @ApiResponse({\n    status: 204,\n    description: 'The user has been successfully deleted.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'User not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  @Delete(':id')\n  async delete(@Req() req: Request, @Param('id') id: string) {\n    const role = req['user'].role;\n    await this.useCase.execute(id, role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserUseCase.html":{"url":"injectables/DeleteUserUseCase.html","title":"injectable - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/delete.useCase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/delete.useCase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\n\n@Injectable()\nexport class DeleteUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string, role: string): Promise {\n    if (role !== 'ADMINISTRATOR') {\n      throw new UnauthorizedException('Only administrators can delete users');\n    }\n    await this.userRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllCoursesController.html":{"url":"controllers/FindAllCoursesController.html","title":"controller - FindAllCoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllCoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/findAll.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, size: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all courses'})@ApiResponse({status: 200, description: 'The list of courses has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 500, description: 'Internal server error.'})@ApiQuery({name: 'page', required: false, type: Number, description: 'Page number'})@ApiQuery({name: 'size', required: false, type: Number, description: 'Number of items per page'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/findAll.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n  ApiQuery,\n} from '@nestjs/swagger';\nimport { FindAllCoursesUseCase } from '../useCase/findAll.useCase';\nimport { viewModelCourse } from '../viewModelCourse';\n\n@ApiTags('courses')\n@ApiBearerAuth()\n@Controller('courses')\nexport class FindAllCoursesController {\n  constructor(private useCase: FindAllCoursesUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find all courses' })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of courses has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Page number',\n  })\n  @ApiQuery({\n    name: 'size',\n    required: false,\n    type: Number,\n    description: 'Number of items per page',\n  })\n  async findAll(\n    @Query('page') page: number = 1,\n    @Query('size') size: number = 10,\n  ) {\n    const courses = await this.useCase.execute(+page, +size);\n    return courses.map(viewModelCourse.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllCoursesUseCase.html":{"url":"injectables/FindAllCoursesUseCase.html","title":"injectable - FindAllCoursesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllCoursesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/findAll.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/findAll.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/findAll.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { CourseRepository } from '../repository/course.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class FindAllCoursesUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(page: number, size: number): Promise {\n    const skip = (page - 1) * size;\n    const courses = await this.courseRepository.findAll(skip, size);\n    if (!courses || courses.length === 0) {\n      throw new NotFoundException('Courses not found');\n    }\n\n    return courses;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllLessonsByCourseController.html":{"url":"controllers/FindAllLessonsByCourseController.html","title":"controller - FindAllLessonsByCourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllLessonsByCourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/findAllByCourse.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, size: number, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all lessons'})@ApiResponse({status: 200, type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})@ApiQuery({name: 'size', required: false, type: Number, description: 'Number of items per page'})@ApiQuery({name: 'page', required: false, type: Number, description: 'Page number'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/findAllByCourse.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiQuery,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { viewModelLesson } from '../viewModelLesson';\nimport { FindAllLessonsByCourseUseCase } from '../useCase/findAllByCourse.useCase';\n\n@ApiTags('lessons')\n@ApiBearerAuth()\n@Controller('courses/:courseId/lessons')\nexport class FindAllLessonsByCourseController {\n  constructor(private useCase: FindAllLessonsByCourseUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find all lessons' })\n  @ApiResponse({ status: 200, type: [viewModelLesson] })\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 404, description: 'Course not found.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  @ApiQuery({\n    name: 'size',\n    required: false,\n    type: Number,\n    description: 'Number of items per page',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Page number',\n  })\n  async findAll(\n    @Query('page') page: number = 1,\n    @Query('size') size: number = 10,\n    @Param('courseId') courseId: string,\n  ) {\n    const result = await this.useCase.execute(courseId, +page, +size);\n    return result.map(viewModelLesson.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllLessonsByCourseUseCase.html":{"url":"injectables/FindAllLessonsByCourseUseCase.html","title":"injectable - FindAllLessonsByCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllLessonsByCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/findAllByCourse.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/findAllByCourse.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(courseId: string, page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/findAllByCourse.useCase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\n\n@Injectable()\nexport class FindAllLessonsByCourseUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    courseId: string,\n    page: number,\n    size: number,\n  ): Promise {\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n\n    const skip = (page - 1) * size;\n    const lessons = await this.lessonRepository.findAllByCourse(\n      courseId,\n      skip,\n      size,\n    );\n\n    if (!lessons || lessons.length === 0) {\n      throw new NotFoundException('Lessons not found');\n    }\n    return lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllUserController.html":{"url":"controllers/FindAllUserController.html","title":"controller - FindAllUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/findAll.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')@ApiOperation({summary: 'Find all users'})@ApiResponse({status: 200, description: 'The list of users has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/findAll.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ViewModelUser } from '../viewModelUser';\nimport { FindAllUsersUseCase } from '../useCase/findAll.useCase';\n\n@ApiTags('users')\n@ApiBearerAuth()\n@Controller('user')\nexport class FindAllUserController {\n  constructor(private useCase: FindAllUsersUseCase) {}\n\n  @Get('all')\n  @ApiOperation({ summary: 'Find all users' })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of users has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async findAll(@Req() req: Request) {\n    const role = req['user'].role;\n    const users = await this.useCase.execute(role);\n    return users.map(ViewModelUser.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllUsersUseCase.html":{"url":"injectables/FindAllUsersUseCase.html","title":"injectable - FindAllUsersUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllUsersUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/findAll.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/findAll.useCase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/findAll.useCase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\n\n@Injectable()\nexport class FindAllUsersUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(role: string) {\n    if (role !== 'ADMINISTRATOR') {\n      throw new UnauthorizedException('Only administrators can see all users');\n    }\n    const users = await this.userRepository.findAll();\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindCourseByIdController.html":{"url":"controllers/FindCourseByIdController.html","title":"controller - FindCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find course by ID'})@ApiResponse({status: 200, description: 'The course has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/findById.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Controller, Get, Param } from '@nestjs/common';\nimport { viewModelCourse } from '../viewModelCourse';\nimport { FindCourseByIdUseCase } from '../useCase/findById.useCase';\n\n@ApiTags('courses')\n@ApiBearerAuth()\n@Controller('courses')\nexport class FindCourseByIdController {\n  constructor(private useCase: FindCourseByIdUseCase) {}\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find course by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The course has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Course not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async findById(@Param('id') id: string) {\n    const course = await this.useCase.execute(id);\n    return viewModelCourse.toHttp(course);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindCourseByIdUseCase.html":{"url":"injectables/FindCourseByIdUseCase.html","title":"injectable - FindCourseByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindCourseByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/findById.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/findById.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class FindCourseByIdUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string): Promise {\n    const course = await this.courseRepository.findById(id);\n    if (!course) throw new NotFoundException('Course not found');\n    return course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindLessonByIdController.html":{"url":"controllers/FindLessonByIdController.html","title":"controller - FindLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(req: Request, id: string, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find lesson by ID'})@ApiResponse({status: 200, description: 'The lesson has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Lesson not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/findById.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { viewModelLesson } from '../viewModelLesson';\nimport { FindLessonByIdUseCase } from '../useCase/findById.useCase';\n\n@ApiTags('lessons')\n@ApiBearerAuth()\n@Controller('courses/:courseId/lessons')\nexport class FindLessonByIdController {\n  constructor(private useCase: FindLessonByIdUseCase) {}\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find lesson by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The lesson has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({ status: 404, description: 'Lesson not found.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  async findById(\n    @Req() req: Request,\n    @Param('id') id: string,\n    @Param('courseId') courseId: string,\n  ) {\n    const userReq = req['user'];\n\n    const lesson = await this.useCase.execute(id, courseId, userReq);\n    return viewModelLesson.toHttp(lesson);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindLessonByIdUseCase.html":{"url":"injectables/FindLessonByIdUseCase.html","title":"injectable - FindLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/findById.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, courseId: string, userReq: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/findById.useCase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class FindLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, courseId: string, userReq: any): Promise {\n    if (['STUDENTS'].includes(userReq.role)) {\n      await this.lessonRepository.updateWatching(id, userReq.id);\n    }\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n    const lesson = await this.lessonRepository.findById(id);\n    if (!lesson) throw new NotFoundException('Lesson not found');\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindUserByIdController.html":{"url":"controllers/FindUserByIdController.html","title":"controller - FindUserByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindUserByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find user by ID'})@ApiResponse({status: 200, description: 'The user has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'User not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/findById.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Controller, Get, Req } from '@nestjs/common';\nimport { FindUserByIdUseCase } from '../useCase/findById.useCase';\nimport { ViewModelUser } from '../viewModelUser';\nimport { Request } from 'express';\n\n@ApiTags('users')\n@ApiBearerAuth()\n@Controller('user')\nexport class FindUserByIdController {\n  constructor(private useCase: FindUserByIdUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find user by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'User not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async findById(@Req() req: Request) {\n    const userId = req['user'].id;\n\n    const user = await this.useCase.execute(userId);\n    return ViewModelUser.toHttp(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByIdUseCase.html":{"url":"injectables/FindUserByIdUseCase.html","title":"injectable - FindUserByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/findById.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/findById.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserRepository } from '../repository/user.repository';\nimport { User } from '../entities/user.entity';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\n\n@Injectable()\nexport class FindUserByIdUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string): Promise {\n    const user = await this.userRepository.findById(id);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/entities/lesson.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    content\n                                \n                                \n                                    role\n                                \n                                \n                                    courseId\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/entities/lesson.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lessons/entities/lesson.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/lessons/entities/lesson.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:27\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:30\n                                \n                            \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:33\n                                \n                            \n\n                \n                    \n                        setcontent(content: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:54\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            content\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:36\n                                \n                            \n\n                \n                    \n                        setrole(role: LessonRole)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            role\n                                                    \n                                                            \n                                                                            LessonRole\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courseId\n                    \n                \n\n                \n                    \n                        getcourseId()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setcourseId(courseId: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            courseId\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { LessonRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface LessonSchema {\n  name: string;\n  description: string;\n  content: string;\n  role: LessonRole;\n  courseId: string;\n  createdAt: Date;\n  updatedAt?: Date;\n}\nexport class Lesson {\n  private props: LessonSchema;\n  private _id: string;\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n  get id() {\n    return this._id;\n  }\n  get name() {\n    return this.props.name;\n  }\n  get description() {\n    return this.props.description;\n  }\n  get content() {\n    return this.props.content;\n  }\n  get role() {\n    return this.props.role;\n  }\n  get courseId() {\n    return this.props.courseId;\n  }\n  get createdAt() {\n    return this.props.createdAt;\n  }\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n  set name(name: string) {\n    this.props.name = name;\n  }\n  set description(description: string) {\n    this.props.description = description;\n  }\n  set content(content: string) {\n    this.props.content = content;\n  }\n  set role(role: LessonRole) {\n    this.props.role = role;\n  }\n  set courseId(courseId: string) {\n    this.props.courseId = courseId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonRepository.html":{"url":"classes/LessonRepository.html","title":"class - LessonRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/repository/lesson.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAllByCourse\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                updateWatching\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllByCourse\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByCourse(courseId: string, skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateWatching\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWatching(lessonId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from '../entities/lesson.entity';\n\nexport abstract class LessonRepository {\n  abstract create(lesson: Lesson): Promise;\n  abstract findById(id: string): Promise;\n  abstract findAllByCourse(\n    courseId: string,\n    skip: number,\n    take: number,\n  ): Promise;\n  abstract delete(id: string): Promise;\n  abstract update(lesson: Lesson): Promise;\n  abstract updateWatching(lessonId: string, userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonSchema.html":{"url":"interfaces/LessonSchema.html","title":"interface - LessonSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/entities/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         LessonRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LessonRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LessonRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface LessonSchema {\n  name: string;\n  description: string;\n  content: string;\n  role: LessonRole;\n  courseId: string;\n  createdAt: Date;\n  updatedAt?: Date;\n}\nexport class Lesson {\n  private props: LessonSchema;\n  private _id: string;\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n  get id() {\n    return this._id;\n  }\n  get name() {\n    return this.props.name;\n  }\n  get description() {\n    return this.props.description;\n  }\n  get content() {\n    return this.props.content;\n  }\n  get role() {\n    return this.props.role;\n  }\n  get courseId() {\n    return this.props.courseId;\n  }\n  get createdAt() {\n    return this.props.createdAt;\n  }\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n  set name(name: string) {\n    this.props.name = name;\n  }\n  set description(description: string) {\n    this.props.description = description;\n  }\n  set content(content: string) {\n    this.props.content = content;\n  }\n  set role(role: LessonRole) {\n    this.props.role = role;\n  }\n  set courseId(courseId: string) {\n    this.props.courseId = courseId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonsModule.html":{"url":"modules/LessonsModule.html","title":"module - LessonsModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonsModule\n\n\n\ncluster_LessonsModule_imports\n\n\n\ncluster_LessonsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nLessonsModule\n\nLessonsModule\n\nLessonsModule -->\n\nDatabaseModule->LessonsModule\n\n\n\n\n\nCreateLessonUseCase\n\nCreateLessonUseCase\n\nLessonsModule -->\n\nCreateLessonUseCase->LessonsModule\n\n\n\n\n\nDeleteLessonByIdUseCase\n\nDeleteLessonByIdUseCase\n\nLessonsModule -->\n\nDeleteLessonByIdUseCase->LessonsModule\n\n\n\n\n\nFindAllLessonsByCourseUseCase\n\nFindAllLessonsByCourseUseCase\n\nLessonsModule -->\n\nFindAllLessonsByCourseUseCase->LessonsModule\n\n\n\n\n\nFindLessonByIdUseCase\n\nFindLessonByIdUseCase\n\nLessonsModule -->\n\nFindLessonByIdUseCase->LessonsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lessons/lessons.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateLessonUseCase\n                        \n                        \n                            DeleteLessonByIdUseCase\n                        \n                        \n                            FindAllLessonsByCourseUseCase\n                        \n                        \n                            FindLessonByIdUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateLessonsController\n                        \n                        \n                            FindLessonByIdController\n                        \n                        \n                            FindAllLessonsByCourseController\n                        \n                        \n                            DeleteLessonByIdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateLessonsController } from './controller/create.controller';\nimport { CreateLessonUseCase } from './useCase/create.useCase';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { FindLessonByIdController } from './controller/findById.controller';\nimport { FindLessonByIdUseCase } from './useCase/findById.useCase';\nimport { FindAllLessonsByCourseController } from './controller/findAllByCourse.controller';\nimport { FindAllLessonsByCourseUseCase } from './useCase/findAllByCourse.useCase';\nimport { DeleteLessonByIdController } from './controller/delete.controller';\nimport { DeleteLessonByIdUseCase } from './useCase/delete.useCase';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateLessonsController,\n    FindLessonByIdController,\n    FindAllLessonsByCourseController,\n    DeleteLessonByIdController,\n  ],\n  providers: [\n    CreateLessonUseCase,\n    FindLessonByIdUseCase,\n    FindAllLessonsByCourseUseCase,\n    DeleteLessonByIdUseCase,\n  ],\n})\nexport class LessonsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAuthDto.html":{"url":"classes/LoginAuthDto.html","title":"class - LoginAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginAuthDto {\n  @ApiProperty({ description: 'The username of the user', required: false })\n  username?: string;\n\n  @ApiProperty({ description: 'The email of the user', required: false })\n  email?: string;\n\n  @ApiProperty({ description: 'The password of the user', required: true })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaCourseMapper.html":{"url":"classes/PrismaCourseMapper.html","title":"class - PrismaCourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaCourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(courseRaw: CourseRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.course.mapper.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseRaw\n                                            \n                                                            CourseRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Course\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.course.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CourseRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from 'src/courses/entities/course.entity';\nimport { Course as CourseRaw } from '@prisma/client';\nexport class PrismaCourseMapper {\n  static toPrisma(course: Course): CourseRaw {\n    return {\n      id: course.id,\n      name: course.name,\n      description: course.description,\n      banner: course.banner,\n      createdAt: course.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(courseRaw: CourseRaw): Course {\n    return new Course(\n      {\n        name: courseRaw.name,\n        description: courseRaw.description,\n        banner: courseRaw.banner,\n        createdAt: courseRaw.createdAt,\n      },\n      courseRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaCourseRepository.html":{"url":"injectables/PrismaCourseRepository.html","title":"injectable - PrismaCourseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaCourseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.course.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.course.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaService } from '../prisma.service';\nimport { Course } from 'src/courses/entities/course.entity';\nimport { PrismaCourseMapper } from '../mappers/prisma.course.mapper';\nimport { PrismaLessonMapper } from '../mappers/prisma.lesson.mapper';\n\n@Injectable()\nexport class PrismaCourseRepository implements CourseRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(course: Course): Promise {\n    const courseRaw = PrismaCourseMapper.toPrisma(course);\n    await this.prisma.course.create({\n      data: courseRaw,\n    });\n  }\n\n  async findAll(skip: number, take: number): Promise {\n    const coursesRaw = await this.prisma.course.findMany({\n      skip: skip,\n      take: take,\n      include: {\n        lessons: true,\n      },\n    });\n\n    const result = coursesRaw.map((courseRaw) => {\n      const lessons = courseRaw.lessons.map(PrismaLessonMapper.toDomain);\n      const course = PrismaCourseMapper.toDomain(courseRaw);\n      course.lessons = lessons;\n      return course;\n    });\n\n    return result;\n  }\n\n  async findById(id: string): Promise {\n    const courseRaw = await this.prisma.course.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        lessons: true,\n      },\n    });\n\n    if (!courseRaw) return null;\n\n    const lessons = courseRaw.lessons.map(PrismaLessonMapper.toDomain);\n\n    const course = PrismaCourseMapper.toDomain(courseRaw);\n\n    course.lessons = lessons;\n\n    return course;\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.course.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(course: Course): Promise {\n    const courseRaw = PrismaCourseMapper.toPrisma(course);\n    await this.prisma.course.update({\n      where: {\n        id: courseRaw.id,\n      },\n      data: courseRaw,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaLessonMapper.html":{"url":"classes/PrismaLessonMapper.html","title":"class - PrismaLessonMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaLessonMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.lesson.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(lessonRaw: LessonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.lesson.mapper.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonRaw\n                                            \n                                                            LessonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Lesson\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.lesson.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LessonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Lessons as LessonRaw } from '@prisma/client';\nexport class PrismaLessonMapper {\n  static toPrisma(lesson: Lesson): LessonRaw {\n    return {\n      id: lesson.id,\n      name: lesson.name,\n      description: lesson.description,\n      content: lesson.content,\n      role: lesson.role,\n      courseId: lesson.courseId,\n      createdAt: lesson.createdAt,\n      updatedAt: new Date(),\n      watching: [],\n    };\n  }\n\n  static toDomain(lessonRaw: LessonRaw): Lesson {\n    return new Lesson(\n      {\n        name: lessonRaw.name,\n        description: lessonRaw.description,\n        content: lessonRaw.content,\n        role: lessonRaw.role,\n        courseId: lessonRaw.courseId,\n        createdAt: lessonRaw.createdAt,\n      },\n      lessonRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaLessonRepository.html":{"url":"injectables/PrismaLessonRepository.html","title":"injectable - PrismaLessonRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaLessonRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.lesson.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByCourse\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateWatching\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.lesson.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByCourse\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByCourse(courseId: string, skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWatching\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWatching(lessonId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LessonRepository } from 'src/lessons/repository/lesson.repository';\nimport { PrismaService } from '../prisma.service';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { PrismaLessonMapper } from '../mappers/prisma.lesson.mapper';\n@Injectable()\nexport class PrismaLessonRepository implements LessonRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(lesson: Lesson): Promise {\n    const lessonRaw = PrismaLessonMapper.toPrisma(lesson);\n    await this.prisma.lessons.create({\n      data: lessonRaw,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const lesson = await this.prisma.lessons.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!lesson) return null;\n    return PrismaLessonMapper.toDomain(lesson);\n  }\n  async findAllByCourse(\n    courseId: string,\n    skip: number,\n    take: number,\n  ): Promise {\n    const lessons = await this.prisma.lessons.findMany({\n      where: {\n        courseId: courseId,\n      },\n      skip,\n      take,\n    });\n    return lessons.map((lesson) => PrismaLessonMapper.toDomain(lesson));\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.lessons.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(lesson: Lesson): Promise {\n    const lessonRaw = PrismaLessonMapper.toPrisma(lesson);\n    await this.prisma.lessons.update({\n      where: {\n        id: lessonRaw.id,\n      },\n      data: lessonRaw,\n    });\n  }\n\n  async updateWatching(lessonId: string, userId: string): Promise {\n    await this.prisma.lessons.update({\n      where: { id: lessonId },\n      data: {\n        watching: {\n          push: userId,\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaUserMapper.html":{"url":"classes/PrismaUserMapper.html","title":"class - PrismaUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(userRaw: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.user.mapper.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRaw\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.user.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/user/entities/user.entity';\nimport { User as UserRaw, UserRole } from '@prisma/client';\n\nexport class PrismaUserMapper {\n  static toPrisma(user: User): UserRaw {\n    return {\n      id: user.id,\n      name: user.name,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      role: user.role as UserRole,\n      createdAt: user.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(userRaw: UserRaw): User {\n    return new User(\n      {\n        name: userRaw.name,\n        username: userRaw.username,\n        email: userRaw.email,\n        password: userRaw.password,\n        role: userRaw.role as UserRole,\n        createdAt: userRaw.createdAt,\n      },\n      userRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaUserRepository.html":{"url":"injectables/PrismaUserRepository.html","title":"injectable - PrismaUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.user.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from 'src/user/entities/user.entity';\nimport { UserRepository } from 'src/user/repository/user.repository';\nimport { PrismaService } from '../prisma.service';\nimport { PrismaUserMapper } from '../mappers/prisma.user.mapper';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PrismaUserRepository implements UserRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(user: User): Promise {\n    const userRaw = PrismaUserMapper.toPrisma(user);\n\n    await this.prisma.user.create({\n      data: userRaw,\n    });\n  }\n\n  async findByEmail(email: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async findByUsername(username: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        username,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async findAll(): Promise {\n    const users = await this.prisma.user.findMany();\n    return users.map(PrismaUserMapper.toDomain);\n  }\n\n  async findById(id: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(user: User): Promise {\n    const userRaw = PrismaUserMapper.toPrisma(user);\n    await this.prisma.user.update({\n      where: {\n        id: userRaw.id,\n      },\n      data: userRaw,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateCourseByIdController.html":{"url":"controllers/UpdateCourseByIdController.html","title":"controller - UpdateCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/update.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, updateCourseDto: UpdateCourseDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update course'})@ApiResponse({status: 200, description: 'The course has been successfully updated.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/update.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            UpdateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UpdateCourseUseCase } from '../useCase/update.useCase';\nimport { viewModelCourse } from '../viewModelCourse';\nimport { UpdateCourseDto } from '../dto/update-course.dto';\n\n@ApiTags('courses')\n@ApiBearerAuth()\n@Controller('courses')\nexport class UpdateCourseByIdController {\n  constructor(private useCase: UpdateCourseUseCase) {}\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update course' })\n  @ApiResponse({\n    status: 200,\n    description: 'The course has been successfully updated.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Course not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async update(\n    @Req() req: Request,\n    @Body() updateCourseDto: UpdateCourseDto,\n    @Param('id') id: string,\n  ) {\n    const { role } = req['user'];\n    const result = await this.useCase.execute(id, role, updateCourseDto);\n    return viewModelCourse.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCourseDto.html":{"url":"classes/UpdateCourseDto.html","title":"class - UpdateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/update-course.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCourseDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                banner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course banner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCourseDto } from './create-course.dto';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateCourseDto extends PartialType(CreateCourseDto) {\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course name' })\n  name?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course description' })\n  description?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course banner' })\n  banner?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateCourseUseCase.html":{"url":"injectables/UpdateCourseUseCase.html","title":"injectable - UpdateCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/update.useCase.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string, updateCourseDto: UpdateCourseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/update.useCase.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            UpdateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\n\nimport { UpdateCourseDto } from '../dto/update-course.dto';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class UpdateCourseUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    id: string,\n    role: string,\n    updateCourseDto: UpdateCourseDto,\n  ): Promise {\n    if (role === 'STUDENTS') {\n      throw new UnauthorizedException(\n        'Only administrators and teachers can update courses',\n      );\n    }\n    const Course = await this.courseRepository.findById(id);\n    if (!Course) throw new NotFoundException('Course not found');\n\n    if (updateCourseDto.name) Course.name = updateCourseDto.name;\n\n    if (updateCourseDto.description)\n      Course.description = updateCourseDto.description;\n\n    if (updateCourseDto.banner) Course.banner = updateCourseDto.banner;\n\n    await this.courseRepository.update(Course);\n\n    return Course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateLessonByIdController.html":{"url":"controllers/UpdateLessonByIdController.html","title":"controller - UpdateLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/update.Controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, courseId: string, lessonId: string, updateLessonDto: UpdateLessonDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a lesson'})@ApiBody({type: UpdateLessonDto})@ApiResponse({status: 200, description: 'The lesson has been successfully updated.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Lesson not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/update.Controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLessonDto\n                                            \n                                                            UpdateLessonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Patch, Param, Body, Req } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UpdateLessonDto } from '../dto/update-lesson.dto';\nimport { UpdateLessonByIdUseCase } from '../useCase/update.useCase';\n\n@ApiTags('lessons')\n@ApiBearerAuth()\n@Controller('courses/:courseId/lessons')\nexport class UpdateLessonByIdController {\n  constructor(private useCase: UpdateLessonByIdUseCase) {}\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update a lesson' })\n  @ApiBody({ type: UpdateLessonDto })\n  @ApiResponse({\n    status: 200,\n    description: 'The lesson has been successfully updated.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Lesson not found.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async update(\n    @Req() req: Request,\n    @Param('courseId') courseId: string,\n    @Param('id') lessonId: string,\n    @Body() updateLessonDto: UpdateLessonDto,\n  ) {\n    const userRole = req['user'].role;\n\n    const updatedLesson = await this.useCase.execute(\n      courseId,\n      lessonId,\n      userRole,\n      updateLessonDto,\n    );\n\n    return updatedLesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateLessonByIdUseCase.html":{"url":"injectables/UpdateLessonByIdUseCase.html","title":"injectable - UpdateLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/update.useCase.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(courseId: string, lessonId: string, userRole: string, lessonUpdate: UpdateLessonDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/update.useCase.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonUpdate\n                                            \n                                                            UpdateLessonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { UpdateLessonDto } from '../dto/update-lesson.dto';\nimport { Lesson } from '../entities/lesson.entity';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class UpdateLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    courseId: string,\n    lessonId: string,\n    userRole: string,\n    lessonUpdate: UpdateLessonDto,\n  ): Promise {\n    const { content, role } = lessonUpdate;\n\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can update lessons',\n      );\n    }\n\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) {\n      throw new NotFoundException('Course not found');\n    }\n\n    const lesson = await this.lessonRepository.findById(lessonId);\n    if (!lesson) {\n      throw new NotFoundException('Lesson not found');\n    }\n\n    if (lesson.courseId !== course.id) {\n      throw new UnauthorizedException('Lesson not part of the course');\n    }\n    if (['FILE'].includes(role)) {\n      const fileExtension = content.split('.').pop().toLowerCase();\n      const allowedExtensions = ['pdf', 'xlsx', 'docx', 'pptx'];\n      if (!allowedExtensions.includes(fileExtension)) {\n        throw new BadRequestException('Invalid file extension');\n      }\n    }\n\n    if (['LINK'].includes(role)) {\n      const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n      if (!urlRegex.test(content)) {\n        throw new BadRequestException('Invalid URL');\n      }\n    }\n\n    if (\n      ['TEXT'].includes(role) &&\n      (content.length  5000)\n    ) {\n      throw new BadRequestException(\n        'Text content must be between 50 and 5000 characters',\n      );\n    }\n\n    if (lessonUpdate.name) lesson.name = lessonUpdate.name;\n    if (lessonUpdate.description) lesson.description = lessonUpdate.description;\n    if (lessonUpdate.content) lesson.content = lessonUpdate.content;\n    if (lessonUpdate.role) lesson.role = lessonUpdate.role;\n\n    await this.lessonRepository.update(lesson);\n\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLessonDto.html":{"url":"classes/UpdateLessonDto.html","title":"class - UpdateLessonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLessonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/dto/update-lesson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLessonDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The content of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The description of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The name of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The role of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateLessonDto } from './create-lesson.dto';\nimport { IsOptional, IsString } from 'class-validator';\nimport { LessonRole } from '@prisma/client';\n\nexport class UpdateLessonDto extends PartialType(CreateLessonDto) {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The name of the lesson' })\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The description of the lesson' })\n  description?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The content of the lesson' })\n  content?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The role of the lesson' })\n  role?: LessonRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateUserController.html":{"url":"controllers/UpdateUserController.html","title":"controller - UpdateUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/update.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiOperation({summary: 'Update user'})@ApiResponse({status: 200, description: 'The user has been successfully updated.'})@ApiResponse({status: 400, description: 'Bad request.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'User not found.'})@ApiResponse({status: 409, description: 'Conflict.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/update.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Patch, Req } from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UpdateUserUseCase } from '../useCase/update.useCase';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { ViewModelUser } from '../viewModelUser';\n\n@ApiTags('users')\n@ApiBearerAuth()\n@Controller('user')\nexport class UpdateUserController {\n  constructor(private useCase: UpdateUserUseCase) {}\n\n  @Patch()\n  @ApiOperation({ summary: 'Update user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully updated.',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad request.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'User not found.',\n  })\n  @ApiResponse({\n    status: 409,\n    description: 'Conflict.',\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n  })\n  async update(@Req() req: Request, @Body() updateUserDto: UpdateUserDto) {\n    const { id } = req['user'];\n    const result = await this.useCase.execute(id, updateUserDto);\n    return ViewModelUser.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  Password?: string;\n\n  @IsOptional()\n  @IsString()\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserUseCase.html":{"url":"injectables/UpdateUserUseCase.html","title":"injectable - UpdateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/update.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/update.useCase.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Inject, Injectable } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\nimport { User } from '../entities/user.entity';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UpdateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string, updateUserDto: UpdateUserDto): Promise {\n    const user = await this.userRepository.findById(id);\n\n    if (updateUserDto.name) user.name = updateUserDto.name;\n\n    if (updateUserDto.email) {\n      const userAlreadyExist = await this.userRepository.findByEmail(\n        updateUserDto.email,\n      );\n\n      if (userAlreadyExist && userAlreadyExist.id !== id)\n        throw new ConflictException('This email is already in use');\n\n      user.email = updateUserDto.email;\n    }\n\n    if (updateUserDto.password) {\n      user.password = await bcrypt.hash(updateUserDto.password, 10);\n    }\n    await this.userRepository.update(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    role\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/entities/user.entity.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:31\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:35\n                                \n                            \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setemail(email: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            email\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:43\n                                \n                            \n\n                \n                    \n                        setpassword(password: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            password\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:47\n                                \n                            \n\n                \n                    \n                        setrole(role: UserRole)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:71\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            role\n                                                    \n                                                            \n                                                                            UserRole\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { UserRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface UserSchema {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\nexport class User {\n  private props: UserSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get username() {\n    return this.props.username;\n  }\n\n  get email() {\n    return this.props.email;\n  }\n\n  get password() {\n    return this.props.password;\n  }\n\n  get role() {\n    return this.props.role;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set username(username: string) {\n    this.props.username = username;\n  }\n\n  set email(email: string) {\n    this.props.email = email;\n  }\n\n  set password(password: string) {\n    this.props.password = password;\n  }\n\n  set role(role: UserRole) {\n    this.props.role = role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFindAllUsersUseCase\n\nFindAllUsersUseCase\n\nUserModule -->\n\nFindAllUsersUseCase->UserModule\n\n\n\n\n\nFindUserByIdUseCase\n\nFindUserByIdUseCase\n\nUserModule -->\n\nFindUserByIdUseCase->UserModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nUserModule -->\n\nUpdateUserUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserUseCase\n                        \n                        \n                            DeleteUserUseCase\n                        \n                        \n                            FindAllUsersUseCase\n                        \n                        \n                            FindUserByIdUseCase\n                        \n                        \n                            UpdateUserUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateUserController\n                        \n                        \n                            FindAllUserController\n                        \n                        \n                            FindUserByIdController\n                        \n                        \n                            DeleteUserController\n                        \n                        \n                            UpdateUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateUserController } from './controller/create.controller';\nimport { CreateUserUseCase } from './useCase/create.useCase';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { FindAllUsersUseCase } from './useCase/findAll.useCase';\nimport { FindAllUserController } from './controller/findAll.controller';\nimport { FindUserByIdController } from './controller/findById.controller';\nimport { FindUserByIdUseCase } from './useCase/findById.useCase';\nimport { DeleteUserController } from './controller/delete.controller';\nimport { DeleteUserUseCase } from './useCase/delete.useCase';\nimport { UpdateUserController } from './controller/update.controller';\nimport { UpdateUserUseCase } from './useCase/update.useCase';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateUserController,\n    FindAllUserController,\n    FindUserByIdController,\n    DeleteUserController,\n    UpdateUserController,\n  ],\n  providers: [\n    CreateUserUseCase,\n    FindAllUsersUseCase,\n    FindUserByIdUseCase,\n    DeleteUserUseCase,\n    UpdateUserUseCase,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/user.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                findByEmail\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByUsername\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport abstract class UserRepository {\n  abstract create(user: User): Promise;\n\n  abstract findByEmail(email: string): Promise;\n\n  abstract findByUsername(username: string): Promise;\n\n  abstract findAll(): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract delete(id: string): Promise;\n\n  abstract update(user: User): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSchema.html":{"url":"interfaces/UserSchema.html","title":"interface - UserSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface UserSchema {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\nexport class User {\n  private props: UserSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get username() {\n    return this.props.username;\n  }\n\n  get email() {\n    return this.props.email;\n  }\n\n  get password() {\n    return this.props.password;\n  }\n\n  get role() {\n    return this.props.role;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set username(username: string) {\n    this.props.username = username;\n  }\n\n  set email(email: string) {\n    this.props.email = email;\n  }\n\n  set password(password: string) {\n    this.props.password = password;\n  }\n\n  set role(role: UserRole) {\n    this.props.role = role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewModelUser.html":{"url":"classes/ViewModelUser.html","title":"class - ViewModelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewModelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/viewModelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/viewModelUser.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: User; name: User; username: User; email: User; role: User; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './entities/user.entity';\n\nexport class ViewModelUser {\n  static toHttp({ id, name, username, email, role }: User) {\n    return {\n      id,\n      name,\n      username,\n      email,\n      role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-auth.dto.ts\n            \n            class\n            LoginAuthDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/controller/create.controller.ts\n            \n            controller\n            CreateCoursesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/delete.controller.ts\n            \n            controller\n            DeleteCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/findAll.controller.ts\n            \n            controller\n            FindAllCoursesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/findById.controller.ts\n            \n            controller\n            FindCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/update.controller.ts\n            \n            controller\n            UpdateCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/dto/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/dto/update-course.dto.ts\n            \n            class\n            UpdateCourseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/entities/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/entities/course.entity.ts\n            \n            interface\n            CourseSchema\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/courses/repository/course.repository.ts\n            \n            class\n            CourseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/courses/useCase/create.useCase.ts\n            \n            injectable\n            CreateCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteCourseByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/findAll.useCase.ts\n            \n            injectable\n            FindAllCoursesUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/findById.useCase.ts\n            \n            injectable\n            FindCourseByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/update.useCase.ts\n            \n            injectable\n            UpdateCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/viewModelCourse.ts\n            \n            class\n            viewModelCourse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.course.mapper.ts\n            \n            class\n            PrismaCourseMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.lesson.mapper.ts\n            \n            class\n            PrismaLessonMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.user.mapper.ts\n            \n            class\n            PrismaUserMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.course.repository.ts\n            \n            injectable\n            PrismaCourseRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.lesson.repository.ts\n            \n            injectable\n            PrismaLessonRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.user.repository.ts\n            \n            injectable\n            PrismaUserRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lessons/controller/create.controller.ts\n            \n            controller\n            CreateLessonsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/delete.controller.ts\n            \n            controller\n            DeleteLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/findAllByCourse.controller.ts\n            \n            controller\n            FindAllLessonsByCourseController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/findById.controller.ts\n            \n            controller\n            FindLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/update.Controller.ts\n            \n            controller\n            UpdateLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/dto/create-lesson.dto.ts\n            \n            class\n            CreateLessonDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lessons/dto/update-lesson.dto.ts\n            \n            class\n            UpdateLessonDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lessons/entities/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lessons/entities/lesson.entity.ts\n            \n            interface\n            LessonSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lessons/repository/lesson.repository.ts\n            \n            class\n            LessonRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lessons/useCase/create.useCase.ts\n            \n            injectable\n            CreateLessonUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/findAllByCourse.useCase.ts\n            \n            injectable\n            FindAllLessonsByCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/findById.useCase.ts\n            \n            injectable\n            FindLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/update.useCase.ts\n            \n            injectable\n            UpdateLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/viewModelLesson.ts\n            \n            class\n            viewModelLesson\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controller/create.controller.ts\n            \n            controller\n            CreateUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/delete.controller.ts\n            \n            controller\n            DeleteUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/findAll.controller.ts\n            \n            controller\n            FindAllUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/findById.controller.ts\n            \n            controller\n            FindUserByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/update.controller.ts\n            \n            controller\n            UpdateUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            interface\n            UserSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/repository/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/useCase/create.useCase.ts\n            \n            injectable\n            CreateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/create.useCase.ts\n            \n            interface\n            CreateUserRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/findAll.useCase.ts\n            \n            injectable\n            FindAllUsersUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/findById.useCase.ts\n            \n            injectable\n            FindUserByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/update.useCase.ts\n            \n            injectable\n            UpdateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/viewModelUser.ts\n            \n            class\n            ViewModelUser\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.13.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            jsonwebtoken : ^9.0.2\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            superagent : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOnline Course Registration System\nAPI Documentation   |   Code Documentation\nThis project is an API for managing online courses, with functionalities for teachers and students.\nTable of Contents\n\nInstallation\nRunning with Docker\nDatabase Migrations and Seeding\nAPI Endpoints\nContribution\nLicense\n\nInstallation\nTo run the project locally, follow these steps:\n\nClone the repository from the master branch. https://github.com/Walttinho/lms.git\nNavigate to the project directory. cd lms\nInstall dependencies using npm or yarn: npm install or yarn install.\nSet up your environment variables as needed.  touch .env && echo -e \"DATABASE_URL=\\nPORT=\\nJWT_SECRET=\" >> .env\nRun the application: npm run start:dev or yarn start:dev.\n\nRunning with Docker\nTo run the project using Docker, follow these steps:\n\nInstall Docker on your machine if you haven't already.\nBuild the Docker image: docker build -t lms-backend .\nRun the Docker container: docker run -p 3000:3000 lms-backend\n\nDatabase Migrations and Seeding\nTo apply database migrations and seeding, follow these steps:\n\nRun database migrations: prisma migrate dev\nSeed the database with initial data: prisma db seed\n\nSimulating Different Access Types\n\nAdministrator Access: Use the appropriate token in the request header to simulate administrator access.\nProfessor Access: Use the appropriate token in the request header to simulate professor access.\nStudent Access: Use the appropriate token in the request header to simulate student access.\n\nAPI Endpoints\nFor detailed information on each endpoint, click on the endpoint name. Additionally, you can visit the interactive documentation at Swagger to explore and test the API endpoints directly in your browser.\n\nPOST /user: Create a new user.\nGET /user/all: List all users.\nGET /user: Find a user by ID.\nDELETE /user/:id: Delete a user by ID.\nPATCH /user: Update a user.\nPOST /auth: User login.\nPOST /courses: Create a new course.\nPOST /courses/:courseId/lessons: Create a new lesson for a specific course.\nGET /courses: List all courses.\nGET /courses/:courseId/lessons: List all lessons for a specific course.\nGET /courses/:id: Find a course by ID.\nGET /courses/:courseId/lessons/:id: Find a lesson by ID for a specific course.\nPUT /courses/:id: Update a course by ID.\nPUT /courses/:courseId/lessons/:id: Update a lesson by ID for a specific course.\nDELETE /courses/:id: Delete a course by ID.\nDELETE /courses/:courseId/lessons/:id: Delete a lesson by ID for a specific course.\n\nContribution\nWe appreciate all contributors who have helped make this project what it is today. If you are interested in contributing, please follow the instructions below:\n\nFork the project.\nCreate a branch with the name of your feature or fix (git checkout -b feature/my-new-feature).\nMake your changes and commit them (git commit -am 'Add some feature').\nPush to your branch (git push origin feature/my-new-feature).\nOpen a Pull Request.\n\nPlease ensure your code is in line with the project's style guidelines and that all test checks are passing.\nLicense\nNest is MIT licensed.\n1. Create a New User\nRoute: POST /user\nDescription: Creates a new user.\nRequest Body:\nExample :{\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"role\": \"STUDENTS\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"role\": \"STUDENTS\"\n}2. List All Users\nRoute: GET /user/all\nDescription: Lists all users available.\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n    \"name\": \"John Doe\",\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"STUDENTS\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417401\",\n    \"name\": \"Jane Smith\",\n    \"username\": \"janesmith\",\n    \"email\": \"jane.smith@example.com\",\n    \"role\": \"PROFESSOR\"\n  }\n]3. Find a User by ID\nRoute: GET /user\nDescription: Finds a user by ID.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"role\": \"STUDENTS\"\n}4. Delete a User by ID\nRoute: DELETE /user/:id\nDescription: Deletes a user by ID.\nResponse:\nExample :{\n  \"message\": \"User deleted successfully\"\n}5. Update a User\nRoute: PATCH /user\nDescription: Updates a user.\nRequest Body:\nExample :{\n  \"name\": \"Johnathan Doe\",\n  \"username\": \"johnathandoe\",\n  \"email\": \"johnathan.doe@example.com\",\n  \"password\": \"NewSecurePassword123!\",\n  \"role\": \"ADMINISTRATOR\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"Johnathan Doe\",\n  \"username\": \"johnathandoe\",\n  \"email\": \"johnathan.doe@example.com\",\n  \"role\": \"ADMINISTRATOR\"\n}6. User Login\nRoute: POST /auth\nDescription: Logs in a user.\nRequest Body:\nExample :{\n  \"email\": \"johnathan.doe@example.com\",\n  \"username\": \"johnathandoe\",\n  \"password\": \"NewSecurePassword123!\"\n}Response:\nExample :{\n  \"user\": {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n    \"name\": \"Johnathan Doe\",\n    \"username\": \"johnathandoe\",\n    \"email\": \"johnathan.doe@example.com\"\n  },\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3OCwidXNlcm5hbWUiOiJqb2huYWRvbm9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}7. Create a New Course\nRoute: POST /courses\nDescription: Creates a new course.\nRequest Body:\nExample :{\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-01T00:00:00Z\"\n}8. Create a New Lesson\nRoute: POST /courses/:courseId/lessons\nDescription: Creates a new lesson for a specific course.\nRequest Body:\nExample :{\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}9. List All Courses\nRoute: GET /courses\nDescription: Lists all courses available.\nQuery Parameters:\n\npage: Page number (optional, default 1)\nsize: Number of items per page (optional, default 10)\n\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n    \"name\": \"Introduction to Programming\",\n    \"description\": \"Learn the basics of programming.\",\n    \"banner\": \"https://example.com/images/programming.jpg\",\n    \"createdAt\": \"2023-04-01T00:00:00Z\",\n    \"updatedAt\": \"2023-04-01T00:00:00Z\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417404\",\n    \"name\": \"Advanced Python Programming\",\n    \"description\": \"Dive deeper into Python programming.\",\n    \"banner\": \"https://example.com/images/advanced-python.jpg\",\n    \"createdAt\": \"2023-04-02T00:00:00Z\",\n    \"updatedAt\": \"2023-04-02T00:00:00Z\"\n  }\n]10. List All Lessons for a Specific Course\nRoute: GET /courses/:courseId/lessons\nDescription: Lists all lessons for a specific course.\nQuery Parameters:\n\npage: Page number (optional, default 1)\nsize: Number of items per page (optional, default 10)\n\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n    \"name\": \"Getting Started with Python\",\n    \"description\": \"Learn how to write your first Python program.\",\n    \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417405\",\n    \"name\": \"Variables and Data Types\",\n    \"description\": \"Understand variables and data types in Python.\",\n    \"content\": \"In this lesson, you will learn about variables and data types in Python.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417403\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417406\",\n    \"name\": \"Control Flow\",\n    \"description\": \"Learn about loops and conditionals in Python.\",\n    \"content\": \"In this lesson, you will learn how to use loops and conditionals in Python.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n  }\n]11. Find a Course by ID\nRoute: GET /courses/:id\nDescription: Finds a course by ID.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-01T00:00:00Z\"\n}12. Find a Lesson by ID for a Specific Course\nRoute: GET /courses/:courseId/lessons/:id\nDescription: Finds a lesson by ID for a specific course.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}13. Update a Course by ID\nRoute: PUT /courses/:id\nDescription: Updates a course by ID.\nRequest Body:\nExample :{\n  \"name\": \"Advanced Introduction to Programming\",\n  \"description\": \"Dive deeper into the basics of programming.\",\n  \"banner\": \"https://example.com/images/advanced-programming.jpg\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Advanced Introduction to Programming\",\n  \"description\": \"Dive deeper into the basics of programming.\",\n  \"banner\": \"https://example.com/images/advanced-programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-02T00:00:00Z\"\n}14. Update a Lesson by ID for a Specific Course\nRoute: PUT /courses/:courseId/lessons/:id\nDescription: Updates a lesson by ID for a specific course.\nRequest Body:\nExample :{\n  \"name\": \"Advanced Python Programming\",\n  \"description\": \"Dive deeper into Python programming.\",\n  \"content\": \"In this lesson, you will learn advanced Python programming concepts.\",\n  \"role\": \"TEXT\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Advanced Python Programming\",\n  \"description\": \"Dive deeper into Python programming.\",\n  \"content\": \"In this lesson, you will learn advanced Python programming concepts.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}15. Delete a Course by ID\nRoute: DELETE /courses/:id\nDescription: Deletes a course by ID.\nResponse:\nExample :{\n  \"message\": \"Course deleted successfully\"\n}16. Delete a Lesson by ID for a Specific Course\nRoute: DELETE /courses/:courseId/lessons/:id\nDescription: Deletes a lesson by ID for a specific course.\nResponse:\nExample :{\n  \"message\": \"Lesson deleted successfully\"\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) [2024] [fullname]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_LessonsModule\n\n\n\ncluster_LessonsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\nCoursesModule -->\n\nDatabaseModule->CoursesModule\n\n\n\n\n\nLessonsModule\n\nLessonsModule\n\nLessonsModule -->\n\nDatabaseModule->LessonsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaCourseRepository \n\nPrismaCourseRepository \n\nPrismaCourseRepository  -->\n\nDatabaseModule->PrismaCourseRepository \n\n\n\n\n\nPrismaLessonRepository \n\nPrismaLessonRepository \n\nPrismaLessonRepository  -->\n\nDatabaseModule->PrismaLessonRepository \n\n\n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\nAppModule -->\n\nLessonsModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCreateCourseUseCase\n\nCreateCourseUseCase\n\nCoursesModule -->\n\nCreateCourseUseCase->CoursesModule\n\n\n\n\n\nDeleteCourseByIdUseCase\n\nDeleteCourseByIdUseCase\n\nCoursesModule -->\n\nDeleteCourseByIdUseCase->CoursesModule\n\n\n\n\n\nFindAllCoursesUseCase\n\nFindAllCoursesUseCase\n\nCoursesModule -->\n\nFindAllCoursesUseCase->CoursesModule\n\n\n\n\n\nFindCourseByIdUseCase\n\nFindCourseByIdUseCase\n\nCoursesModule -->\n\nFindCourseByIdUseCase->CoursesModule\n\n\n\n\n\nUpdateCourseUseCase\n\nUpdateCourseUseCase\n\nCoursesModule -->\n\nUpdateCourseUseCase->CoursesModule\n\n\n\n\n\nPrismaCourseRepository\n\nPrismaCourseRepository\n\nDatabaseModule -->\n\nPrismaCourseRepository->DatabaseModule\n\n\n\n\n\nPrismaLessonRepository\n\nPrismaLessonRepository\n\nDatabaseModule -->\n\nPrismaLessonRepository->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\nCreateLessonUseCase\n\nCreateLessonUseCase\n\nLessonsModule -->\n\nCreateLessonUseCase->LessonsModule\n\n\n\n\n\nDeleteLessonByIdUseCase\n\nDeleteLessonByIdUseCase\n\nLessonsModule -->\n\nDeleteLessonByIdUseCase->LessonsModule\n\n\n\n\n\nFindAllLessonsByCourseUseCase\n\nFindAllLessonsByCourseUseCase\n\nLessonsModule -->\n\nFindAllLessonsByCourseUseCase->LessonsModule\n\n\n\n\n\nFindLessonByIdUseCase\n\nFindLessonByIdUseCase\n\nLessonsModule -->\n\nFindLessonByIdUseCase->LessonsModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFindAllUsersUseCase\n\nFindAllUsersUseCase\n\nUserModule -->\n\nFindAllUsersUseCase->UserModule\n\n\n\n\n\nFindUserByIdUseCase\n\nFindUserByIdUseCase\n\nUserModule -->\n\nFindUserByIdUseCase->UserModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nUserModule -->\n\nUpdateUserUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : The project exists to provide a platform where users can create, manage, and enroll in online courses. It aims to streamline the process of course creation, lesson management, user authentication, and user access control.\n        \n            License : MIT\n        \n            Author : Walter Netto\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Replace   (src/.../replace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/replace.ts\n    \n    \n        \n            \n                \n                    \n                    Replace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelCourse.html":{"url":"classes/viewModelCourse.html","title":"class - viewModelCourse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelCourse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/viewModelCourse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/viewModelCourse.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: Course; name: Course; description: Course; banner: Course; updatedAt: Course; lessons: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { viewModelLesson } from 'src/lessons/viewModelLesson';\nimport { Course } from './entities/course.entity';\n\nexport class viewModelCourse {\n  static toHttp({ id, name, description, banner, updatedAt, lessons }: Course) {\n    return {\n      id,\n      name,\n      description,\n      banner,\n      updatedAt,\n      lessons: lessons?.map((lesson) => viewModelLesson.toHttp(lesson)),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelLesson.html":{"url":"classes/viewModelLesson.html","title":"class - viewModelLesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelLesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/viewModelLesson.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/viewModelLesson.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: Lesson; name: Lesson; description: Lesson; content: Lesson; role: Lesson; courseId: Lesson; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from './entities/lesson.entity';\n\nexport class viewModelLesson {\n  static toHttp({ id, name, description, content, role, courseId }: Lesson) {\n    return {\n      id,\n      name,\n      description,\n      content,\n      role,\n      courseId,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
