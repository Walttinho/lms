var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.769,1,2.885]],["body/modules/AppModule.html",[0,2.646,1,5.7,2,1.964,3,1.87,4,2.186,5,2.186,6,1.964,7,3.065,8,3.065,9,3.217,10,3.217,11,4.744,12,0.014,13,4.744,14,3.761,15,4.744,16,4.744,17,3.065,18,2.186,19,2.069,20,0.124,21,0.124,22,0.11,23,3.697,24,3.473,25,0.453,26,3.697,27,5.182,28,6.486,29,0.274,30,3.697,31,0.396,32,0.226,33,0.196,34,0.274,35,5.182,36,0.396,37,2.477,38,0.276,39,5.182,40,3.697,41,0.494,42,3.697,43,3.697,44,3.697,45,2.666,46,3.697,47,4.51,48,2.477,49,3.697,50,3.697,51,3.217,52,3.217,53,3.217,54,3.217,55,3.217,56,3.217,57,1.155,58,0.124,59,0.123,60,2.32,61,3.697,62,3.697,63,5.984,64,2.32,65,5.984,66,5.182,67,1.114,68,2.666,69,3.697,70,3.697,71,0.009,72,0.009]],["title/classes/Auth.html",[59,0.133,64,2.511]],["body/classes/Auth.html",[12,0.013,20,0.208,21,0.208,22,0.185,58,0.208,59,0.207,64,4.547,71,0.012,72,0.012,73,2.016,74,5.416]],["title/controllers/AuthController.html",[75,0.845,76,2.885]],["body/controllers/AuthController.html",[12,0.014,20,0.147,21,0.147,22,0.131,25,0.716,29,0.326,31,0.471,32,0.269,33,0.309,34,0.326,36,0.471,38,0.26,41,0.588,57,1.375,58,0.147,59,0.146,64,2.762,67,2.102,71,0.01,72,0.01,75,0.93,76,4.209,77,3.83,78,1.721,79,0.215,80,5.14,81,3.83,82,5.1,83,1.326,84,3.173,85,4.401,86,4.401,87,2.953,88,1.583,89,2.58,90,5.837,91,4.401,92,3.101,93,3.101,94,4.401,95,3.911,96,2.462,97,4.111,98,3.83,99,3.83,100,3.83,101,1.721,102,2.58,103,3.911,104,2.895,105,1.326,106,4.401,107,4.401,108,1.479,109,4.401,110,1.945,111,2.58,112,4.401,113,0.664,114,4.401]],["title/injectables/AuthMiddleware.html",[45,2.885,115,0.557]],["body/injectables/AuthMiddleware.html",[12,0.014,20,0.144,21,0.144,22,0.128,25,0.705,29,0.426,31,0.616,32,0.352,33,0.304,34,0.426,36,0.461,37,4.338,38,0.214,41,0.574,45,4.144,48,2.881,58,0.144,59,0.143,60,2.699,71,0.01,72,0.01,79,0.21,108,1.445,115,0.8,116,1.343,117,3.742,118,3.608,119,1.25,120,3.742,121,6.449,122,4.3,123,5.747,124,6.474,125,6.911,126,4.3,127,2.175,128,3.742,129,5.747,130,2.285,131,1.273,132,4.3,133,4.3,134,5.081,135,4.3,136,2.162,137,1.304,138,4.3,139,3.742,140,4.3,141,3.742,142,4.3,143,3.1,144,0.757,145,4.3,146,1.124,147,4.3,148,4.3,149,3.375,150,4.3]],["title/modules/AuthModule.html",[0,1.769,11,2.681]],["body/modules/AuthModule.html",[0,2.991,2,2.499,3,2.38,4,2.781,5,2.781,6,2.499,7,4.001,8,2.781,11,5.253,12,0.014,14,4.037,17,3.606,18,2.781,19,2.632,20,0.157,21,0.157,22,0.14,24,4.086,38,0.276,41,0.628,47,4.094,48,3.152,51,4.094,52,4.094,53,4.094,54,4.094,55,4.094,56,4.094,57,1.905,58,0.157,59,0.156,71,0.01,72,0.01,76,4.878,97,4.769,98,4.094,151,4.094,152,4.094,153,4.704,154,4.704,155,4.704,156,3.392]],["title/injectables/AuthService.html",[97,2.511,115,0.557]],["body/injectables/AuthService.html",[12,0.014,20,0.123,21,0.123,22,0.109,25,0.633,29,0.383,31,0.553,32,0.365,33,0.274,34,0.383,36,0.394,38,0.263,41,0.491,48,2.465,58,0.123,59,0.122,67,1.95,71,0.009,72,0.009,79,0.18,80,4.054,81,4.495,82,4.736,97,3.242,99,3.202,100,3.202,113,0.555,115,0.719,116,1.149,119,1.502,120,3.202,121,6.151,130,1.955,131,1.34,134,4.054,136,2.245,137,1.355,141,3.202,144,0.647,146,0.962,157,3.202,158,1.131,159,3.505,160,3.679,161,3.679,162,1.497,163,2.309,164,1.384,165,2.887,166,3.461,167,1.698,168,2.175,169,1.556,170,2.175,171,2.744,172,3.147,173,3.019,174,3.679,175,2.309,176,1.131,177,2.887,178,2.887,179,5.165,180,4.054,181,5.165,182,3.679,183,2.887,184,3.679,185,4.495,186,3.202,187,3.679,188,2.887,189,3.202,190,2.887]],["title/classes/Course.html",[59,0.133,191,1.163]],["body/classes/Course.html",[12,0.014,20,0.101,21,0.101,22,0.089,29,0.566,31,0.674,32,0.453,33,0.362,34,0.467,36,0.631,37,3.95,38,0.198,58,0.101,59,0.1,71,0.007,72,0.007,73,0.975,79,0.147,88,1.497,113,1.031,119,0.875,137,1.014,144,1.202,169,1.988,191,1.299,192,2.361,193,1.747,194,3.343,195,3.952,196,3.505,197,3.692,198,3.186,199,3.04,200,3.046,201,2.803,202,3.485,203,1.177,204,4.466,205,2.361,206,3.841,207,3.008,208,2.361,209,3.008,210,2.361,211,3.008,212,2.361,213,3.008,214,2.618,215,3.008,216,2.618,217,3.008,218,3.008,219,3.008,220,3.008,221,3.008,222,2.361,223,3.008,224,2.618,225,3.008,226,3.008,227,3.008,228,3.008,229,2.116,230,3.008,231,2.803,232,1.888,233,2.169,234,1.888,235,1.33,236,3.132,237,1.888,238,2.803,239,2.803,240,3.22,241,3.887,242,1.888,243,2.169,244,3.485,245,1.888,246,2.169,247,2.618,248,3.887,249,2.618]],["title/classes/CourseRepository.html",[59,0.133,250,1.696]],["body/classes/CourseRepository.html",[12,0.013,20,0.137,21,0.137,22,0.121,25,0.682,29,0.525,31,0.758,32,0.434,33,0.375,34,0.525,36,0.758,38,0.152,58,0.137,59,0.136,71,0.009,72,0.009,73,1.325,79,0.2,144,0.978,191,2.241,203,1.102,250,2.356,251,3.559,252,6.356,253,2.356,254,2.456,255,3.286,256,2.952,257,2.565,258,4.361,259,4.089,260,2.717,261,3.487,262,4.089,263,4.836,264,3.88,265,4.55,266,4.089,267,2.567,268,3.109,269,4.089,270,4.836,271,4.089,272,2.418]],["title/interfaces/CourseSchema.html",[206,2.885,235,1.769]],["body/interfaces/CourseSchema.html",[12,0.014,20,0.12,21,0.12,22,0.107,32,0.43,33,0.372,34,0.475,38,0.22,58,0.12,59,0.119,71,0.008,72,0.008,79,0.176,88,1.593,113,1.089,137,1.154,144,1.038,169,1.533,191,1.047,192,2.825,193,1.989,194,2.259,195,3.192,197,3.927,198,3.551,199,3.389,200,3.24,201,2.259,202,3.008,203,1.188,206,4.253,229,2.272,231,3.192,232,2.259,233,2.595,234,2.259,235,1.591,236,3.915,237,2.259,238,3.192,239,3.192,240,3.667,241,4.426,242,2.259,243,2.595,244,3.79,245,2.259,246,2.595,247,3.133,248,4.426,249,3.133,273,2.412]],["title/modules/CoursesModule.html",[0,1.769,13,2.681]],["body/modules/CoursesModule.html",[0,2.714,2,2.061,3,1.962,4,2.293,5,2.293,6,2.061,7,3.63,8,2.293,12,0.014,13,5.39,14,3.818,17,3.168,18,2.293,19,2.17,20,0.13,21,0.13,22,0.115,24,3.59,38,0.292,41,0.518,57,1.674,58,0.13,59,0.129,71,0.009,72,0.009,156,2.796,274,3.375,275,3.878,276,3.375,277,4.511,278,4.511,279,4.511,280,4.511,281,4.511,282,3.878,283,4.426,284,4.426,285,4.426,286,4.426,287,4.426,288,3.044,289,2.434,290,3.375,291,2.796,292,3.878,293,2.434,294,3.044,295,2.434,296,2.599,297,3.375]],["title/classes/CreateCourseDto.html",[59,0.133,298,2.885]],["body/classes/CreateCourseDto.html",[12,0.014,20,0.155,21,0.155,22,0.138,29,0.498,32,0.452,33,0.356,38,0.225,58,0.155,59,0.2,71,0.01,72,0.01,73,1.5,79,0.227,83,2.024,88,1.773,105,1.396,191,2.2,193,2.361,197,4.129,203,1.142,298,4.352,299,6.192,300,3.635,301,6.715,302,4.631,303,4.631,304,4.631,305,4.466,306,5.584,307,4.466,308,2.739]],["title/injectables/CreateCourseUseCase.html",[115,0.557,277,2.511]],["body/injectables/CreateCourseUseCase.html",[12,0.014,20,0.146,21,0.146,22,0.13,25,0.712,29,0.43,31,0.622,32,0.443,33,0.231,34,0.43,36,0.467,38,0.259,41,0.583,58,0.146,59,0.145,71,0.01,72,0.01,79,0.214,88,1.48,113,0.658,115,0.808,116,1.363,119,1.687,131,0.858,136,2.453,137,1.577,158,1.236,163,2.738,164,1.641,169,1.315,175,4.093,176,0.827,191,2.021,197,3.649,250,3.155,260,2.024,272,2.58,277,3.642,309,3.796,310,2.551,311,2.923,312,4.362,313,3.796,314,4.362,315,1.776,316,2.207,317,2.923,318,2.207,319,4.362,320,4.362,321,4.362,322,4.362]],["title/controllers/CreateCoursesController.html",[75,0.845,283,2.885]],["body/controllers/CreateCoursesController.html",[12,0.014,20,0.145,21,0.145,22,0.129,25,0.71,29,0.323,31,0.466,32,0.266,33,0.307,34,0.323,36,0.466,38,0.269,41,0.581,57,1.359,58,0.145,59,0.144,71,0.01,72,0.01,75,0.919,78,1.701,79,0.213,83,1.311,84,3.136,88,1.314,89,2.561,95,3.881,96,2.434,101,1.701,102,2.561,103,3.881,104,2.561,105,1.311,108,1.462,110,1.923,111,1.923,113,0.656,131,0.855,137,1.314,158,1.234,162,1.77,176,0.824,191,2.292,253,2.943,258,3.414,272,2.572,277,3.635,283,4.176,289,2.73,323,3.785,324,2.311,325,4.35,326,4.35,327,4.546,328,4.546,329,4.35,330,3.425,331,2.915,332,2.915,333,1.77,334,3.785,335,2.73,336,4.35,337,3.785]],["title/classes/CreateLessonDto.html",[59,0.133,338,2.885]],["body/classes/CreateLessonDto.html",[12,0.014,20,0.143,21,0.143,22,0.127,29,0.511,32,0.44,33,0.365,38,0.24,58,0.143,59,0.19,71,0.009,72,0.009,73,1.385,79,0.209,83,2.078,88,1.765,105,1.288,146,1.879,193,2.239,203,1.116,229,2.317,305,4.512,306,5.642,307,4.512,308,2.528,338,4.128,339,6.256,340,3.356,341,3.637,342,5.411,343,6.895,344,4.275,345,4.275,346,4.275,347,4.655,348,4.275,349,1.813]],["title/injectables/CreateLessonUseCase.html",[115,0.557,350,2.511]],["body/injectables/CreateLessonUseCase.html",[12,0.014,20,0.113,21,0.113,22,0.144,25,0.596,29,0.36,31,0.52,32,0.421,33,0.257,34,0.36,36,0.361,38,0.256,41,0.451,58,0.113,59,0.112,71,0.008,72,0.008,79,0.165,88,1.412,113,0.509,115,0.676,116,1.054,119,1.412,130,2.58,131,1.297,136,2.584,137,1.606,146,1.27,158,1.078,163,3.571,164,1.269,169,1.463,175,2.117,176,0.92,191,1.412,200,1.557,203,0.859,229,2.091,250,3.001,253,1.43,260,1.693,310,2.225,315,1.373,316,1.707,318,1.707,341,3.337,350,3.048,351,2.936,352,2.26,353,3.649,354,3.373,355,3.373,356,3.373,357,3.373,358,2.344,359,1.792,360,2.432,361,1.707,362,2.26,363,1.995,364,2.117,365,2.26,366,1.827,367,2.647,368,2.647,369,2.26,370,2.26,371,1.888,372,1.629,373,2.936,374,2.936,375,2.936,376,2.936,377,2.936,378,2.936,379,2.936,380,2.936,381,2.936,382,4.226,383,2.936,384,2.936,385,2.936,386,2.936,387,2.936,388,2.936,389,2.936,390,2.936,391,4.226,392,2.432,393,2.936,394,2.936,395,2.936,396,3.373]],["title/controllers/CreateLessonsController.html",[75,0.845,397,2.885]],["body/controllers/CreateLessonsController.html",[12,0.014,20,0.119,21,0.119,22,0.106,25,0.619,29,0.264,31,0.381,32,0.39,33,0.267,34,0.264,36,0.381,38,0.251,41,0.475,57,1.111,58,0.119,59,0.118,71,0.008,72,0.008,75,0.752,78,1.391,79,0.174,83,1.072,84,2.565,88,1.528,89,2.23,95,3.38,96,2.822,101,1.391,102,2.23,103,3.38,104,2.23,105,1.072,108,1.195,110,1.572,111,1.572,113,0.537,127,3.225,131,1.152,137,1.145,143,2.565,144,0.626,146,1.667,158,1.111,162,1.448,176,0.674,203,0.884,229,2.6,253,2.854,289,2.233,327,3.958,328,3.958,333,1.448,335,2.233,341,2.964,350,3.166,363,2.103,366,2.398,392,2.565,397,3.636,398,3.096,399,2.233,400,3.557,401,2.964,402,3.096,403,3.557,404,3.557,405,1.89,406,2.982,407,2.383,408,2.383,409,2.383,410,3.557,411,3.557,412,3.557,413,3.557,414,3.557,415,2.233,416,3.557,417,5.86,418,5.86,419,5.86,420,3.166,421,3.557,422,3.557,423,3.557,424,3.557,425,3.557,426,3.557,427,3.557,428,2.233,429,3.557,430,3.557]],["title/controllers/CreateUserController.html",[75,0.845,431,2.885]],["body/controllers/CreateUserController.html",[12,0.014,20,0.145,21,0.145,22,0.129,25,0.709,29,0.322,31,0.465,32,0.266,33,0.306,34,0.322,36,0.465,38,0.269,41,0.579,57,1.355,58,0.145,59,0.144,67,2.177,71,0.01,72,0.01,75,0.917,78,1.696,79,0.212,83,1.307,84,3.127,88,1.312,89,2.556,95,3.874,96,2.427,101,1.696,102,2.556,103,3.874,104,2.556,105,1.307,108,1.457,110,1.917,111,1.917,113,0.654,131,0.853,137,1.312,158,1.232,162,1.765,176,0.822,253,2.94,289,2.722,327,4.537,328,4.537,333,1.765,334,3.775,431,4.168,432,3.775,433,4.337,434,5.082,435,4.337,436,4.337,437,4.337,438,4.337,439,3.127,440,3.418,441,3.418,442,2.906,443,2.906,444,4.337,445,3.775]],["title/classes/CreateUserDto.html",[59,0.133,434,2.681]],["body/classes/CreateUserDto.html",[12,0.014,20,0.134,21,0.134,22,0.119,29,0.521,32,0.43,33,0.372,38,0.232,58,0.134,59,0.182,67,2.118,71,0.009,72,0.009,73,1.296,79,0.196,83,2.118,88,1.595,105,1.206,146,1.837,171,2.979,172,3.244,173,3.555,193,2.142,203,1.141,305,4.554,306,5.695,307,4.554,308,2.367,342,5.515,349,1.697,358,3.013,434,3.669,446,6.315,447,3.141,448,4.002,449,4.002,450,6.71,451,4.002,452,4.002,453,4.002,454,4.002,455,5.475]],["title/interfaces/CreateUserRequest.html",[235,1.769,456,2.885]],["body/interfaces/CreateUserRequest.html",[12,0.014,20,0.124,21,0.124,22,0.11,32,0.433,33,0.362,38,0.264,41,0.494,58,0.124,59,0.123,67,2.058,71,0.009,72,0.009,79,0.181,113,0.558,115,0.722,118,2.32,119,1.075,131,1.019,136,1.95,137,1.358,146,1.939,158,0.701,159,2.889,163,3.253,164,1.391,165,2.902,166,2.477,167,1.707,168,2.186,169,1.114,170,2.186,171,3.082,172,3.356,173,3.581,176,1.229,177,2.902,178,2.902,180,2.902,193,2.027,203,1.2,235,1.634,273,2.477,310,1.446,349,1.567,358,2.502,415,2.32,440,2.186,456,4.315,457,2.902,458,4.068,459,3.217,460,3.217,461,4.068,462,3.737,463,3.217,464,3.217,465,3.737,466,2.902,467,3.217,468,3.217,469,2.902,470,2.477,471,3.217,472,2.32,473,3.217,474,3.217]],["title/injectables/CreateUserUseCase.html",[115,0.557,440,2.366]],["body/injectables/CreateUserUseCase.html",[12,0.014,20,0.125,21,0.125,22,0.111,25,0.642,29,0.388,31,0.561,32,0.42,33,0.277,34,0.388,36,0.402,38,0.265,41,0.501,58,0.125,59,0.125,67,2.069,71,0.009,72,0.009,79,0.184,113,0.566,115,0.729,116,1.172,118,2.355,119,1.523,131,1.03,136,1.97,137,1.369,146,1.795,158,1.143,159,3.434,162,1.527,163,3.287,164,1.412,165,2.945,166,2.514,167,1.732,168,2.219,169,1.131,170,2.219,171,2.768,172,3.014,173,3.052,176,1.237,177,2.945,178,2.945,180,2.945,203,1.036,235,1.659,310,2.359,313,3.266,349,1.591,358,2.528,415,2.355,440,3.097,456,4.707,457,2.945,458,4.11,459,3.266,460,3.266,461,4.11,462,3.776,463,3.266,464,3.266,465,3.776,466,2.945,467,3.266,468,3.266,469,2.945,470,2.514,471,3.266,472,2.355,473,3.266,474,3.266,475,2.514,476,3.752,477,3.752]],["title/modules/DatabaseModule.html",[0,1.769,14,2.126]],["body/modules/DatabaseModule.html",[0,2.866,2,2.291,3,2.182,4,2.55,5,2.55,6,2.291,7,3.834,8,3.834,12,0.014,14,4.313,17,3.405,18,2.55,19,2.413,20,0.144,21,0.144,22,0.128,38,0.268,41,0.576,58,0.144,59,0.143,71,0.01,72,0.01,167,3.689,315,3.253,361,4.043,478,3.753,479,3.753,480,3.753,481,4.15,482,4.312,483,4.312,484,4.312,485,4.312,486,4.312]],["title/controllers/DeleteCourseByIdController.html",[75,0.845,286,2.885]],["body/controllers/DeleteCourseByIdController.html",[12,0.014,20,0.161,21,0.161,22,0.143,25,0.759,29,0.357,31,0.515,32,0.294,33,0.255,34,0.357,36,0.515,38,0.255,41,0.642,57,1.502,58,0.161,59,0.16,71,0.01,72,0.01,75,1.016,78,1.881,79,0.235,83,1.449,101,1.881,105,1.449,108,1.616,127,3.459,131,0.945,144,1.203,146,1.617,158,1.296,176,0.912,203,1.032,254,3.023,278,3.882,286,4.46,295,3.019,324,2.555,331,3.223,332,3.223,333,1.957,401,3.459,405,2.555,428,3.019,487,4.185,488,3.774,489,4.854,490,4.809,491,4.185,492,3.223,493,2.844]],["title/injectables/DeleteCourseByIdUseCase.html",[115,0.557,278,2.511]],["body/injectables/DeleteCourseByIdUseCase.html",[12,0.014,20,0.149,21,0.149,22,0.133,25,0.723,29,0.437,31,0.631,32,0.361,33,0.312,34,0.437,36,0.478,38,0.246,41,0.597,58,0.149,59,0.148,71,0.01,72,0.01,79,0.219,115,0.821,116,1.395,119,1.714,130,2.373,131,0.878,136,2.217,137,1.338,144,0.786,146,1.834,158,1.25,164,1.68,169,1.346,176,1.117,203,1.13,250,3.176,254,1.974,260,2.055,278,3.7,310,2.305,311,2.993,315,1.818,316,2.259,317,2.993,318,2.259,324,2.373,359,2.373,371,2.499,372,2.156,470,2.993,494,3.887,495,4.466,496,3.298,497,4.466,498,3.505,499,3.22,500,5.894,501,3.505,502,4.466]],["title/controllers/DeleteLessonByIdController.html",[75,0.845,503,2.885]],["body/controllers/DeleteLessonByIdController.html",[12,0.014,20,0.156,21,0.156,22,0.138,25,0.743,29,0.346,31,0.499,32,0.285,33,0.247,34,0.346,36,0.499,38,0.251,41,0.622,57,1.456,58,0.156,59,0.155,71,0.01,72,0.01,75,0.985,78,1.823,79,0.228,83,1.404,101,1.823,105,1.404,108,1.566,127,3.608,131,0.916,144,1.185,158,1.277,176,0.883,203,1.144,254,3.153,295,2.925,333,1.897,358,2.926,366,2.683,399,2.925,401,3.407,405,2.476,407,3.123,408,3.123,409,3.123,428,2.925,488,3.657,489,4.757,492,3.123,493,2.756,503,4.37,504,4.056,505,4.66,506,3.804]],["title/injectables/DeleteLessonByIdUseCase.html",[115,0.557,506,2.511]],["body/injectables/DeleteLessonByIdUseCase.html",[12,0.014,20,0.141,21,0.141,22,0.126,25,0.697,29,0.421,31,0.609,32,0.348,33,0.301,34,0.421,36,0.453,38,0.255,41,0.565,58,0.141,59,0.14,71,0.009,72,0.009,79,0.207,115,0.791,116,1.321,119,1.652,130,3.019,131,0.831,136,2.138,137,1.29,144,0.744,158,1.217,164,1.59,169,1.712,176,1.077,191,1.652,200,1.951,203,1.171,250,3.194,254,1.869,260,1.982,310,2.223,315,1.721,316,2.139,318,2.139,352,2.833,353,3.019,358,3.099,359,2.246,361,3.472,362,2.833,364,2.653,365,2.833,366,2.415,367,3.318,368,3.318,369,2.833,370,2.833,371,2.365,372,2.041,496,3.18,506,3.567,507,3.679,508,4.227,509,4.227,510,4.227]],["title/controllers/DeleteUserController.html",[75,0.845,511,2.885]],["body/controllers/DeleteUserController.html",[12,0.014,20,0.161,21,0.161,22,0.143,25,0.759,29,0.357,31,0.515,32,0.294,33,0.255,34,0.357,36,0.515,38,0.255,41,0.642,57,1.502,58,0.161,59,0.16,67,1.449,71,0.01,72,0.01,75,1.016,78,1.881,79,0.235,83,1.449,101,1.881,105,1.449,108,1.616,127,3.459,131,0.945,144,1.203,146,1.617,158,1.296,176,0.912,203,1.032,254,3.023,295,3.019,333,1.957,401,3.459,405,2.555,428,3.019,442,3.223,443,3.223,488,3.774,489,4.854,491,4.185,492,3.223,493,2.844,511,4.46,512,4.185,513,4.809,514,3.882]],["title/injectables/DeleteUserUseCase.html",[115,0.557,514,2.511]],["body/injectables/DeleteUserUseCase.html",[12,0.014,20,0.154,21,0.154,22,0.137,25,0.739,29,0.447,31,0.645,32,0.369,33,0.319,34,0.447,36,0.495,38,0.25,41,0.617,58,0.154,59,0.153,71,0.01,72,0.01,79,0.226,115,0.839,116,1.442,119,1.752,130,2.453,136,1.737,137,1.048,144,0.813,146,1.858,158,1.271,159,3.65,164,1.737,167,2.131,168,2.73,169,1.391,170,2.73,176,0.875,203,1.141,254,2.041,260,2.101,310,2.356,415,2.898,475,3.094,496,3.371,498,3.624,499,3.329,514,3.781,515,4.018,516,4.617,517,4.617,518,3.329,519,3.094,520,4.617]],["title/controllers/FindAllCoursesController.html",[75,0.845,284,2.885]],["body/controllers/FindAllCoursesController.html",[12,0.014,20,0.125,21,0.125,22,0.111,25,0.64,29,0.277,31,0.4,32,0.368,33,0.363,34,0.277,36,0.4,38,0.242,41,0.499,57,1.166,58,0.125,59,0.124,71,0.009,72,0.009,75,0.789,78,1.46,79,0.183,83,1.125,87,2.64,88,1.688,89,2.307,92,2.773,93,1.984,101,1.46,102,2.307,104,2.66,105,1.125,108,1.255,110,1.651,111,2.307,113,0.563,131,0.734,158,1.14,162,1.52,175,4.089,176,0.708,255,3.558,264,4.179,279,3.276,284,3.763,291,2.692,324,3.642,330,3.086,331,2.502,332,2.502,333,1.52,420,3.276,465,2.692,472,3.276,521,3.249,522,3.249,523,4.759,524,2.93,525,3.086,526,3.734,527,4.096,528,2.502,529,3.734,530,4.983,531,5.112,532,3.734,533,4.096,534,4.096,535,3.734,536,2.93,537,2.93,538,5.236,539,2.502,540,3.249,541,3.249,542,3.734,543,3.734]],["title/injectables/FindAllCoursesUseCase.html",[115,0.557,279,2.511]],["body/injectables/FindAllCoursesUseCase.html",[12,0.014,20,0.146,21,0.146,22,0.13,25,0.713,29,0.431,31,0.623,32,0.356,33,0.308,34,0.431,36,0.469,38,0.259,41,0.584,58,0.146,59,0.145,71,0.01,72,0.01,79,0.214,113,0.66,115,0.809,116,1.367,119,1.691,131,1.143,136,1.646,137,0.993,158,1.238,164,1.646,169,1.318,176,0.829,191,1.272,250,3.157,260,2.028,264,3.957,267,2.746,272,2.587,279,3.649,310,2.274,311,2.932,315,1.781,316,2.213,317,2.932,318,2.213,324,3.47,359,2.325,372,2.112,420,2.746,523,4.854,530,3.896,544,3.808,545,4.375,546,5.814,547,4.375,548,4.375,549,4.375,550,3.434,551,4.375]],["title/controllers/FindAllLessonsByCourseController.html",[75,0.845,552,2.885]],["body/controllers/FindAllLessonsByCourseController.html",[12,0.014,20,0.117,21,0.117,22,0.104,25,0.611,29,0.259,31,0.375,32,0.356,33,0.379,34,0.259,36,0.375,38,0.236,41,0.467,57,1.093,58,0.117,59,0.116,71,0.008,72,0.008,75,0.739,78,1.369,79,0.171,83,1.054,87,2.522,88,1.713,92,2.649,93,1.859,101,1.369,102,2.204,104,2.957,105,1.054,108,1.176,110,1.547,111,2.798,113,0.528,131,0.688,149,2.746,158,1.101,162,1.424,175,3.972,176,0.663,191,1.449,200,1.615,203,0.876,255,3.434,264,4.164,333,1.424,335,2.196,366,2.185,372,1.689,399,2.196,405,1.859,406,3.434,407,2.345,408,2.345,409,2.345,420,3.129,465,2.523,472,3.129,522,3.045,523,4.659,524,2.746,525,2.948,530,4.901,531,4.967,533,3.912,534,3.912,536,2.746,537,2.746,538,5.054,540,3.045,541,3.045,552,3.594,553,3.045,554,3.499,555,3.499,556,3.045,557,4.338,558,3.045,559,4.338,560,4.338,561,4.338,562,3.499,563,3.499,564,3.499,565,3.129,566,3.045,567,3.499,568,3.499]],["title/injectables/FindAllLessonsByCourseUseCase.html",[115,0.557,565,2.511]],["body/injectables/FindAllLessonsByCourseUseCase.html",[12,0.014,20,0.131,21,0.131,22,0.117,25,0.663,29,0.401,31,0.579,32,0.331,33,0.286,34,0.401,36,0.421,38,0.269,41,0.525,58,0.131,59,0.13,71,0.009,72,0.009,79,0.192,113,0.593,115,0.753,116,1.227,119,1.572,131,1.215,136,2.034,137,1.227,158,1.172,164,1.478,169,1.629,176,1.025,191,1.572,200,2.853,203,0.933,229,1.32,250,3.134,260,1.885,264,3.833,267,3.393,310,2.418,315,1.599,316,1.988,318,1.988,352,2.633,353,3.833,359,2.087,360,2.833,361,1.988,362,2.633,363,2.323,364,2.466,365,2.633,366,2.325,370,2.633,371,2.198,372,2.61,420,2.466,523,4.678,530,4.462,550,3.084,565,3.393,569,3.419,570,3.929,571,3.419,572,3.929,573,3.929,574,3.929,575,3.929]],["title/controllers/FindAllUserController.html",[75,0.845,576,2.885]],["body/controllers/FindAllUserController.html",[12,0.014,20,0.145,21,0.145,22,0.129,25,0.709,29,0.322,31,0.465,32,0.266,33,0.23,34,0.322,36,0.465,38,0.258,41,0.579,57,1.355,58,0.145,59,0.144,67,1.307,71,0.01,72,0.01,75,0.917,78,1.696,79,0.212,83,1.307,87,2.924,88,1.574,89,2.556,92,3.071,93,3.071,101,1.696,102,2.556,104,2.874,105,1.307,108,1.457,110,1.917,111,2.556,113,0.654,127,3.289,131,1.136,146,1.134,158,1.232,162,1.765,176,0.822,255,3.418,291,3.127,333,1.765,401,3.289,428,2.722,441,3.418,442,2.906,443,2.906,519,4.647,525,3.418,527,4.537,528,2.906,539,2.906,576,4.168,577,3.775,578,4.337,579,4.337,580,4.337,581,4.337,582,3.628,583,4.337,584,4.337,585,4.337,586,4.337]],["title/injectables/FindAllUsersUseCase.html",[115,0.557,582,2.511]],["body/injectables/FindAllUsersUseCase.html",[12,0.014,20,0.155,21,0.155,22,0.138,25,0.742,29,0.448,31,0.648,32,0.37,33,0.32,34,0.448,36,0.498,38,0.25,41,0.621,58,0.155,59,0.154,71,0.01,72,0.01,79,0.227,113,0.701,115,0.842,116,1.451,119,1.759,130,2.468,131,0.913,136,1.748,137,1.054,146,1.581,158,1.275,159,3.656,162,1.891,164,1.748,167,2.145,168,2.747,169,1.4,170,2.747,176,0.881,203,1.015,310,2.366,415,2.916,475,3.113,498,3.646,499,3.35,518,3.35,519,4.506,582,3.796,587,4.043,588,4.646,589,6.048,590,4.646,591,4.646,592,4.646]],["title/controllers/FindCourseByIdController.html",[75,0.845,285,2.885]],["body/controllers/FindCourseByIdController.html",[12,0.014,20,0.147,21,0.147,22,0.13,25,0.715,29,0.325,31,0.47,32,0.269,33,0.232,34,0.325,36,0.47,38,0.259,41,0.586,57,1.371,58,0.147,59,0.146,71,0.01,72,0.01,75,0.927,78,1.716,79,0.215,83,1.322,87,2.947,88,1.581,89,2.575,92,3.095,93,3.095,101,1.716,102,2.575,104,2.891,105,1.322,108,1.474,110,1.94,111,2.575,113,0.662,131,0.863,144,1.151,158,1.24,162,1.786,176,0.832,191,2.108,203,0.987,256,3.095,268,2.455,280,3.656,285,4.2,293,2.754,324,2.331,330,3.445,331,2.94,332,2.94,333,1.786,405,2.331,493,2.595,525,3.445,528,2.94,539,2.94,593,3.819,594,3.819,595,3.444,596,4.388,597,3.819,598,3.819,599,4.388]],["title/injectables/FindCourseByIdUseCase.html",[115,0.557,280,2.511]],["body/injectables/FindCourseByIdUseCase.html",[12,0.014,20,0.155,21,0.155,22,0.138,25,0.742,29,0.448,31,0.648,32,0.37,33,0.32,34,0.448,36,0.498,38,0.265,41,0.621,58,0.155,59,0.154,71,0.01,72,0.01,79,0.227,113,0.701,115,0.842,116,1.451,119,1.759,131,0.913,136,1.748,137,1.054,144,0.818,158,1.275,164,1.748,169,1.4,176,0.881,191,2.071,203,1.015,250,3.21,260,2.109,272,2.747,280,3.796,310,2.366,311,3.113,315,1.891,316,2.35,317,3.113,318,2.35,359,2.468,371,2.599,372,2.243,496,3.384,501,3.646,600,4.043,601,4.646,602,4.646]],["title/controllers/FindLessonByIdController.html",[75,0.845,603,2.885]],["body/controllers/FindLessonByIdController.html",[12,0.014,20,0.134,21,0.134,22,0.119,25,0.673,29,0.298,31,0.43,32,0.246,33,0.213,34,0.298,36,0.43,38,0.25,41,0.536,57,1.254,58,0.134,59,0.133,71,0.009,72,0.009,75,0.848,78,1.57,79,0.196,83,1.209,87,2.775,88,1.718,89,2.425,92,2.914,93,2.132,101,1.57,102,2.425,104,3.11,105,1.209,108,1.348,110,1.774,111,2.97,113,0.606,131,0.789,144,1.1,149,4.305,158,1.185,162,1.633,176,0.761,203,1.096,229,2.498,256,2.914,268,2.245,293,2.519,333,1.633,366,2.527,372,1.937,399,2.519,405,2.132,406,3.244,407,2.689,408,2.689,409,2.689,493,2.373,525,3.244,528,2.689,539,2.689,556,3.492,557,4.774,558,3.492,559,4.774,560,4.774,561,4.774,594,3.492,595,3.149,597,3.492,598,3.492,603,3.955,604,3.492,605,4.013,606,3.443,607,3.492]],["title/injectables/FindLessonByIdUseCase.html",[115,0.557,606,2.511]],["body/injectables/FindLessonByIdUseCase.html",[12,0.014,20,0.141,21,0.141,22,0.125,25,0.694,29,0.42,31,0.606,32,0.347,33,0.3,34,0.42,36,0.45,38,0.274,41,0.562,58,0.141,59,0.14,71,0.009,72,0.009,79,0.206,113,0.634,115,0.788,116,1.313,119,1.646,131,1.113,136,2.13,137,1.285,144,0.74,158,1.213,164,1.581,169,1.706,176,1.073,191,1.646,203,1.111,229,2.301,250,3.19,260,1.974,310,2.214,315,1.711,316,2.127,318,2.127,352,2.817,353,3.912,359,2.233,360,3.031,361,2.127,362,2.817,363,2.486,364,2.639,365,2.817,366,2.408,370,2.817,371,2.352,372,2.733,496,3.168,606,3.553,608,3.658,609,4.204,610,4.204,611,4.204,612,3.658]],["title/controllers/FindUserByIdController.html",[75,0.845,613,2.885]],["body/controllers/FindUserByIdController.html",[12,0.014,20,0.143,21,0.143,22,0.127,25,0.704,29,0.318,31,0.459,32,0.263,33,0.227,34,0.318,36,0.459,38,0.268,41,0.573,57,1.339,58,0.143,59,0.142,67,2.231,71,0.009,72,0.009,75,0.906,78,1.677,79,0.21,83,1.292,87,2.902,88,1.567,89,2.536,92,3.048,93,3.048,101,1.677,102,2.536,104,2.858,105,1.292,108,1.441,110,1.896,111,2.536,113,0.647,127,3.271,131,1.128,144,0.755,158,1.225,162,1.745,176,0.813,256,3.048,293,2.691,333,1.745,401,3.492,441,3.392,442,2.873,443,2.873,445,3.731,524,3.365,525,3.392,528,2.873,539,2.873,595,3.365,613,4.136,614,3.731,615,4.288,616,4.288,617,3.601,618,3.365,619,4.288,620,4.288,621,4.288,622,4.288]],["title/injectables/FindUserByIdUseCase.html",[115,0.557,617,2.511]],["body/injectables/FindUserByIdUseCase.html",[12,0.014,20,0.158,21,0.158,22,0.141,25,0.751,29,0.454,31,0.656,32,0.375,33,0.324,34,0.454,36,0.507,38,0.267,41,0.632,58,0.158,59,0.157,67,2.045,71,0.01,72,0.01,79,0.232,113,0.714,115,0.852,116,1.479,119,1.78,131,0.931,144,0.833,158,1.286,159,3.675,164,1.781,167,2.185,168,2.799,169,1.426,170,2.799,176,0.897,203,1.024,260,2.135,310,2.395,475,3.172,496,3.426,518,3.413,617,3.843,623,4.119,624,4.733,625,4.733,626,3.413,627,4.119]],["title/classes/Lesson.html",[59,0.133,229,1.344]],["body/classes/Lesson.html",[12,0.014,20,0.095,21,0.095,22,0.084,29,0.569,31,0.691,32,0.453,33,0.365,34,0.478,36,0.657,37,4.113,38,0.191,58,0.095,59,0.094,71,0.007,72,0.007,73,0.918,79,0.139,88,1.464,113,1.04,119,0.824,137,0.643,144,1.178,146,1.686,169,1.944,193,1.67,194,3.225,195,3.852,196,3.351,198,3.105,199,2.762,201,2.68,202,3.383,203,1.191,205,2.223,208,2.223,210,2.223,212,2.223,214,2.465,216,2.465,222,2.223,224,2.465,229,1.435,231,2.68,232,1.778,234,1.778,235,1.252,236,2.73,237,1.778,238,2.68,239,2.68,240,3.079,242,1.778,243,2.042,244,3.629,245,1.778,246,2.042,341,3.264,347,4.425,349,1.201,366,2.427,628,2.223,629,4.269,630,3.705,631,2.833,632,2.833,633,2.833,634,2.833,635,2.833,636,2.833,637,2.833,638,2.833,639,2.833,640,2.833,641,2.465,642,2.833,643,2.465,644,2.833,645,2.833,646,2.833,647,2.833,648,2.833,649,2.833,650,2.833,651,3.716,652,3.079,653,3.716,654,2.465,655,2.042,656,2.465]],["title/classes/LessonRepository.html",[59,0.133,353,2.126]],["body/classes/LessonRepository.html",[12,0.013,20,0.134,21,0.134,22,0.119,25,0.672,29,0.521,31,0.753,32,0.43,33,0.372,34,0.521,36,0.753,38,0.149,58,0.134,59,0.133,71,0.009,72,0.009,73,1.296,79,0.196,144,0.964,203,1.158,229,2.578,252,6.339,253,2.321,254,2.421,256,2.909,257,2.528,260,2.706,261,3.437,264,3.855,265,4.5,267,3.917,268,3.064,353,2.909,363,2.367,366,2.06,657,3.483,658,5.431,659,4.765,660,4.002,661,4.002,662,3.483,663,4.002,664,4.002,665,4.765,666,4.002]],["title/interfaces/LessonSchema.html",[235,1.769,630,2.885]],["body/interfaces/LessonSchema.html",[12,0.014,20,0.116,21,0.116,22,0.103,32,0.424,33,0.378,34,0.367,38,0.215,58,0.116,59,0.115,71,0.008,72,0.008,79,0.169,88,1.572,113,1.1,137,0.785,144,1.015,146,1.811,169,1.49,193,1.934,194,2.171,195,3.103,198,3.504,199,3.215,201,2.171,202,2.923,203,1.207,229,1.162,231,3.103,232,2.171,234,2.171,235,1.529,236,3.789,237,2.171,238,3.103,239,3.103,240,3.565,242,2.171,243,2.494,244,3.938,245,2.171,246,2.494,273,2.318,341,3.504,347,4.802,349,1.466,366,2.606,628,2.715,630,4.16,651,4.303,652,3.565,653,4.303,654,3.01,655,2.494,656,3.01]],["title/modules/LessonsModule.html",[0,1.769,15,2.681]],["body/modules/LessonsModule.html",[0,2.79,2,2.173,3,2.069,4,2.418,5,2.418,6,2.173,7,3.732,8,2.418,12,0.014,14,3.88,15,5.376,17,3.286,18,2.418,19,2.288,20,0.137,21,0.137,22,0.121,24,3.723,38,0.29,41,0.546,57,1.736,58,0.137,59,0.136,71,0.009,72,0.009,156,2.949,288,3.209,289,2.567,293,2.567,294,3.209,295,2.567,350,4.584,397,4.55,503,4.55,506,4.584,552,4.55,565,4.584,566,3.559,603,4.55,606,4.584,667,3.559,668,4.089,669,3.559,670,4.089,671,3.559,672,4.089]],["title/classes/LoginAuthDto.html",[59,0.133,82,2.681]],["body/classes/LoginAuthDto.html",[12,0.014,20,0.153,21,0.153,22,0.136,29,0.496,33,0.354,34,0.526,38,0.171,58,0.153,59,0.152,67,2.274,71,0.01,72,0.01,73,1.486,79,0.225,82,4.02,83,2.015,88,1.517,105,1.383,171,3.119,172,3.396,173,3.722,175,4.737,193,2.347,203,1.139,305,4.45,342,5.247,531,5.565,673,6.17,674,3.994,675,4.589,676,5.222,677,4.589,678,4.589]],["title/classes/PrismaCourseMapper.html",[59,0.133,679,2.885]],["body/classes/PrismaCourseMapper.html",[12,0.014,20,0.15,21,0.15,22,0.133,25,0.724,29,0.438,31,0.633,32,0.43,33,0.313,34,0.438,36,0.633,38,0.22,58,0.15,59,0.149,71,0.01,72,0.01,73,1.451,79,0.219,88,1.34,113,0.891,137,1.34,144,0.788,191,2.282,197,3.305,198,2.988,199,2.163,236,2.38,349,1.899,679,4.258,680,3.898,681,4.706,682,4.635,683,4.635,684,5.906,685,6.653,686,4.479,687,5.906,688,4.479,689,3.898,690,3.898,691,3.898,692,3.898,693,3.898,694,4.479,695,4.479,696,4.479,697,4.479,698,4.479,699,3.898]],["title/injectables/PrismaCourseRepository.html",[115,0.557,315,1.628]],["body/injectables/PrismaCourseRepository.html",[12,0.014,20,0.097,21,0.097,22,0.087,25,0.535,29,0.484,31,0.698,32,0.399,33,0.345,34,0.484,36,0.666,38,0.243,41,0.389,58,0.097,59,0.097,60,1.83,71,0.007,72,0.007,79,0.143,108,0.98,113,0.876,115,0.607,116,0.911,119,0.848,131,1.397,144,1.094,158,1.451,176,1.178,191,2.187,200,3.01,203,0.984,250,1.849,253,1.849,254,1.929,255,2.58,256,2.318,257,2.014,258,3.424,260,2.524,261,2.738,263,3.797,264,3.465,265,4.48,267,3.281,268,2.441,270,3.797,315,1.776,335,2.738,364,1.83,481,3.247,676,3.797,679,2.102,685,5.675,689,2.537,699,2.537,700,2.537,701,2.288,702,2.915,703,3.146,704,2.915,705,2.915,706,2.915,707,2.915,708,2.915,709,2.288,710,2.915,711,1.953,712,2.537,713,4.362,714,2.915,715,3.146,716,2.915,717,2.915,718,4.362,719,2.915,720,4.362,721,4.362,722,4.362,723,2.915,724,2.288,725,2.915,726,2.915]],["title/classes/PrismaLessonMapper.html",[59,0.133,711,2.681]],["body/classes/PrismaLessonMapper.html",[12,0.014,20,0.146,21,0.146,22,0.13,25,0.713,29,0.431,31,0.623,32,0.426,33,0.308,34,0.431,36,0.623,38,0.216,58,0.146,59,0.145,71,0.01,72,0.01,73,1.417,79,0.214,88,1.32,113,0.877,137,1.32,144,0.77,146,1.52,198,2.941,199,2.112,200,2.02,229,2.594,233,3.155,236,2.325,341,2.941,349,1.855,366,2.187,681,4.675,682,4.563,683,4.563,711,3.896,727,3.808,728,5.814,729,6.614,730,4.375,731,5.814,732,4.375,733,4.375,734,3.808,735,3.808,736,3.808,737,3.808,738,3.808,739,4.375,740,4.375,741,4.375,742,4.375,743,4.375,744,4.375,745,4.375,746,3.808]],["title/injectables/PrismaLessonRepository.html",[115,0.557,361,2.024]],["body/injectables/PrismaLessonRepository.html",[12,0.014,20,0.104,21,0.104,22,0.093,25,0.563,29,0.496,31,0.716,32,0.409,33,0.354,34,0.496,36,0.685,38,0.238,41,0.417,58,0.104,59,0.104,60,1.959,71,0.008,72,0.008,79,0.153,108,1.049,113,0.821,115,0.639,116,0.975,119,0.907,131,1.18,144,1.125,158,1.468,176,1.212,200,1.441,203,1.092,229,2.507,233,2.25,253,1.945,254,2.029,256,2.438,257,2.118,260,2.566,261,2.88,264,3.552,265,4.326,267,3.766,268,2.568,353,2.438,361,2.322,366,2.257,481,3.357,658,4.736,659,3.994,662,2.716,665,3.994,701,2.45,703,3.309,709,2.45,711,2.091,712,2.716,715,3.309,724,2.45,729,5.222,746,2.716,747,2.716,748,3.121,749,3.121,750,3.121,751,3.121,752,3.121,753,3.121,754,3.121,755,4.589,756,3.121,757,3.121,758,4.589,759,3.121,760,3.121,761,3.121,762,3.121]],["title/injectables/PrismaService.html",[115,0.557,481,2.239]],["body/injectables/PrismaService.html",[12,0.014,20,0.18,21,0.18,22,0.16,25,0.816,29,0.4,36,0.578,38,0.248,41,0.721,58,0.18,59,0.179,60,3.387,71,0.011,72,0.011,79,0.264,115,0.926,116,1.686,158,1.366,176,1.023,349,2.288,481,3.721,763,4.696,764,4.795,765,7.209,766,7.87,767,5.396,768,5.396]],["title/classes/PrismaUserMapper.html",[59,0.133,769,2.885]],["body/classes/PrismaUserMapper.html",[12,0.014,20,0.145,21,0.145,22,0.129,25,0.709,29,0.429,31,0.619,32,0.425,33,0.306,34,0.429,36,0.619,38,0.215,58,0.145,59,0.144,67,2.35,71,0.01,72,0.01,73,1.405,79,0.212,113,0.872,137,1.312,144,0.763,146,1.511,171,2.451,172,2.669,173,2.924,183,3.404,185,3.775,186,3.775,188,3.404,189,3.775,190,3.404,198,2.924,199,2.094,236,2.304,349,1.839,358,3.139,681,4.663,682,4.537,683,4.537,769,4.168,770,3.775,771,5.781,772,6.6,773,4.337,774,5.781,775,4.337,776,3.775,777,4.337,778,4.337,779,4.337,780,4.337,781,4.337,782,4.337,783,4.337,784,3.775]],["title/injectables/PrismaUserRepository.html",[115,0.557,167,1.847]],["body/injectables/PrismaUserRepository.html",[12,0.014,20,0.096,21,0.096,22,0.085,25,0.527,29,0.512,31,0.719,32,0.411,33,0.356,34,0.498,36,0.719,38,0.229,41,0.382,58,0.096,59,0.095,60,1.795,67,2.3,71,0.007,72,0.007,79,0.14,108,0.961,113,1.014,115,0.599,116,0.893,119,0.831,131,1.273,144,1.085,158,1.498,159,2.076,167,1.985,171,1.823,172,1.985,176,1.273,203,1.118,253,1.823,254,1.901,255,3.399,256,2.285,257,1.985,260,2.639,261,2.699,268,2.406,481,3.216,519,1.916,701,2.244,703,3.101,709,2.244,715,3.101,724,4.056,769,2.062,772,5.002,776,2.489,784,2.489,785,2.489,786,3.742,787,3.742,788,2.86,789,3.742,790,2.86,791,2.86,792,2.86,793,3.742,794,2.86,795,2.86,796,3.742,797,2.86,798,3.742,799,2.86,800,2.86,801,2.86,802,4.3,803,2.86,804,5.168,805,5.168,806,2.86,807,2.86,808,2.86,809,2.86]],["title/controllers/UpdateCourseByIdController.html",[75,0.845,287,2.885]],["body/controllers/UpdateCourseByIdController.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.674,29,0.298,31,0.431,32,0.246,33,0.213,34,0.298,36,0.431,38,0.262,41,0.537,57,1.257,58,0.135,59,0.134,71,0.009,72,0.009,75,0.85,78,1.574,79,0.197,83,1.212,87,2.78,88,1.526,89,2.429,92,2.92,93,2.92,96,3.075,101,1.574,102,2.429,104,2.767,105,1.212,108,1.352,110,1.779,111,2.429,113,0.607,127,3.402,131,1.08,143,2.901,144,1.101,146,1.437,158,1.186,162,1.638,176,0.763,191,1.82,203,0.944,257,3.25,281,3.449,287,3.962,296,2.696,324,2.138,330,3.25,331,2.696,332,2.696,333,1.638,335,2.525,337,3.502,401,3.166,405,2.138,492,2.696,493,2.379,810,3.502,811,3.158,812,5.074,813,3.502,814,4.024,815,3.502,816,4.024,817,2.901,818,2.525,819,3.158,820,3.502,821,3.158]],["title/classes/UpdateCourseDto.html",[59,0.133,812,2.681]],["body/classes/UpdateCourseDto.html",[12,0.014,20,0.147,21,0.147,22,0.131,29,0.486,32,0.444,33,0.347,34,0.553,38,0.244,58,0.147,59,0.194,71,0.01,72,0.01,73,1.425,79,0.215,83,1.974,88,1.754,105,1.326,191,2.169,193,2.283,197,4.061,203,1.126,253,1.866,298,3.173,300,3.454,305,4.378,307,4.378,308,2.602,764,4.209,812,3.911,819,3.454,822,6.07,823,5.837,824,6.549,825,4.401,826,4.401,827,4.401,828,3.454,829,5.474]],["title/injectables/UpdateCourseUseCase.html",[115,0.557,281,2.511]],["body/injectables/UpdateCourseUseCase.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.677,29,0.409,31,0.591,32,0.338,33,0.292,34,0.409,36,0.433,38,0.263,41,0.54,58,0.135,59,0.134,71,0.009,72,0.009,79,0.198,113,0.61,115,0.768,116,1.264,119,1.604,130,2.93,131,0.795,136,2.075,137,1.252,144,0.971,146,1.762,158,1.19,164,1.522,169,1.219,176,1.045,191,1.96,203,1.098,250,3.086,257,1.867,260,1.923,272,2.392,281,3.462,310,2.455,311,2.711,315,1.646,316,2.046,317,2.711,318,2.046,324,2.149,359,2.149,369,2.711,371,2.264,372,1.953,470,2.711,496,2.264,499,2.917,501,3.175,691,3.521,692,3.521,693,3.521,812,4.992,818,2.539,819,3.175,830,3.521,831,4.045,832,4.045,833,5.515,834,5.515,835,5.515,836,4.045]],["title/controllers/UpdateLessonByIdController.html",[75,0.845,837,3.14]],["body/controllers/UpdateLessonByIdController.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.674,29,0.298,31,0.431,32,0.246,33,0.291,34,0.298,36,0.431,38,0.25,41,0.537,57,1.257,58,0.135,59,0.134,71,0.009,72,0.009,75,0.85,78,1.574,79,0.197,83,1.212,87,2.78,88,1.247,89,2.429,96,3.075,101,1.574,102,2.429,103,3.682,104,2.429,105,1.212,108,1.352,110,1.779,111,1.779,113,0.607,127,3.402,131,1.08,158,1.186,162,1.638,176,0.763,203,1.097,229,2.103,257,3.25,296,2.696,333,1.638,358,2.653,366,2.53,399,2.525,401,3.166,402,3.502,405,2.138,407,2.696,408,2.696,409,2.696,428,2.525,492,2.696,811,3.158,813,3.502,817,2.901,818,2.525,820,3.502,821,4.313,837,4.313,838,3.502,839,5.853,840,5.146,841,4.024,842,4.024,843,3.158,844,3.962,845,5.495,846,4.024]],["title/injectables/UpdateLessonByIdUseCase.html",[115,0.557,844,2.885]],["body/injectables/UpdateLessonByIdUseCase.html",[12,0.014,20,0.104,21,0.104,22,0.136,25,0.56,29,0.339,31,0.489,32,0.28,33,0.242,34,0.339,36,0.332,38,0.257,41,0.414,58,0.104,59,0.103,71,0.008,72,0.008,79,0.152,113,0.468,115,0.636,116,0.969,119,1.328,130,2.427,131,1.311,136,2.595,137,1.565,146,0.811,158,1.028,163,2.867,164,1.167,169,1.377,176,1.028,191,1.577,200,1.432,203,1.09,229,2.01,250,2.924,257,1.432,260,1.593,310,2.121,315,1.262,316,1.569,318,1.569,341,2.311,352,2.078,353,3.544,358,2.618,359,1.648,360,2.236,361,1.569,362,2.078,363,1.834,364,1.947,365,2.078,366,1.718,367,2.434,368,2.434,369,2.078,370,2.078,371,1.736,372,2.205,373,2.699,374,2.699,375,2.699,376,2.699,377,2.699,378,2.699,379,2.699,380,2.699,381,2.699,382,3.976,383,2.699,384,2.699,385,2.699,386,2.699,387,2.699,388,2.699,389,2.699,390,2.699,391,3.976,392,2.236,393,2.699,394,2.699,395,2.699,571,2.699,612,2.699,690,2.699,734,2.699,735,2.699,736,2.699,737,2.699,738,2.699,818,1.947,839,4.719,840,4.009,843,2.434,844,3.294,847,2.699,848,3.102,849,5.982,850,3.102,851,3.102,852,3.102,853,3.102,854,4.568,855,4.568,856,4.568,857,4.568,858,3.102]],["title/classes/UpdateLessonDto.html",[59,0.133,840,2.681]],["body/classes/UpdateLessonDto.html",[12,0.014,20,0.136,21,0.136,22,0.12,29,0.5,32,0.432,33,0.357,34,0.563,38,0.251,58,0.136,59,0.183,71,0.009,72,0.009,73,1.314,79,0.199,83,2.033,88,1.746,105,1.222,146,1.846,193,2.161,203,1.099,229,2.549,253,1.72,305,4.431,307,4.431,308,2.399,338,2.925,340,3.183,341,3.572,347,4.531,349,1.72,764,3.984,828,3.183,829,5.541,840,3.703,843,3.183,859,6.144,860,5.526,861,6.748,862,4.056,863,4.056,864,4.056,865,4.056]],["title/controllers/UpdateUserController.html",[75,0.845,866,2.885]],["body/controllers/UpdateUserController.html",[12,0.014,20,0.139,21,0.139,22,0.123,25,0.688,29,0.307,31,0.444,32,0.254,33,0.22,34,0.307,36,0.444,38,0.265,41,0.554,57,1.295,58,0.139,59,0.138,67,2.052,71,0.009,72,0.009,75,0.876,78,1.622,79,0.203,83,1.249,87,2.837,88,1.545,89,2.479,92,2.98,93,2.98,96,3.138,101,1.622,102,2.479,104,2.81,105,1.249,108,1.393,110,1.833,111,2.479,113,0.626,127,3.215,131,1.103,143,2.989,144,0.73,158,1.205,162,1.687,176,0.786,257,3.143,296,2.778,333,1.687,335,2.602,401,3.215,439,2.989,441,3.316,442,2.778,443,2.778,493,2.451,811,3.254,815,3.608,817,4.044,818,2.602,821,3.254,866,4.044,867,3.608,868,5.11,869,4.146,870,4.146,871,4.146,872,3.52,873,4.146,874,4.146]],["title/classes/UpdateUserDto.html",[59,0.133,868,2.681]],["body/classes/UpdateUserDto.html",[12,0.014,20,0.157,21,0.157,22,0.139,29,0.501,32,0.414,33,0.358,34,0.563,38,0.251,58,0.157,59,0.202,71,0.01,72,0.01,73,1.519,79,0.23,83,2.036,171,2.864,173,3.418,193,2.38,203,1.146,253,1.988,307,4.487,308,2.773,434,3.142,439,3.381,447,3.68,764,4.388,828,3.68,829,5.611,868,4.077,875,6.222,876,6.085,877,6.755,878,4.689,879,4.689,880,4.689,881,4.081,882,3.68]],["title/injectables/UpdateUserUseCase.html",[115,0.557,872,2.511]],["body/injectables/UpdateUserUseCase.html",[12,0.014,20,0.135,21,0.135,22,0.12,25,0.675,29,0.408,31,0.59,32,0.337,33,0.292,34,0.408,36,0.432,38,0.271,41,0.539,58,0.135,59,0.134,67,1.889,71,0.009,72,0.009,79,0.197,113,0.609,115,0.766,116,1.26,118,2.532,119,1.601,131,1.082,136,1.518,137,0.916,144,0.969,158,1.188,159,3.512,164,1.518,166,3.689,167,1.862,168,2.386,169,1.216,170,2.386,171,1.71,176,1.276,183,3.166,188,3.166,190,3.166,203,0.946,260,1.92,310,2.153,439,2.909,458,3.166,461,4.321,462,2.909,472,2.532,475,2.703,496,3.081,518,2.909,626,2.909,627,3.511,818,2.532,868,4.988,872,3.456,883,3.511,884,4.034,885,4.034,886,5.505,887,6.267,888,4.034,889,4.034,890,4.034,891,4.034,892,4.034,893,4.034]],["title/classes/User.html",[59,0.133,67,1.206]],["body/classes/User.html",[12,0.014,20,0.096,21,0.096,22,0.085,29,0.566,31,0.695,32,0.454,33,0.367,34,0.481,36,0.662,37,4.14,38,0.193,58,0.096,59,0.095,67,1.301,71,0.007,72,0.007,73,0.932,79,0.141,113,1.015,119,0.836,137,0.653,144,1.184,146,1.696,169,1.955,171,2.751,172,2.995,173,3.282,193,1.689,194,3.255,195,3.878,196,3.389,198,3.125,199,1.389,201,2.711,202,3.409,203,1.193,205,2.257,208,2.257,210,2.257,212,2.257,222,2.257,231,2.711,232,1.805,234,1.805,235,1.271,236,2.755,237,1.805,238,2.711,239,2.711,242,1.805,244,3.653,245,1.805,349,1.219,358,2.983,641,2.503,643,2.503,652,3.114,655,2.074,894,2.257,895,4.319,896,3.739,897,2.876,898,2.876,899,2.876,900,2.876,901,2.876,902,2.876,903,2.876,904,2.876,905,2.876,906,2.876,907,2.876,908,2.876,909,2.876,910,2.876,911,2.876,912,2.876,913,2.876,914,2.876,915,2.876,916,2.503,917,3.758,918,3.758,919,3.758,920,2.503,921,2.503,922,2.503]],["title/modules/UserModule.html",[0,1.769,16,2.681]],["body/modules/UserModule.html",[0,2.714,2,2.061,3,1.962,4,2.293,5,2.293,6,2.061,7,3.63,8,2.293,12,0.014,14,3.818,16,5.39,17,3.168,18,2.293,19,2.17,20,0.13,21,0.13,22,0.115,24,3.59,38,0.292,41,0.518,57,1.674,58,0.13,59,0.129,71,0.009,72,0.009,156,2.796,288,3.044,289,2.434,290,3.375,291,2.796,293,2.434,294,3.044,295,2.434,296,2.599,297,3.375,431,4.426,440,4.25,511,4.426,514,4.511,576,4.426,582,4.511,613,4.426,617,4.511,671,3.375,866,4.426,872,4.511,923,3.375,924,3.375,925,3.878,926,3.878]],["title/classes/UserRepository.html",[59,0.133,159,1.931]],["body/classes/UserRepository.html",[12,0.013,20,0.127,21,0.127,22,0.113,25,0.647,29,0.543,31,0.764,32,0.437,33,0.378,34,0.529,36,0.784,38,0.141,58,0.127,59,0.126,67,2.285,71,0.009,72,0.009,73,1.228,79,0.186,144,0.928,159,2.546,171,1.607,172,1.75,203,1.181,252,6.425,253,2.236,254,2.331,255,3.877,256,2.802,257,2.434,260,2.767,261,3.31,268,2.951,626,2.733,786,4.589,787,4.589,789,4.589,793,4.589,796,4.589,798,4.589,927,3.299,928,3.79,929,3.79,930,3.79,931,3.79,932,3.79,933,3.79,934,3.79]],["title/interfaces/UserSchema.html",[235,1.769,896,2.885]],["body/interfaces/UserSchema.html",[12,0.014,20,0.116,21,0.116,22,0.103,32,0.425,33,0.379,34,0.368,38,0.216,58,0.116,59,0.116,67,1.049,71,0.008,72,0.008,79,0.17,113,1.078,137,0.79,144,1.019,146,1.815,169,1.497,171,2.943,172,3.205,173,3.512,193,1.943,194,2.186,195,3.118,198,3.512,199,3.049,201,2.186,202,2.938,203,1.208,231,3.118,232,2.186,234,2.186,235,1.54,236,3.797,237,2.186,238,3.118,239,3.118,242,2.186,244,3.949,245,2.186,273,2.334,349,1.476,358,3.224,652,3.582,655,2.511,894,2.733,896,4.176,916,3.031,917,4.324,918,4.324,919,4.324,920,3.031,921,3.031,922,3.031]],["title/classes/ViewModelUser.html",[59,0.133,441,2.366]],["body/classes/ViewModelUser.html",[12,0.014,20,0.169,21,0.169,22,0.15,25,0.783,29,0.375,31,0.541,32,0.45,33,0.268,34,0.375,36,0.541,38,0.188,58,0.169,59,0.168,67,2.419,71,0.011,72,0.011,73,1.636,79,0.247,113,0.762,144,1.231,146,1.829,171,2.966,172,3.23,441,3.774,626,3.642,681,4.392,935,4.396,936,5.491,937,3.965,938,5.052]],["title/coverage.html",[939,4.764]],["body/coverage.html",[6,1.289,12,0.014,22,0.072,33,0.129,45,1.749,59,0.255,64,1.523,67,0.731,68,1.749,71,0.006,72,0.006,74,2.111,75,1.577,76,1.749,77,2.111,82,1.625,97,1.523,115,1.075,117,2.111,128,2.111,137,0.551,157,2.111,159,1.171,167,1.12,191,0.705,192,2.975,206,1.749,229,0.815,235,2.331,250,1.028,251,2.111,277,1.523,278,1.523,279,1.523,280,1.523,281,1.523,283,1.749,284,1.749,285,1.749,286,1.749,287,1.749,298,1.749,299,2.111,300,2.975,309,2.111,315,0.987,323,2.111,330,1.434,338,1.749,339,2.111,340,2.975,350,1.523,351,2.111,353,1.289,361,1.227,397,1.749,398,2.111,406,1.434,431,1.749,432,2.111,434,1.625,440,1.434,441,1.434,446,2.111,447,2.975,456,1.749,457,2.975,481,1.357,487,2.111,494,2.111,503,1.749,504,2.111,506,1.523,507,2.111,511,1.749,512,2.111,514,1.523,515,2.111,521,2.111,544,2.111,550,6.529,552,1.749,553,2.111,565,1.523,569,2.111,576,1.749,577,2.111,582,1.523,587,2.111,593,2.111,600,2.111,603,1.749,604,2.111,606,1.523,608,2.111,613,1.749,614,2.111,617,1.523,623,2.111,628,2.975,630,1.749,657,2.111,673,2.111,674,2.111,679,1.749,680,2.111,700,2.111,711,1.625,727,2.111,747,2.111,763,2.111,769,1.749,770,2.111,785,2.111,810,2.111,812,1.625,822,2.111,830,2.111,837,1.904,838,2.111,840,1.625,844,1.749,847,2.111,859,2.111,866,1.749,867,2.111,868,1.625,872,1.523,875,2.111,883,2.111,894,2.975,896,1.749,927,2.111,935,2.111,939,2.111,940,2.426,941,2.426,942,7.677,943,7.677,944,6.336,945,3.79,946,4.665,947,5.274,948,2.111,949,2.426,950,3.79,951,4.665,952,2.111,953,2.111,954,2.426,955,2.111]],["title/dependencies.html",[3,2.436,956,2.902]],["body/dependencies.html",[3,2.663,12,0.014,41,0.703,48,3.527,59,0.217,71,0.011,72,0.011,105,1.586,166,3.527,308,3.113,349,2.232,618,4.131,881,4.581,882,4.131,957,7.129,958,5.264,959,5.264,960,5.264,961,5.264,962,5.264,963,5.264,964,5.264,965,5.264,966,5.264,967,5.264,968,5.264,969,5.264,970,5.264,971,5.264,972,5.264,973,5.264,974,5.264,975,5.264,976,5.264,977,5.264,978,5.264,979,5.264]],["title/miscellaneous/functions.html",[980,2.404,981,4.191]],["body/miscellaneous/functions.html",[6,4.085,12,0.012,71,0.012,72,0.012,79,0.307,953,5.461,980,4.525,981,5.461,982,6.275]],["title/index.html",[79,0.163,983,2.617,984,2.617]],["body/index.html",[3,0.562,12,0.012,31,0.211,32,0.417,34,0.238,64,1.235,67,2.015,68,1.912,71,0.003,72,0.003,80,1.545,88,1.612,89,1.172,95,3.137,96,2.458,118,2.013,134,2.518,137,1.215,144,1.308,146,1.558,171,2.092,172,2.278,173,1.341,191,2.027,197,2.458,198,1.857,199,1.772,200,1.224,229,2.199,244,0.656,253,1.863,254,2.444,257,1.874,264,1.704,324,2.488,341,2.369,366,1.653,369,0.744,392,3.376,399,2.013,401,2.708,415,2.013,420,1.664,462,0.8,466,1.545,469,2.081,470,2.459,472,1.664,519,1.777,523,1.319,525,2.401,527,3.187,530,2.721,533,1.545,534,1.545,536,2.518,537,1.545,703,1.419,715,2.313,817,1.419,882,2.518,955,0.966,983,2.518,984,2.518,985,1.968,986,1.11,987,1.11,988,3.67,989,1.968,990,4.06,991,1.11,992,1.11,993,1.11,994,1.968,995,1.968,996,4.682,997,3.67,998,3.208,999,2.651,1000,2.651,1001,1.968,1002,1.419,1003,4.394,1004,1.11,1005,3.208,1006,2.651,1007,1.11,1008,1.11,1009,1.11,1010,2.651,1011,1.11,1012,1.11,1013,1.11,1014,1.11,1015,2.651,1016,3.208,1017,1.968,1018,2.651,1019,2.651,1020,1.11,1021,1.11,1022,3.208,1023,1.11,1024,1.11,1025,1.968,1026,1.11,1027,1.11,1028,1.11,1029,1.11,1030,1.968,1031,1.11,1032,1.11,1033,1.968,1034,1.11,1035,1.11,1036,1.968,1037,1.11,1038,1.11,1039,1.11,1040,1.11,1041,1.11,1042,1.11,1043,1.968,1044,1.11,1045,1.11,1046,1.11,1047,1.11,1048,4.394,1049,2.651,1050,2.651,1051,2.651,1052,1.968,1053,1.11,1054,1.11,1055,1.11,1056,1.968,1057,1.11,1058,1.11,1059,1.11,1060,1.11,1061,1.11,1062,1.11,1063,1.968,1064,1.11,1065,0.966,1066,1.968,1067,1.968,1068,5.831,1069,4.06,1070,4.06,1071,3.208,1072,1.11,1073,1.11,1074,1.11,1075,1.968,1076,1.11,1077,1.11,1078,1.11,1079,1.11,1080,1.11,1081,1.11,1082,3.208,1083,1.11,1084,2.651,1085,1.11,1086,1.11,1087,1.968,1088,1.11,1089,1.968,1090,1.11,1091,1.968,1092,1.11,1093,1.11,1094,1.11,1095,1.11,1096,1.11,1097,1.11,1098,1.11,1099,1.11,1100,1.11,1101,1.11,1102,1.11,1103,0.966,1104,1.11,1105,6.079,1106,2.651,1107,6.686,1108,3.208,1109,4.394,1110,3.208,1111,3.208,1112,1.11,1113,6.079,1114,6.75,1115,6.75,1116,6.75,1117,6.75,1118,3.67,1119,1.11,1120,2.651,1121,1.968,1122,1.11,1123,1.11,1124,1.11,1125,1.11,1126,1.11,1127,1.11,1128,2.651,1129,0.966,1130,2.651,1131,2.651,1132,2.651,1133,1.11,1134,2.651,1135,2.651,1136,3.208,1137,3.208,1138,1.968,1139,0.966,1140,1.11,1141,1.11,1142,1.11,1143,4.06,1144,6.465,1145,6.188,1146,4.06,1147,3.208,1148,5.156,1149,5.156,1150,5.156,1151,4.394,1152,1.11,1153,6.75,1154,4.682,1155,3.208,1156,4.682,1157,3.208,1158,3.67,1159,1.11,1160,1.11,1161,4.394,1162,3.67,1163,3.67,1164,2.651,1165,1.11,1166,2.651,1167,1.11,1168,1.11,1169,1.11,1170,1.11,1171,1.11,1172,1.968,1173,1.968,1174,1.11,1175,1.11,1176,1.11,1177,1.968,1178,1.11,1179,1.968,1180,1.11,1181,0.966]],["title/license.html",[983,2.617,984,2.617,1002,2.404]],["body/license.html",[12,0.01,19,2.599,68,3.35,71,0.01,72,0.01,118,3.796,139,4.043,618,3.646,1002,3.35,1103,4.043,1182,6.725,1183,4.646,1184,4.646,1185,4.646,1186,6.048,1187,4.646,1188,4.646,1189,4.646,1190,4.646,1191,4.646,1192,4.646,1193,6.048,1194,7.905,1195,4.646,1196,4.646,1197,4.646,1198,6.725,1199,4.646,1200,6.048,1201,4.646,1202,4.646,1203,4.646,1204,4.646,1205,4.646,1206,4.646,1207,4.646,1208,4.646,1209,4.646,1210,6.048,1211,4.646,1212,4.646,1213,4.646,1214,4.646,1215,4.646,1216,4.646,1217,4.646,1218,6.048,1219,6.048,1220,4.646,1221,4.646,1222,4.646,1223,4.646,1224,4.646,1225,4.646,1226,4.646,1227,4.646,1228,4.646,1229,4.646,1230,4.646,1231,4.646,1232,4.646,1233,4.646,1234,4.646,1235,4.646,1236,4.646,1237,4.646,1238,4.646,1239,4.646,1240,4.646,1241,4.646,1242,4.646,1243,4.646,1244,4.646,1245,4.646,1246,4.646,1247,4.646]],["title/modules.html",[2,2.908]],["body/modules.html",[1,4.128,2,3.042,11,3.836,12,0.011,13,3.836,14,3.042,15,3.836,16,3.836,71,0.011,72,0.011,1065,6.946,1248,7.981,1249,7.981,1250,7.981]],["title/overview.html",[1251,4.764]],["body/overview.html",[0,1.488,1,5.523,2,1.788,3,1.703,4,1.99,5,1.99,6,1.788,7,1.99,8,1.99,9,2.929,10,2.929,11,4.74,12,0.014,13,5.254,14,4.233,15,5.179,16,5.254,17,2.867,18,1.99,19,1.883,57,1.051,71,0.008,72,0.008,73,1.09,97,3.567,116,1.051,151,2.929,152,2.929,167,3.265,273,2.255,274,2.929,276,2.929,277,3.567,278,3.567,279,3.567,280,3.567,281,3.567,315,2.879,350,3.567,361,3.579,440,3.36,478,2.929,479,2.929,480,2.929,481,3.18,506,3.567,514,3.567,565,3.567,582,3.567,606,3.567,617,3.567,667,2.929,669,2.929,872,3.567,923,2.929,924,2.929,1129,2.929,1139,2.929,1181,2.929,1251,2.929,1252,3.366,1253,3.366]],["title/properties.html",[193,1.883,956,2.902]],["body/properties.html",[12,0.013,71,0.012,72,0.012,88,1.407,193,2.424,1002,4.469,1254,6.198,1255,6.198,1256,6.198,1257,6.198]],["title/miscellaneous/typealiases.html",[980,2.404,1258,4.815]],["body/miscellaneous/typealiases.html",[12,0.012,33,0.332,71,0.012,72,0.012,79,0.307,202,4.304,980,4.525,1259,6.275,1260,6.275,1261,6.275]],["title/classes/viewModelCourse.html",[59,0.133,330,2.366]],["body/classes/viewModelCourse.html",[12,0.014,20,0.163,21,0.163,22,0.145,25,0.765,29,0.361,31,0.522,32,0.444,33,0.258,34,0.361,36,0.522,38,0.232,58,0.163,59,0.162,71,0.01,72,0.01,73,1.578,79,0.238,88,1.561,113,0.735,144,1.211,191,2.319,197,3.849,199,3.321,200,3.176,272,2.881,330,3.688,406,2.881,607,4.24,681,4.318,936,5.399,937,3.823,948,4.24,1262,4.871,1263,4.871,1264,4.871]],["title/classes/viewModelLesson.html",[59,0.133,406,2.366]],["body/classes/viewModelLesson.html",[12,0.014,20,0.167,21,0.167,22,0.148,25,0.776,29,0.37,31,0.534,32,0.448,33,0.264,34,0.37,36,0.534,38,0.186,58,0.167,59,0.165,71,0.01,72,0.01,73,1.615,79,0.244,88,1.578,113,0.752,144,1.224,146,1.818,229,2.711,341,3.518,363,2.948,366,2.616,406,3.742,681,4.364,936,5.457,937,3.912,952,4.338,1265,4.985]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["0",{"_index":550,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1255,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["01t00:00:00z",{"_index":1151,"title":{},"body":{"index.html":{}}}],["02t00:00:00z",{"_index":1166,"title":{},"body":{"index.html":{}}}],["04",{"_index":1150,"title":{},"body":{"index.html":{}}}],["1",{"_index":420,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["10",{"_index":472,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{}}}],["10.0.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1174,"title":{},"body":{"index.html":{}}}],["12",{"_index":1175,"title":{},"body":{"index.html":{}}}],["123e4567",{"_index":1114,"title":{},"body":{"index.html":{}}}],["12d3",{"_index":1116,"title":{},"body":{"index.html":{}}}],["13",{"_index":1176,"title":{},"body":{"index.html":{}}}],["14",{"_index":1178,"title":{},"body":{"index.html":{}}}],["15",{"_index":1180,"title":{},"body":{"index.html":{}}}],["16",{"_index":1181,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":1119,"title":{},"body":{"index.html":{}}}],["20",{"_index":1253,"title":{},"body":{"overview.html":{}}}],["200",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["201",{"_index":327,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["2023",{"_index":1149,"title":{},"body":{"index.html":{}}}],["2024",{"_index":1184,"title":{},"body":{"license.html":{}}}],["21",{"_index":1252,"title":{},"body":{"overview.html":{}}}],["26ad0bdcda7c",{"_index":414,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["3",{"_index":1127,"title":{},"body":{"index.html":{}}}],["3000:3000",{"_index":1039,"title":{},"body":{"index.html":{}}}],["4",{"_index":1129,"title":{},"body":{"index.html":{},"overview.html":{}}}],["401",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["404",{"_index":557,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["42661417400",{"_index":1118,"title":{},"body":{"index.html":{}}}],["42661417401",{"_index":1122,"title":{},"body":{"index.html":{}}}],["42661417402",{"_index":1148,"title":{},"body":{"index.html":{}}}],["42661417403",{"_index":1158,"title":{},"body":{"index.html":{}}}],["42661417404",{"_index":1160,"title":{},"body":{"index.html":{}}}],["42661417405",{"_index":1167,"title":{},"body":{"index.html":{}}}],["42661417406",{"_index":1169,"title":{},"body":{"index.html":{}}}],["47a3",{"_index":412,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["5",{"_index":1133,"title":{},"body":{"index.html":{}}}],["5.1.1",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["5.13.0",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":394,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["500",{"_index":559,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["5000",{"_index":391,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["59f501ef",{"_index":410,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["6",{"_index":1139,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.6.6",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["6.6.9",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["6h",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["7",{"_index":1142,"title":{},"body":{"index.html":{}}}],["7.3.1",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["7373",{"_index":411,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["8",{"_index":1152,"title":{},"body":{"index.html":{}}}],["9",{"_index":1159,"title":{},"body":{"index.html":{}}}],["9.0.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":194,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["a14e",{"_index":413,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["a456",{"_index":1117,"title":{},"body":{"index.html":{}}}],["above",{"_index":1217,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":252,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"classes/UserRepository.html":{}}}],["access",{"_index":1048,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":196,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["action",{"_index":1241,"title":{},"body":{"license.html":{}}}],["add",{"_index":1090,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":1058,"title":{},"body":{"index.html":{}}}],["administrator",{"_index":415,"title":{},"body":{"controllers/CreateLessonsController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"index.html":{}}}],["administrators",{"_index":499,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["admins",{"_index":368,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["advanced",{"_index":1161,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedextensions",{"_index":376,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["allowedextensions.includes(fileextension",{"_index":381,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["already",{"_index":462,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{}}}],["and/or",{"_index":1208,"title":{},"body":{"license.html":{}}}],["api",{"_index":988,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["apioperation",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apiproperty",{"_index":305,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{}}}],["apiproperty({description",{"_index":342,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["apiquery",{"_index":538,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["apiresponse",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apitags",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["apitags('auth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('courses",{"_index":331,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["apitags('lessons",{"_index":407,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["apitags('users",{"_index":442,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["application",{"_index":1029,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1040,"title":{},"body":{"index.html":{}}}],["apply(authmiddleware",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciate",{"_index":1072,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1049,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1245,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1195,"title":{},"body":{"license.html":{}}}],["async",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["auth",{"_index":64,"title":{"classes/Auth.html":{}},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{},"index.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.dto.ts",{"_index":674,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:11",{"_index":677,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.dto.ts:5",{"_index":678,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.dto.ts:8",{"_index":675,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.service",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.middleware",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":76,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":45,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1257,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authorization?.replace('bearer",{"_index":135,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authors",{"_index":1234,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1121,"title":{},"body":{"index.html":{}}}],["await",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["b",{"_index":1086,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1036,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["badrequestexception('banner",{"_index":321,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["badrequestexception('description",{"_index":320,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["badrequestexception('email",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('invalid",{"_index":382,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["badrequestexception('name",{"_index":319,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["banner",{"_index":197,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"classes/PrismaCourseMapper.html":{},"classes/UpdateCourseDto.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["banner(banner",{"_index":247,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["basics",{"_index":1146,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":892,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["below",{"_index":1080,"title":{},"body":{"index.html":{}}}],["between",{"_index":393,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1010,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1250,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1065,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":1033,"title":{},"body":{"index.html":{}}}],["c",{"_index":1183,"title":{},"body":{"license.html":{}}}],["catch",{"_index":148,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["cd",{"_index":1014,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1088,"title":{},"body":{"index.html":{}}}],["characters",{"_index":395,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["charge",{"_index":1190,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":1085,"title":{},"body":{"index.html":{}}}],["checks",{"_index":1100,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1237,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/Auth.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["classes",{"_index":73,"title":{},"body":{"classes/Auth.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"overview.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["click",{"_index":1057,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1007,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":274,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_imports",{"_index":275,"title":{},"body":{"modules/CoursesModule.html":{}}}],["cluster_coursesmodule_providers",{"_index":276,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":478,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":479,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":480,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_lessonsmodule",{"_index":667,"title":{},"body":{"modules/LessonsModule.html":{},"overview.html":{}}}],["cluster_lessonsmodule_imports",{"_index":668,"title":{},"body":{"modules/LessonsModule.html":{}}}],["cluster_lessonsmodule_providers",{"_index":669,"title":{},"body":{"modules/LessonsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":923,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":925,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":924,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":989,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1089,"title":{},"body":{"index.html":{}}}],["concepts",{"_index":1179,"title":{},"body":{"index.html":{}}}],["conditionals",{"_index":1173,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1216,"title":{},"body":{"license.html":{}}}],["configure",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":458,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["conflictexception('this",{"_index":890,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["connection",{"_index":1246,"title":{},"body":{"license.html":{}}}],["const",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{}}}],["constructor(courserepository",{"_index":311,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["constructor(jwtservice",{"_index":120,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["constructor(lessonrepository",{"_index":352,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["constructor(prisma",{"_index":701,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["constructor(props",{"_index":201,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["constructor(userrepository",{"_index":475,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["consumer",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":1037,"title":{},"body":{"index.html":{}}}],["content",{"_index":341,"title":{},"body":{"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["content(content",{"_index":654,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["content.length",{"_index":390,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["content.split('.').pop().tolowercase",{"_index":375,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["contents",{"_index":993,"title":{},"body":{"index.html":{}}}],["conteúdo",{"_index":425,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["contract",{"_index":1242,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1078,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1001,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1073,"title":{},"body":{"index.html":{}}}],["control",{"_index":1170,"title":{},"body":{"index.html":{}}}],["controller",{"_index":75,"title":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('courses",{"_index":332,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["controller('courses/:courseid/lessons",{"_index":408,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["controller('user",{"_index":443,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["controller/create.controller",{"_index":288,"title":{},"body":{"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/delete.controller",{"_index":294,"title":{},"body":{"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/findall.controller",{"_index":290,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UserModule.html":{}}}],["controller/findallbycourse.controller",{"_index":672,"title":{},"body":{"modules/LessonsModule.html":{}}}],["controller/findbyid.controller",{"_index":671,"title":{},"body":{"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["controller/update.controller",{"_index":297,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UserModule.html":{}}}],["controllers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"modules/LessonsModule.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copies",{"_index":1210,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1193,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1182,"title":{},"body":{"license.html":{}}}],["course",{"_index":191,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["course'})@apibody({type",{"_index":325,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["course'})@apiresponse({status",{"_index":814,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{}}}],["course.banner",{"_index":693,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.createdat",{"_index":694,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["course.description",{"_index":692,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.dto",{"_index":819,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["course.dto.ts",{"_index":300,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["course.dto.ts:13",{"_index":303,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:14",{"_index":826,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.dto.ts:18",{"_index":302,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:19",{"_index":825,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.dto.ts:8",{"_index":304,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:9",{"_index":827,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["course.id",{"_index":690,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["course.lessons",{"_index":722,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["course.name",{"_index":691,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["courseexists",{"_index":500,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["courseid",{"_index":366,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["courseid(courseid",{"_index":656,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["courseraw",{"_index":685,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["courseraw.banner",{"_index":697,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.createdat",{"_index":698,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.description",{"_index":696,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courseraw.id",{"_index":699,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["courseraw.lessons.map(prismalessonmapper.todomain",{"_index":720,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["courseraw.name",{"_index":695,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["courserepository",{"_index":250,"title":{"classes/CourseRepository.html":{}},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["courses",{"_index":324,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"index.html":{}}}],["courses'})@apiresponse({status",{"_index":526,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["courses.length",{"_index":549,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["courses.map(viewmodelcourse.tohttp",{"_index":543,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["courses/:courseid/lessons",{"_index":399,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"index.html":{}}}],["courses/:courseid/lessons/:id",{"_index":1070,"title":{},"body":{"index.html":{}}}],["courses/:id",{"_index":1069,"title":{},"body":{"index.html":{}}}],["courses/courses.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["courseschema",{"_index":206,"title":{"interfaces/CourseSchema.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":13,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesraw",{"_index":716,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["coursesraw.map((courseraw",{"_index":719,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["course})@apiresponse({status",{"_index":326,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["coverage",{"_index":939,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":253,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["create(@body",{"_index":334,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateUserController.html":{}}}],["create(course",{"_index":258,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/CreateCoursesController.html":{},"injectables/PrismaCourseRepository.html":{}}}],["create(createuserdto",{"_index":433,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["create(lesson",{"_index":659,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["create(req",{"_index":400,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["create(user",{"_index":789,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["createcoursedto",{"_index":298,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["createcoursescontroller",{"_index":283,"title":{"controllers/CreateCoursesController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"coverage.html":{}}}],["createcourseusecase",{"_index":277,"title":{"injectables/CreateCourseUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":328,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["createdat",{"_index":198,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["createlessondto",{"_index":338,"title":{"classes/CreateLessonDto.html":{}},"body":{"classes/CreateLessonDto.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["createlessonscontroller",{"_index":397,"title":{"controllers/CreateLessonsController.html":{}},"body":{"controllers/CreateLessonsController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["createlessonusecase",{"_index":350,"title":{"injectables/CreateLessonUseCase.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1106,"title":{},"body":{"index.html":{}}}],["createusercontroller",{"_index":431,"title":{"controllers/CreateUserController.html":{}},"body":{"controllers/CreateUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":434,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":436,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["createuserrequest",{"_index":456,"title":{"interfaces/CreateUserRequest.html":{}},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["createuserusecase",{"_index":440,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["crypto",{"_index":232,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["da",{"_index":426,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["damages",{"_index":1238,"title":{},"body":{"license.html":{}}}],["data",{"_index":715,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["database",{"_index":997,"title":{},"body":{"index.html":{}}}],["database/database.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["database_url=\\nport=\\njwt_secret",{"_index":1028,"title":{},"body":{"index.html":{}}}],["databasemodule",{"_index":14,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":236,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["db",{"_index":1045,"title":{},"body":{"index.html":{}}}],["de",{"_index":418,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["deal",{"_index":1197,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1247,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCourseDto.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LoginAuthDto.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{}}}],["deeper",{"_index":1163,"title":{},"body":{"index.html":{}}}],["default",{"_index":536,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["defined",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["delete",{"_index":254,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["delete(':id",{"_index":489,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["delete(@req",{"_index":491,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["delete(id",{"_index":261,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["delete(req",{"_index":488,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{}}}],["deletecoursebyidcontroller",{"_index":286,"title":{"controllers/DeleteCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"coverage.html":{}}}],["deletecoursebyidusecase",{"_index":278,"title":{"injectables/DeleteCourseByIdUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["deleted",{"_index":1132,"title":{},"body":{"index.html":{}}}],["deletelessonbyidcontroller",{"_index":503,"title":{"controllers/DeleteLessonByIdController.html":{}},"body":{"controllers/DeleteLessonByIdController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["deletelessonbyidusecase",{"_index":506,"title":{"injectables/DeleteLessonByIdUseCase.html":{}},"body":{"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["deletes",{"_index":1130,"title":{},"body":{"index.html":{}}}],["deleteusercontroller",{"_index":511,"title":{"controllers/DeleteUserController.html":{}},"body":{"controllers/DeleteUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deleteuserusecase",{"_index":514,"title":{"injectables/DeleteUserUseCase.html":{}},"body":{"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"index.html":{},"properties.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["description(description",{"_index":246,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["detailed",{"_index":1053,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1042,"title":{},"body":{"index.html":{}}}],["different",{"_index":1047,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1064,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1013,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1206,"title":{},"body":{"license.html":{}}}],["dive",{"_index":1162,"title":{},"body":{"index.html":{}}}],["docker",{"_index":996,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["docx",{"_index":379,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["doe",{"_index":1109,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":438,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["dto/login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":818,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{}}}],["e",{"_index":1027,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":1115,"title":{},"body":{"index.html":{}}}],["each",{"_index":1055,"title":{},"body":{"index.html":{}}}],["echo",{"_index":1026,"title":{},"body":{"index.html":{}}}],["email",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{}}}],["email(email",{"_index":921,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["endpoint",{"_index":1056,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1000,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1095,"title":{},"body":{"index.html":{}}}],["entities/course.entity",{"_index":272,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"classes/viewModelCourse.html":{}}}],["entities/lesson.entity",{"_index":363,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/viewModelLesson.html":{}}}],["entities/user.entity",{"_index":626,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{}}}],["env",{"_index":1025,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1021,"title":{},"body":{"index.html":{}}}],["error",{"_index":149,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["error.'})@apiquery({name",{"_index":562,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["esta",{"_index":421,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["este",{"_index":423,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["event",{"_index":1233,"title":{},"body":{"license.html":{}}}],["example",{"_index":1107,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["execute",{"_index":310,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["execute(courseid",{"_index":571,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["execute(id",{"_index":496,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["execute(page",{"_index":546,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["execute(role",{"_index":589,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["execute(undefined",{"_index":313,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateUserUseCase.html":{}}}],["execute(userrole",{"_index":355,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["exists",{"_index":463,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["expiresin",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["explore",{"_index":1062,"title":{},"body":{"index.html":{}}}],["export",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":618,"title":{},"body":{"controllers/FindUserByIdController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":764,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":383,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjzdwiioiixmjm0nty3ocwidxnlcm5hbwuioijqb2huywrvbm9liiwiawf0ijoxnte2mjm5mdiyfq.sflkxwrjsmekkf2qt4fwpmejf36pok6yjv_adqssw5c",{"_index":1141,"title":{},"body":{"index.html":{}}}],["faker",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":531,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"classes/LoginAuthDto.html":{}}}],["feature",{"_index":1082,"title":{},"body":{"index.html":{}}}],["feature/my",{"_index":1087,"title":{},"body":{"index.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["file'].includes(role",{"_index":373,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["fileextension",{"_index":374,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["files",{"_index":1196,"title":{},"body":{"license.html":{}}}],["find",{"_index":525,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"index.html":{}}}],["findall",{"_index":255,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findall(@req",{"_index":584,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["findall(page",{"_index":522,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["findall(req",{"_index":578,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["findall(skip",{"_index":263,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/PrismaCourseRepository.html":{}}}],["findallbycourse",{"_index":658,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["findallbycourse(courseid",{"_index":662,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["findallcoursescontroller",{"_index":284,"title":{"controllers/FindAllCoursesController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"coverage.html":{}}}],["findallcoursesusecase",{"_index":279,"title":{"injectables/FindAllCoursesUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["findalllessonsbycoursecontroller",{"_index":552,"title":{"controllers/FindAllLessonsByCourseController.html":{}},"body":{"controllers/FindAllLessonsByCourseController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["findalllessonsbycourseusecase",{"_index":565,"title":{"injectables/FindAllLessonsByCourseUseCase.html":{}},"body":{"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["findallusercontroller",{"_index":576,"title":{"controllers/FindAllUserController.html":{}},"body":{"controllers/FindAllUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["findallusersusecase",{"_index":582,"title":{"injectables/FindAllUsersUseCase.html":{}},"body":{"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["findbyemail",{"_index":786,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyemail(email",{"_index":793,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid",{"_index":256,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid(@param('id",{"_index":598,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{}}}],["findbyid(@req",{"_index":619,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["findbyid(id",{"_index":268,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid(req",{"_index":615,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["findbyusername",{"_index":787,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyusername(username",{"_index":796,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findcoursebyidcontroller",{"_index":285,"title":{"controllers/FindCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"coverage.html":{}}}],["findcoursebyidusecase",{"_index":280,"title":{"injectables/FindCourseByIdUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["findlessonbyidcontroller",{"_index":603,"title":{"controllers/FindLessonByIdController.html":{}},"body":{"controllers/FindLessonByIdController.html":{},"modules/LessonsModule.html":{},"coverage.html":{}}}],["findlessonbyidusecase",{"_index":606,"title":{"injectables/FindLessonByIdUseCase.html":{}},"body":{"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"modules/LessonsModule.html":{},"coverage.html":{},"overview.html":{}}}],["finds",{"_index":1128,"title":{},"body":{"index.html":{}}}],["finduserbyidcontroller",{"_index":613,"title":{"controllers/FindUserByIdController.html":{}},"body":{"controllers/FindUserByIdController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["finduserbyidusecase",{"_index":617,"title":{"injectables/FindUserByIdUseCase.html":{}},"body":{"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["first",{"_index":1155,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1229,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1083,"title":{},"body":{"index.html":{}}}],["flow",{"_index":1171,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1005,"title":{},"body":{"index.html":{}}}],["following",{"_index":1215,"title":{},"body":{"license.html":{}}}],["fork",{"_index":1081,"title":{},"body":{"index.html":{}}}],["forroutes",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":372,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["found.'})@apiresponse({status",{"_index":558,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["free",{"_index":1189,"title":{},"body":{"license.html":{}}}],["ftp|http|https",{"_index":386,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["fullname",{"_index":1185,"title":{},"body":{"license.html":{}}}],["function",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functionalities",{"_index":992,"title":{},"body":{"index.html":{}}}],["functions",{"_index":981,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1213,"title":{},"body":{"license.html":{}}}],["get(':id",{"_index":597,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{}}}],["get(':id')@apioperation({summary",{"_index":594,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{}}}],["get('all",{"_index":583,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["get('all')@apioperation({summary",{"_index":579,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["get()@apioperation({summary",{"_index":524,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindUserByIdController.html":{}}}],["getbanner",{"_index":218,"title":{},"body":{"classes/Course.html":{}}}],["getcontent",{"_index":637,"title":{},"body":{"classes/Lesson.html":{}}}],["getcourseid",{"_index":645,"title":{},"body":{"classes/Lesson.html":{}}}],["getcreatedat",{"_index":222,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getdescription",{"_index":214,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["getemail",{"_index":905,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":208,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getlessons",{"_index":226,"title":{},"body":{"classes/Course.html":{}}}],["getname",{"_index":210,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["getpassword",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["getrole",{"_index":641,"title":{},"body":{"classes/Lesson.html":{},"classes/User.html":{}}}],["getting",{"_index":983,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getupdatedat",{"_index":224,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["getusername",{"_index":901,"title":{},"body":{"classes/User.html":{}}}],["git",{"_index":1084,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1188,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":1099,"title":{},"body":{"index.html":{}}}],["hash",{"_index":460,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["hash(password",{"_index":471,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["haven't",{"_index":1032,"title":{},"body":{"index.html":{}}}],["header",{"_index":1050,"title":{},"body":{"index.html":{}}}],["helped",{"_index":1074,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1187,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1235,"title":{},"body":{"license.html":{}}}],["https://example.com/images/advanced",{"_index":1164,"title":{},"body":{"index.html":{}}}],["https://example.com/images/programming.jpg",{"_index":1147,"title":{},"body":{"index.html":{}}}],["https://github.com/walttinho/lms.git",{"_index":1011,"title":{},"body":{"index.html":{}}}],["id",{"_index":144,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["id'})@apiresponse({status",{"_index":595,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["identifier",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1034,"title":{},"body":{"index.html":{}}}],["implements",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}}}],["implied",{"_index":1225,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["in.'})@apiresponse({status",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["include",{"_index":718,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["included",{"_index":1220,"title":{},"body":{"license.html":{}}}],["including",{"_index":1200,"title":{},"body":{"license.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["information",{"_index":1054,"title":{},"body":{"index.html":{}}}],["initial",{"_index":1044,"title":{},"body":{"index.html":{}}}],["inject",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["inject(prismacourserepository",{"_index":318,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["inject(prismalessonrepository",{"_index":365,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["inject(prismauserrepository",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["injectable",{"_index":115,"title":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"overview.html":{}}}],["install",{"_index":1016,"title":{},"body":{"index.html":{}}}],["installation",{"_index":994,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1079,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1060,"title":{},"body":{"index.html":{}}}],["interested",{"_index":1077,"title":{},"body":{"index.html":{}}}],["interface",{"_index":235,"title":{"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"interfaces/LessonSchema.html":{},"interfaces/UserSchema.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/CourseSchema.html":{},"interfaces/CreateUserRequest.html":{},"interfaces/LessonSchema.html":{},"interfaces/UserSchema.html":{},"overview.html":{}}}],["internal",{"_index":560,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["introduction",{"_index":1143,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["isemail",{"_index":455,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":306,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":829,"title":{},"body":{"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":877,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring()@apiproperty({description",{"_index":861,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["ispasswordvalid",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":307,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":301,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["isstring()@isoptional()@apiproperty({description",{"_index":824,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["items",{"_index":533,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["jane",{"_index":1123,"title":{},"body":{"index.html":{}}}],["jane.smith@example.com",{"_index":1126,"title":{},"body":{"index.html":{}}}],["janesmith",{"_index":1125,"title":{},"body":{"index.html":{}}}],["john",{"_index":1108,"title":{},"body":{"index.html":{}}}],["john.doe@example.com",{"_index":1111,"title":{},"body":{"index.html":{}}}],["johnathan",{"_index":1135,"title":{},"body":{"index.html":{}}}],["johnathan.doe@example.com",{"_index":1137,"title":{},"body":{"index.html":{}}}],["johnathandoe",{"_index":1136,"title":{},"body":{"index.html":{}}}],["johndoe",{"_index":1110,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":121,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["kind",{"_index":1224,"title":{},"body":{"license.html":{}}}],["learn",{"_index":1145,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lesson",{"_index":229,"title":{"classes/Lesson.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["lesson'})@apibody({type",{"_index":402,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["lesson'})@isstring()@isnotempty",{"_index":343,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.content",{"_index":736,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.courseid",{"_index":738,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.createdat",{"_index":739,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lesson.description",{"_index":735,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.dto",{"_index":843,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts",{"_index":340,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["lesson.dto.ts:10",{"_index":864,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:14",{"_index":345,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:15",{"_index":863,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:19",{"_index":344,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:20",{"_index":862,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:24",{"_index":348,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.dto.ts:25",{"_index":865,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["lesson.dto.ts:9",{"_index":346,"title":{},"body":{"classes/CreateLessonDto.html":{}}}],["lesson.id",{"_index":733,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lesson.name",{"_index":734,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson.role",{"_index":737,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonid",{"_index":839,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonraw",{"_index":729,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["lessonraw.content",{"_index":742,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.courseid",{"_index":744,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.createdat",{"_index":745,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.description",{"_index":741,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.id",{"_index":746,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["lessonraw.name",{"_index":740,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonraw.role",{"_index":743,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["lessonrepository",{"_index":353,"title":{"classes/LessonRepository.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["lessonrole",{"_index":347,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/UpdateLessonDto.html":{}}}],["lessons",{"_index":200,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["lessons'})@apiresponse({status",{"_index":554,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["lessons(lessons",{"_index":249,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["lessons.length",{"_index":574,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["lessons.map((lesson",{"_index":760,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["lessons/lessons.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["lessons?.map((lesson",{"_index":1264,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["lessonschema",{"_index":630,"title":{"interfaces/LessonSchema.html":{}},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"coverage.html":{}}}],["lessonsmodule",{"_index":15,"title":{"modules/LessonsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonsModule.html":{},"modules.html":{},"overview.html":{}}}],["lessonupdate",{"_index":849,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.content",{"_index":856,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.description",{"_index":855,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.name",{"_index":854,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lessonupdate.role",{"_index":857,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["lesson})@apiresponse({status",{"_index":403,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["liability",{"_index":1239,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1236,"title":{},"body":{"license.html":{}}}],["license",{"_index":1002,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1104,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1201,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1226,"title":{},"body":{"license.html":{}}}],["line",{"_index":1096,"title":{},"body":{"index.html":{}}}],["link'].includes(role",{"_index":384,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["list",{"_index":527,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"index.html":{}}}],["lists",{"_index":1120,"title":{},"body":{"index.html":{}}}],["lição",{"_index":417,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["lms",{"_index":1015,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1004,"title":{},"body":{"index.html":{}}}],["logged",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["login'})@apibody({type",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginauthdto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginauthdto",{"_index":82,"title":{"classes/LoginAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["loginauthdto})@apiresponse({status",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":1140,"title":{},"body":{"index.html":{}}}],["loops",{"_index":1172,"title":{},"body":{"index.html":{}}}],["machine",{"_index":1031,"title":{},"body":{"index.html":{}}}],["make",{"_index":1075,"title":{},"body":{"index.html":{}}}],["managing",{"_index":991,"title":{},"body":{"index.html":{}}}],["mappers/prisma.course.mapper",{"_index":710,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["mappers/prisma.lesson.mapper",{"_index":712,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["mappers/prisma.user.mapper",{"_index":801,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["master",{"_index":1009,"title":{},"body":{"index.html":{}}}],["matching",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["merchantability",{"_index":1228,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1204,"title":{},"body":{"license.html":{}}}],["message",{"_index":1131,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["middlewareconsumer",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":1041,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":998,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":980,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1103,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":1203,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["name(name",{"_index":245,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["navigate",{"_index":1012,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1023,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1102,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoursesModule.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"modules/LessonsModule.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":881,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCourseDto.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"classes/LoginAuthDto.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"controllers/UpdateLessonByIdController.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{},"index.html":{}}}],["newsecurepassword123",{"_index":1138,"title":{},"body":{"index.html":{}}}],["next",{"_index":125,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["noninfringement",{"_index":1232,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":359,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('course",{"_index":371,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('courses",{"_index":551,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["notfoundexception('lesson",{"_index":612,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["notfoundexception('lessons",{"_index":575,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["notice",{"_index":1218,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1018,"title":{},"body":{"index.html":{}}}],["null",{"_index":724,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["number",{"_index":264,"title":{},"body":{"classes/CourseRepository.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"index.html":{}}}],["number'})@apiquery({name",{"_index":532,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["o",{"_index":424,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["object.values(userrole).includes(role",{"_index":464,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["obtaining",{"_index":1192,"title":{},"body":{"license.html":{}}}],["online",{"_index":985,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":766,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1093,"title":{},"body":{"index.html":{}}}],["optional",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["origin",{"_index":1092,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1244,"title":{},"body":{"license.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1251,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1038,"title":{},"body":{"index.html":{}}}],["package",{"_index":956,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":530,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["page'})@apiquery({name",{"_index":563,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["param",{"_index":405,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["param('courseid",{"_index":409,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["param('id",{"_index":492,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["part",{"_index":853,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["partialtype",{"_index":828,"title":{},"body":{"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcoursedto",{"_index":823,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["partialtype(createlessondto",{"_index":860,"title":{},"body":{"classes/UpdateLessonDto.html":{}}}],["partialtype(createuserdto",{"_index":876,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1230,"title":{},"body":{"license.html":{}}}],["passing",{"_index":1101,"title":{},"body":{"index.html":{}}}],["password",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["password(password",{"_index":922,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["patch",{"_index":817,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["patch(':id",{"_index":820,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":813,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["patch()@apioperation({summary",{"_index":869,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":141,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["payload.role",{"_index":147,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["payload.sub",{"_index":145,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["pdf",{"_index":377,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["per",{"_index":534,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["permission",{"_index":1186,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1211,"title":{},"body":{"license.html":{}}}],["person",{"_index":1191,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1212,"title":{},"body":{"license.html":{}}}],["please",{"_index":466,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"index.html":{}}}],["portions",{"_index":1222,"title":{},"body":{"license.html":{}}}],["post",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"index.html":{}}}],["post()@apioperation({summary",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{}}}],["pptx",{"_index":380,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["prisma",{"_index":703,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["prisma.service",{"_index":709,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["prisma/client",{"_index":349,"title":{},"body":{"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"classes/UpdateLessonDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":483,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.course.repository",{"_index":485,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.lesson.repository",{"_index":486,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prisma/repository/prisma.user.repository",{"_index":484,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prismaclient",{"_index":765,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismacoursemapper",{"_index":679,"title":{"classes/PrismaCourseMapper.html":{}},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"coverage.html":{}}}],["prismacoursemapper.todomain(courseraw",{"_index":721,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["prismacoursemapper.toprisma(course",{"_index":713,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["prismacourserepository",{"_index":315,"title":{"injectables/PrismaCourseRepository.html":{}},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["prismalessonmapper",{"_index":711,"title":{"classes/PrismaLessonMapper.html":{}},"body":{"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"coverage.html":{}}}],["prismalessonmapper.todomain(lesson",{"_index":758,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["prismalessonmapper.toprisma(lesson",{"_index":755,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["prismalessonrepository",{"_index":361,"title":{"injectables/PrismaLessonRepository.html":{}},"body":{"injectables/CreateLessonUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice",{"_index":481,"title":{"injectables/PrismaService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismausermapper",{"_index":769,"title":{"classes/PrismaUserMapper.html":{}},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["prismausermapper.todomain(user",{"_index":805,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismausermapper.toprisma(user",{"_index":802,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismauserrepository",{"_index":167,"title":{"injectables/PrismaUserRepository.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["process.env.jwt_secret",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["professor",{"_index":469,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"index.html":{}}}],["program",{"_index":1156,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1144,"title":{},"body":{"index.html":{}}}],["programming.jpg",{"_index":1177,"title":{},"body":{"index.html":{}}}],["project",{"_index":990,"title":{},"body":{"index.html":{}}}],["project's",{"_index":1097,"title":{},"body":{"index.html":{}}}],["promise",{"_index":260,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":193,"title":{"properties.html":{}},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"properties.html":{}}}],["props",{"_index":195,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["props.createdat",{"_index":916,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["provide",{"_index":467,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["provided",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{},"license.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["publish",{"_index":1205,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1094,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1231,"title":{},"body":{"license.html":{}}}],["push",{"_index":1091,"title":{},"body":{"index.html":{}}}],["put",{"_index":1071,"title":{},"body":{"index.html":{}}}],["python",{"_index":1153,"title":{},"body":{"index.html":{}}}],["python.jpg",{"_index":1165,"title":{},"body":{"index.html":{}}}],["query",{"_index":537,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"index.html":{}}}],["query('page",{"_index":540,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["query('size",{"_index":541,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["randomuuid",{"_index":231,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["readonly",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["registration",{"_index":986,"title":{},"body":{"index.html":{}}}],["replace",{"_index":202,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":1008,"title":{},"body":{"index.html":{}}}],["repository/course.repository",{"_index":317,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["repository/lesson.repository",{"_index":360,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["repository/user.repository",{"_index":518,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["req",{"_index":127,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["req.body",{"_index":416,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["req.headers",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req['user",{"_index":143,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CreateLessonsController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["req['user'].id",{"_index":621,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["req['user'].role",{"_index":428,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/UpdateLessonByIdController.html":{}}}],["request",{"_index":401,"title":{},"body":{"controllers/CreateLessonsController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["requestmethod",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"classes/LoginAuthDto.html":{}}}],["res",{"_index":124,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":1113,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1199,"title":{},"body":{"license.html":{}}}],["result",{"_index":335,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/PrismaCourseRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["result.map(viewmodellesson.tohttp",{"_index":568,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["results",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["retrieved",{"_index":539,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["retrieved.'})@apiresponse({status",{"_index":528,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{}}}],["return",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"interfaces/CourseSchema.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["returns",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["rights",{"_index":1202,"title":{},"body":{"license.html":{}}}],["role",{"_index":146,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{},"classes/viewModelLesson.html":{}}}],["role(role",{"_index":655,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["roleuser",{"_index":427,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["route",{"_index":1105,"title":{},"body":{"index.html":{}}}],["run",{"_index":1003,"title":{},"body":{"index.html":{}}}],["running",{"_index":995,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["secret",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["securepassword123",{"_index":1112,"title":{},"body":{"index.html":{}}}],["see",{"_index":591,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["seed",{"_index":1043,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":999,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1209,"title":{},"body":{"license.html":{}}}],["server",{"_index":561,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["set",{"_index":244,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{}}}],["setbanner(banner",{"_index":220,"title":{},"body":{"classes/Course.html":{}}}],["setcontent(content",{"_index":639,"title":{},"body":{"classes/Lesson.html":{}}}],["setcourseid(courseid",{"_index":647,"title":{},"body":{"classes/Lesson.html":{}}}],["setdescription(description",{"_index":216,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["setemail(email",{"_index":907,"title":{},"body":{"classes/User.html":{}}}],["setlessons(lessons",{"_index":228,"title":{},"body":{"classes/Course.html":{}}}],["setname(name",{"_index":212,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["setpassword(password",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["setrole(role",{"_index":643,"title":{},"body":{"classes/Lesson.html":{},"classes/User.html":{}}}],["setusername(username",{"_index":903,"title":{},"body":{"classes/User.html":{}}}],["shall",{"_index":1219,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["simple",{"_index":1157,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":1051,"title":{},"body":{"index.html":{}}}],["simulating",{"_index":1046,"title":{},"body":{"index.html":{}}}],["size",{"_index":523,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"index.html":{}}}],["skip",{"_index":267,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["smith",{"_index":1124,"title":{},"body":{"index.html":{}}}],["software",{"_index":1194,"title":{},"body":{"license.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"modules/CoursesModule.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"modules/LessonsModule.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["specific",{"_index":1068,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../replace.ts",{"_index":1260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:32",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:22",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.middleware.ts",{"_index":117,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:11",{"_index":126,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.middleware.ts:9",{"_index":122,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":673,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":74,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/courses/controller/create.controller.ts",{"_index":323,"title":{},"body":{"controllers/CreateCoursesController.html":{},"coverage.html":{}}}],["src/courses/controller/create.controller.ts:19",{"_index":329,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["src/courses/controller/delete.controller.ts",{"_index":487,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/delete.controller.ts:11",{"_index":490,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{}}}],["src/courses/controller/findall.controller.ts",{"_index":521,"title":{},"body":{"controllers/FindAllCoursesController.html":{},"coverage.html":{}}}],["src/courses/controller/findall.controller.ts:33",{"_index":535,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["src/courses/controller/findbyid.controller",{"_index":292,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/controller/findbyid.controller.ts",{"_index":593,"title":{},"body":{"controllers/FindCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/findbyid.controller.ts:21",{"_index":596,"title":{},"body":{"controllers/FindCourseByIdController.html":{}}}],["src/courses/controller/update.controller.ts",{"_index":810,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"coverage.html":{}}}],["src/courses/controller/update.controller.ts:22",{"_index":816,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{}}}],["src/courses/courses.module.ts",{"_index":282,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/dto/create",{"_index":299,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/courses/dto/update",{"_index":822,"title":{},"body":{"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["src/courses/entities/course.entity",{"_index":689,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{}}}],["src/courses/entities/course.entity.ts",{"_index":192,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"coverage.html":{}}}],["src/courses/entities/course.entity.ts:15",{"_index":207,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:16",{"_index":204,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:27",{"_index":209,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:31",{"_index":211,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:35",{"_index":215,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:39",{"_index":219,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:43",{"_index":223,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:47",{"_index":225,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:51",{"_index":213,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:55",{"_index":217,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:59",{"_index":221,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:63",{"_index":227,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/entities/course.entity.ts:67",{"_index":230,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/repository/course.repository",{"_index":364,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/courses/repository/course.repository.ts",{"_index":251,"title":{},"body":{"classes/CourseRepository.html":{},"coverage.html":{}}}],["src/courses/repository/course.repository.ts:4",{"_index":259,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:5",{"_index":266,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:6",{"_index":269,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:7",{"_index":262,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/repository/course.repository.ts:8",{"_index":271,"title":{},"body":{"classes/CourseRepository.html":{}}}],["src/courses/usecase/create.usecase.ts",{"_index":309,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/create.usecase.ts:13",{"_index":314,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["src/courses/usecase/create.usecase.ts:7",{"_index":312,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["src/courses/usecase/delete.usecase.ts",{"_index":494,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/delete.usecase.ts:11",{"_index":495,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["src/courses/usecase/delete.usecase.ts:16",{"_index":497,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["src/courses/usecase/findall.usecase.ts",{"_index":544,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/findall.usecase.ts:12",{"_index":547,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["src/courses/usecase/findall.usecase.ts:7",{"_index":545,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["src/courses/usecase/findbyid.usecase.ts",{"_index":600,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/findbyid.usecase.ts:12",{"_index":602,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{}}}],["src/courses/usecase/findbyid.usecase.ts:7",{"_index":601,"title":{},"body":{"injectables/FindCourseByIdUseCase.html":{}}}],["src/courses/usecase/update.usecase.ts",{"_index":830,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{},"coverage.html":{}}}],["src/courses/usecase/update.usecase.ts:14",{"_index":831,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["src/courses/usecase/update.usecase.ts:19",{"_index":832,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["src/courses/viewmodelcourse.ts",{"_index":948,"title":{},"body":{"coverage.html":{},"classes/viewModelCourse.html":{}}}],["src/courses/viewmodelcourse.ts:5",{"_index":1262,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["src/database/database.module",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["src/database/database.module.ts",{"_index":482,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts",{"_index":680,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts:15",{"_index":686,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["src/database/prisma/mappers/prisma.course.mapper.ts:4",{"_index":688,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts",{"_index":727,"title":{},"body":{"classes/PrismaLessonMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts:17",{"_index":730,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["src/database/prisma/mappers/prisma.lesson.mapper.ts:4",{"_index":732,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts",{"_index":770,"title":{},"body":{"classes/PrismaUserMapper.html":{},"coverage.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts:18",{"_index":773,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/database/prisma/mappers/prisma.user.mapper.ts:5",{"_index":775,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/database/prisma/prisma.service.ts",{"_index":763,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/database/prisma/prisma.service.ts:6",{"_index":767,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/database/prisma/repository/prisma.course.repository",{"_index":316,"title":{},"body":{"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts",{"_index":700,"title":{},"body":{"injectables/PrismaCourseRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:12",{"_index":704,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:19",{"_index":706,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:38",{"_index":707,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:59",{"_index":705,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:67",{"_index":708,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.course.repository.ts:9",{"_index":702,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository",{"_index":362,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts",{"_index":747,"title":{},"body":{"injectables/PrismaLessonRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:10",{"_index":749,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:17",{"_index":752,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:26",{"_index":751,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:41",{"_index":750,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:49",{"_index":753,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.lesson.repository.ts:7",{"_index":748,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts",{"_index":785,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:11",{"_index":790,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:19",{"_index":794,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:31",{"_index":797,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:43",{"_index":792,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:48",{"_index":795,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:60",{"_index":791,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:68",{"_index":799,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/database/prisma/repository/prisma.user.repository.ts:8",{"_index":788,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/lessons/controller/create.controller.ts",{"_index":398,"title":{},"body":{"controllers/CreateLessonsController.html":{},"coverage.html":{}}}],["src/lessons/controller/create.controller.ts:19",{"_index":404,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["src/lessons/controller/delete.controller.ts",{"_index":504,"title":{},"body":{"controllers/DeleteLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/delete.controller.ts:10",{"_index":505,"title":{},"body":{"controllers/DeleteLessonByIdController.html":{}}}],["src/lessons/controller/findallbycourse.controller.ts",{"_index":553,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"coverage.html":{}}}],["src/lessons/controller/findallbycourse.controller.ts:29",{"_index":564,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["src/lessons/controller/findbyid.controller.ts",{"_index":604,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/findbyid.controller.ts:23",{"_index":605,"title":{},"body":{"controllers/FindLessonByIdController.html":{}}}],["src/lessons/controller/update.controller.ts",{"_index":838,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{},"coverage.html":{}}}],["src/lessons/controller/update.controller.ts:18",{"_index":842,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["src/lessons/dto/create",{"_index":339,"title":{},"body":{"classes/CreateLessonDto.html":{},"coverage.html":{}}}],["src/lessons/dto/update",{"_index":859,"title":{},"body":{"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["src/lessons/entities/lesson.entity",{"_index":233,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{}}}],["src/lessons/entities/lesson.entity.ts",{"_index":628,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"coverage.html":{}}}],["src/lessons/entities/lesson.entity.ts:15",{"_index":631,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:16",{"_index":629,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:24",{"_index":632,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:27",{"_index":633,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:30",{"_index":635,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:33",{"_index":638,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:36",{"_index":642,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:39",{"_index":646,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:42",{"_index":649,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:45",{"_index":650,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:48",{"_index":634,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:51",{"_index":636,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:54",{"_index":640,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:57",{"_index":644,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/entities/lesson.entity.ts:60",{"_index":648,"title":{},"body":{"classes/Lesson.html":{}}}],["src/lessons/lessons.module.ts",{"_index":670,"title":{},"body":{"modules/LessonsModule.html":{}}}],["src/lessons/repository/lesson.repository",{"_index":754,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts",{"_index":657,"title":{},"body":{"classes/LessonRepository.html":{},"coverage.html":{}}}],["src/lessons/repository/lesson.repository.ts:11",{"_index":661,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:12",{"_index":666,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:4",{"_index":660,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:5",{"_index":664,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/repository/lesson.repository.ts:6",{"_index":663,"title":{},"body":{"classes/LessonRepository.html":{}}}],["src/lessons/usecase/create.usecase.ts",{"_index":351,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/create.usecase.ts:15",{"_index":354,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["src/lessons/usecase/create.usecase.ts:22",{"_index":357,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["src/lessons/usecase/delete.usecase.ts",{"_index":507,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/delete.usecase.ts:12",{"_index":508,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["src/lessons/usecase/delete.usecase.ts:19",{"_index":509,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts",{"_index":569,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts:15",{"_index":572,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["src/lessons/usecase/findallbycourse.usecase.ts:9",{"_index":570,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts",{"_index":608,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts:15",{"_index":610,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["src/lessons/usecase/findbyid.usecase.ts:9",{"_index":609,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["src/lessons/usecase/update.usecase.ts",{"_index":847,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["src/lessons/usecase/update.usecase.ts:16",{"_index":848,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/lessons/usecase/update.usecase.ts:22",{"_index":850,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["src/lessons/viewmodellesson",{"_index":1263,"title":{},"body":{"classes/viewModelCourse.html":{}}}],["src/lessons/viewmodellesson.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"classes/viewModelLesson.html":{}}}],["src/lessons/viewmodellesson.ts:4",{"_index":1265,"title":{},"body":{"classes/viewModelLesson.html":{}}}],["src/main.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/controller/create.controller.ts",{"_index":432,"title":{},"body":{"controllers/CreateUserController.html":{},"coverage.html":{}}}],["src/user/controller/create.controller.ts:19",{"_index":437,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["src/user/controller/delete.controller.ts",{"_index":512,"title":{},"body":{"controllers/DeleteUserController.html":{},"coverage.html":{}}}],["src/user/controller/delete.controller.ts:11",{"_index":513,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["src/user/controller/findall.controller.ts",{"_index":577,"title":{},"body":{"controllers/FindAllUserController.html":{},"coverage.html":{}}}],["src/user/controller/findall.controller.ts:21",{"_index":581,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["src/user/controller/findbyid.controller.ts",{"_index":614,"title":{},"body":{"controllers/FindUserByIdController.html":{},"coverage.html":{}}}],["src/user/controller/findbyid.controller.ts:22",{"_index":616,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["src/user/controller/update.controller.ts",{"_index":867,"title":{},"body":{"controllers/UpdateUserController.html":{},"coverage.html":{}}}],["src/user/controller/update.controller.ts:22",{"_index":871,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["src/user/dto/create",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":875,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":776,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["src/user/entities/user.entity.ts",{"_index":894,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":897,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:17",{"_index":895,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":898,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:31",{"_index":899,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":902,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":906,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:47",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:51",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:55",{"_index":900,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:59",{"_index":904,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:63",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:67",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:71",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["src/user/repository/user.repository",{"_index":800,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/user/repository/user.repository.ts",{"_index":927,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/user/repository/user.repository.ts:10",{"_index":930,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:12",{"_index":932,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:14",{"_index":929,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:16",{"_index":934,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:4",{"_index":928,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:6",{"_index":931,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:8",{"_index":933,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/usecase/create.usecase.ts",{"_index":457,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/create.usecase.ts:22",{"_index":476,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/user/usecase/create.usecase.ts:27",{"_index":477,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/user/usecase/delete.usecase.ts",{"_index":515,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/delete.usecase.ts:11",{"_index":517,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/user/usecase/delete.usecase.ts:6",{"_index":516,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["src/user/usecase/findall.usecase.ts",{"_index":587,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/findall.usecase.ts:11",{"_index":590,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["src/user/usecase/findall.usecase.ts:6",{"_index":588,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["src/user/usecase/findbyid.usecase.ts",{"_index":623,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/findbyid.usecase.ts:12",{"_index":625,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{}}}],["src/user/usecase/findbyid.usecase.ts:7",{"_index":624,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{}}}],["src/user/usecase/update.usecase.ts",{"_index":883,"title":{},"body":{"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["src/user/usecase/update.usecase.ts:14",{"_index":885,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["src/user/usecase/update.usecase.ts:9",{"_index":884,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["src/user/user.module.ts",{"_index":926,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/viewmodeluser.ts",{"_index":935,"title":{},"body":{"classes/ViewModelUser.html":{},"coverage.html":{}}}],["src/user/viewmodeluser.ts:4",{"_index":938,"title":{},"body":{"classes/ViewModelUser.html":{}}}],["src/utils/replace",{"_index":234,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["src/utils/replace.ts",{"_index":1261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start:dev",{"_index":1030,"title":{},"body":{"index.html":{}}}],["started",{"_index":984,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":681,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["status",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["steps",{"_index":1006,"title":{},"body":{"index.html":{}}}],["string",{"_index":203,"title":{},"body":{"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{}}}],["student",{"_index":1052,"title":{},"body":{"index.html":{}}}],["students",{"_index":470,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"index.html":{}}}],["students'].includes(userrole",{"_index":367,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["style",{"_index":1098,"title":{},"body":{"index.html":{}}}],["sub",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1214,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1207,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1221,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"index.html":{}}}],["summary",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["superagent",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1248,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1249,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1061,"title":{},"body":{"index.html":{}}}],["system",{"_index":987,"title":{},"body":{"index.html":{}}}],["t",{"_index":1035,"title":{},"body":{"index.html":{}}}],["table",{"_index":955,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":265,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["teachers",{"_index":369,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{}}}],["test",{"_index":1063,"title":{},"body":{"index.html":{}}}],["text",{"_index":392,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"index.html":{}}}],["text'].includes(role",{"_index":389,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["texto",{"_index":419,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["this.$connect",{"_index":768,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._id",{"_index":238,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.authservice.login(loginauthdto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.courserepository.create(course",{"_index":322,"title":{},"body":{"injectables/CreateCourseUseCase.html":{}}}],["this.courserepository.delete(id",{"_index":502,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{}}}],["this.courserepository.findall(skip",{"_index":548,"title":{},"body":{"injectables/FindAllCoursesUseCase.html":{}}}],["this.courserepository.findbyid(courseid",{"_index":370,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.courserepository.findbyid(id",{"_index":501,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{}}}],["this.courserepository.update(course",{"_index":836,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["this.jwtservice.sign(payload",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":142,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.lessonrepository.create(lesson",{"_index":396,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["this.lessonrepository.delete(id",{"_index":510,"title":{},"body":{"injectables/DeleteLessonByIdUseCase.html":{}}}],["this.lessonrepository.findallbycourse",{"_index":573,"title":{},"body":{"injectables/FindAllLessonsByCourseUseCase.html":{}}}],["this.lessonrepository.findbyid(id",{"_index":611,"title":{},"body":{"injectables/FindLessonByIdUseCase.html":{}}}],["this.lessonrepository.findbyid(lessonid",{"_index":851,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.lessonrepository.update(lesson",{"_index":858,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["this.prisma.course.create",{"_index":714,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.delete",{"_index":725,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.findmany",{"_index":717,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.findunique",{"_index":723,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.course.update",{"_index":726,"title":{},"body":{"injectables/PrismaCourseRepository.html":{}}}],["this.prisma.lessons.create",{"_index":756,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.delete",{"_index":761,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.findmany",{"_index":759,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.findunique",{"_index":757,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.lessons.update",{"_index":762,"title":{},"body":{"injectables/PrismaLessonRepository.html":{}}}],["this.prisma.user.create",{"_index":803,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.delete",{"_index":808,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.findmany",{"_index":806,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.findunique",{"_index":804,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.update",{"_index":809,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.props",{"_index":237,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.banner",{"_index":241,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["this.props.content",{"_index":651,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.courseid",{"_index":653,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.createdat",{"_index":242,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.description",{"_index":240,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.email",{"_index":918,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.lessons",{"_index":248,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{}}}],["this.props.name",{"_index":239,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.password",{"_index":919,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.role",{"_index":652,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.props.updatedat",{"_index":243,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{}}}],["this.props.username",{"_index":917,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["this.usecase.execute",{"_index":846,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["this.usecase.execute(+page",{"_index":542,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["this.usecase.execute(course",{"_index":336,"title":{},"body":{"controllers/CreateCoursesController.html":{}}}],["this.usecase.execute(courseid",{"_index":567,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["this.usecase.execute(createuserdto",{"_index":444,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["this.usecase.execute(id",{"_index":493,"title":{},"body":{"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["this.usecase.execute(role",{"_index":585,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["this.usecase.execute(roleuser",{"_index":429,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["this.usecase.execute(userid",{"_index":622,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["this.userrepository.create(user",{"_index":474,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.delete(id",{"_index":520,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["this.userrepository.findall",{"_index":592,"title":{},"body":{"injectables/FindAllUsersUseCase.html":{}}}],["this.userrepository.findbyemail",{"_index":888,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["this.userrepository.findbyemail(email",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.findbyid(id",{"_index":627,"title":{},"body":{"injectables/FindUserByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["this.userrepository.findbyusername(username",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.update(user",{"_index":893,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["throw",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateCourseUseCase.html":{},"injectables/CreateLessonUseCase.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllCoursesUseCase.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindCourseByIdUseCase.html":{},"injectables/FindLessonByIdUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["today",{"_index":1076,"title":{},"body":{"index.html":{}}}],["todomain",{"_index":682,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["todomain(courseraw",{"_index":684,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["todomain(lessonraw",{"_index":728,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["todomain(userraw",{"_index":771,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["tohttp",{"_index":936,"title":{},"body":{"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["tohttp(undefined",{"_index":937,"title":{},"body":{"classes/ViewModelUser.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["token",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["toprisma",{"_index":683,"title":{},"body":{"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["toprisma(course",{"_index":687,"title":{},"body":{"classes/PrismaCourseMapper.html":{}}}],["toprisma(lesson",{"_index":731,"title":{},"body":{"classes/PrismaLessonMapper.html":{}}}],["toprisma(user",{"_index":774,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["tort",{"_index":1243,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1024,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":676,"title":{},"body":{"classes/LoginAuthDto.html":{},"injectables/PrismaCourseRepository.html":{}}}],["try",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["type",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Course.html":{},"classes/CourseRepository.html":{},"interfaces/CourseSchema.html":{},"classes/CreateCourseDto.html":{},"injectables/CreateCourseUseCase.html":{},"controllers/CreateCoursesController.html":{},"classes/CreateLessonDto.html":{},"injectables/CreateLessonUseCase.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteCourseByIdController.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"controllers/DeleteUserController.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"injectables/FindAllCoursesUseCase.html":{},"controllers/FindAllLessonsByCourseController.html":{},"injectables/FindAllLessonsByCourseUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"injectables/FindCourseByIdUseCase.html":{},"controllers/FindLessonByIdController.html":{},"injectables/FindLessonByIdUseCase.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/Lesson.html":{},"classes/LessonRepository.html":{},"interfaces/LessonSchema.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaCourseMapper.html":{},"injectables/PrismaCourseRepository.html":{},"classes/PrismaLessonMapper.html":{},"injectables/PrismaLessonRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["typealiases",{"_index":1258,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":882,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{},"index.html":{}}}],["types/faker",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["uma",{"_index":422,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["unauthorized",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["unauthorized.'})@apiquery({name",{"_index":529,"title":{},"body":{"controllers/FindAllCoursesController.html":{}}}],["unauthorized.'})@apiresponse({status",{"_index":556,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{}}}],["unauthorizedexception",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CreateLessonUseCase.html":{},"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/UpdateCourseUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["unauthorizedexception('invalid",{"_index":150,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception('lesson",{"_index":852,"title":{},"body":{"injectables/UpdateLessonByIdUseCase.html":{}}}],["unauthorizedexception('only",{"_index":498,"title":{},"body":{"injectables/DeleteCourseByIdUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{}}}],["unauthorizedexception('token",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception('user",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":356,"title":{},"body":{"injectables/CreateLessonUseCase.html":{}}}],["undefined})@apiresponse({status",{"_index":555,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{}}}],["understand",{"_index":1168,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["unlicensed",{"_index":1256,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1020,"title":{},"body":{"index.html":{}}}],["update",{"_index":257,"title":{},"body":{"classes/CourseRepository.html":{},"classes/LessonRepository.html":{},"injectables/PrismaCourseRepository.html":{},"injectables/PrismaLessonRepository.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"controllers/UpdateUserController.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["update(@req",{"_index":873,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["update(course",{"_index":270,"title":{},"body":{"classes/CourseRepository.html":{},"injectables/PrismaCourseRepository.html":{}}}],["update(lesson",{"_index":665,"title":{},"body":{"classes/LessonRepository.html":{},"injectables/PrismaLessonRepository.html":{}}}],["update(req",{"_index":811,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["update(user",{"_index":798,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["updatecoursebyidcontroller",{"_index":287,"title":{"controllers/UpdateCourseByIdController.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"coverage.html":{}}}],["updatecoursedto",{"_index":812,"title":{"classes/UpdateCourseDto.html":{}},"body":{"controllers/UpdateCourseByIdController.html":{},"classes/UpdateCourseDto.html":{},"injectables/UpdateCourseUseCase.html":{},"coverage.html":{}}}],["updatecoursedto.banner",{"_index":835,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecoursedto.description",{"_index":834,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecoursedto.name",{"_index":833,"title":{},"body":{"injectables/UpdateCourseUseCase.html":{}}}],["updatecourseusecase",{"_index":281,"title":{"injectables/UpdateCourseUseCase.html":{}},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"injectables/UpdateCourseUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updated",{"_index":821,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["updated.'})@apiresponse({status",{"_index":815,"title":{},"body":{"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["updatedat",{"_index":199,"title":{},"body":{"classes/Course.html":{},"interfaces/CourseSchema.html":{},"classes/Lesson.html":{},"interfaces/LessonSchema.html":{},"classes/PrismaCourseMapper.html":{},"classes/PrismaLessonMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{},"index.html":{},"classes/viewModelCourse.html":{}}}],["updatedlesson",{"_index":845,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["updatelessonbyidcontroller",{"_index":837,"title":{"controllers/UpdateLessonByIdController.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"coverage.html":{}}}],["updatelessonbyidusecase",{"_index":844,"title":{"injectables/UpdateLessonByIdUseCase.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"coverage.html":{}}}],["updatelessondto",{"_index":840,"title":{"classes/UpdateLessonDto.html":{}},"body":{"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/UpdateLessonDto.html":{},"coverage.html":{}}}],["updatelessondto})@apiresponse({status",{"_index":841,"title":{},"body":{"controllers/UpdateLessonByIdController.html":{}}}],["updates",{"_index":1134,"title":{},"body":{"index.html":{}}}],["updateusercontroller",{"_index":866,"title":{"controllers/UpdateUserController.html":{}},"body":{"controllers/UpdateUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":868,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["updateuserdto.email",{"_index":887,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserdto.name",{"_index":886,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserdto.password",{"_index":891,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["updateuserusecase",{"_index":872,"title":{"injectables/UpdateUserUseCase.html":{}},"body":{"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":388,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["urlregex",{"_index":385,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["urlregex.test(content",{"_index":387,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["use",{"_index":118,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{},"license.html":{}}}],["use(req",{"_index":123,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["usecase",{"_index":333,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{}}}],["usecase/create.usecase",{"_index":289,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/CreateCoursesController.html":{},"controllers/CreateLessonsController.html":{},"controllers/CreateUserController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/delete.usecase",{"_index":295,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/DeleteCourseByIdController.html":{},"controllers/DeleteLessonByIdController.html":{},"controllers/DeleteUserController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/findall.usecase",{"_index":291,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllUserController.html":{},"modules/UserModule.html":{}}}],["usecase/findallbycourse.usecase",{"_index":566,"title":{},"body":{"controllers/FindAllLessonsByCourseController.html":{},"modules/LessonsModule.html":{}}}],["usecase/findbyid.usecase",{"_index":293,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/FindCourseByIdController.html":{},"controllers/FindLessonByIdController.html":{},"controllers/FindUserByIdController.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{}}}],["usecase/update.usecase",{"_index":296,"title":{},"body":{"modules/CoursesModule.html":{},"controllers/UpdateCourseByIdController.html":{},"controllers/UpdateLessonByIdController.html":{},"controllers/UpdateUserController.html":{},"modules/UserModule.html":{}}}],["user",{"_index":67,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"injectables/FindUserByIdUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"controllers/UpdateUserController.html":{},"injectables/UpdateUserUseCase.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"coverage.html":{},"index.html":{}}}],["user'})@apibody({type",{"_index":435,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["user'})@apiresponse({status",{"_index":870,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["user'})@isemail()@isstring()@isnotempty",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isstring()@isnotempty",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.createdat",{"_index":777,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["user.dto",{"_index":439,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/UpdateUserController.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.dto.ts",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":880,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":454,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":878,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":452,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":453,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":879,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":451,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.id",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user.name",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.role",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user.username",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaUserMapper.html":{}}}],["user/:id",{"_index":1067,"title":{},"body":{"index.html":{}}}],["user/all",{"_index":1066,"title":{},"body":{"index.html":{}}}],["user/entities/user.entity",{"_index":459,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["user/repository/user.repository",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["user/user.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["user['role",{"_index":473,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["useralreadyexist",{"_index":461,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["useralreadyexist.id",{"_index":889,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["userid",{"_index":620,"title":{},"body":{"controllers/FindUserByIdController.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"classes/LoginAuthDto.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/UserSchema.html":{},"classes/ViewModelUser.html":{},"index.html":{}}}],["username(username",{"_index":920,"title":{},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["userraw",{"_index":772,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["userraw.createdat",{"_index":783,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.email",{"_index":780,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.id",{"_index":784,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["userraw.name",{"_index":778,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.password",{"_index":781,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.role",{"_index":782,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.username",{"_index":779,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userrepository",{"_index":159,"title":{"classes/UserRepository.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/FindUserByIdUseCase.html":{},"injectables/PrismaUserRepository.html":{},"injectables/UpdateUserUseCase.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["userrole",{"_index":358,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"classes/CreateUserDto.html":{},"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/DeleteLessonByIdController.html":{},"injectables/DeleteLessonByIdUseCase.html":{},"classes/PrismaUserMapper.html":{},"controllers/UpdateLessonByIdController.html":{},"injectables/UpdateLessonByIdUseCase.html":{},"classes/User.html":{},"interfaces/UserSchema.html":{}}}],["users",{"_index":519,"title":{},"body":{"injectables/DeleteUserUseCase.html":{},"controllers/FindAllUserController.html":{},"injectables/FindAllUsersUseCase.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["users'})@apiresponse({status",{"_index":580,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["users.map(prismausermapper.todomain",{"_index":807,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["users.map(viewmodeluser.tohttp",{"_index":586,"title":{},"body":{"controllers/FindAllUserController.html":{}}}],["userschema",{"_index":896,"title":{"interfaces/UserSchema.html":{}},"body":{"classes/User.html":{},"interfaces/UserSchema.html":{},"coverage.html":{}}}],["using",{"_index":1017,"title":{},"body":{"index.html":{}}}],["valid",{"_index":468,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{}}}],["validator",{"_index":308,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/CreateLessonDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateLessonDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":465,"title":{},"body":{"interfaces/CreateUserRequest.html":{},"injectables/CreateUserUseCase.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindAllLessonsByCourseController.html":{}}}],["variables",{"_index":1022,"title":{},"body":{"index.html":{}}}],["version",{"_index":1254,"title":{},"body":{"properties.html":{}}}],["viewmodelcourse",{"_index":330,"title":{"classes/viewModelCourse.html":{}},"body":{"controllers/CreateCoursesController.html":{},"controllers/FindAllCoursesController.html":{},"controllers/FindCourseByIdController.html":{},"controllers/UpdateCourseByIdController.html":{},"coverage.html":{},"classes/viewModelCourse.html":{}}}],["viewmodelcourse.tohttp(course",{"_index":599,"title":{},"body":{"controllers/FindCourseByIdController.html":{}}}],["viewmodelcourse.tohttp(result",{"_index":337,"title":{},"body":{"controllers/CreateCoursesController.html":{},"controllers/UpdateCourseByIdController.html":{}}}],["viewmodellesson",{"_index":406,"title":{"classes/viewModelLesson.html":{}},"body":{"controllers/CreateLessonsController.html":{},"controllers/FindAllLessonsByCourseController.html":{},"controllers/FindLessonByIdController.html":{},"coverage.html":{},"classes/viewModelCourse.html":{},"classes/viewModelLesson.html":{}}}],["viewmodellesson.tohttp(lesson",{"_index":607,"title":{},"body":{"controllers/FindLessonByIdController.html":{},"classes/viewModelCourse.html":{}}}],["viewmodellesson.tohttp(result",{"_index":430,"title":{},"body":{"controllers/CreateLessonsController.html":{}}}],["viewmodeluser",{"_index":441,"title":{"classes/ViewModelUser.html":{}},"body":{"controllers/CreateUserController.html":{},"controllers/FindAllUserController.html":{},"controllers/FindUserByIdController.html":{},"controllers/UpdateUserController.html":{},"classes/ViewModelUser.html":{},"coverage.html":{}}}],["viewmodeluser.tohttp(result",{"_index":874,"title":{},"body":{"controllers/UpdateUserController.html":{}}}],["viewmodeluser.tohttp(user",{"_index":445,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/FindUserByIdController.html":{}}}],["visit",{"_index":1059,"title":{},"body":{"index.html":{}}}],["void",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["warranties",{"_index":1227,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1223,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1240,"title":{},"body":{"license.html":{}}}],["without",{"_index":1198,"title":{},"body":{"license.html":{}}}],["write",{"_index":1154,"title":{},"body":{"index.html":{}}}],["xlsx",{"_index":378,"title":{},"body":{"injectables/CreateLessonUseCase.html":{},"injectables/UpdateLessonByIdUseCase.html":{}}}],["yarn",{"_index":1019,"title":{},"body":{"index.html":{}}}],["yes",{"_index":205,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/User.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/LessonsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nLessonsModule\n\nLessonsModule\n\nAppModule -->\n\nLessonsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            LessonsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { DatabaseModule } from './database/database.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthMiddleware } from './auth/auth.middleware';\nimport { JwtModule } from '@nestjs/jwt';\nimport { CoursesModule } from './courses/courses.module';\nimport { LessonsModule } from './lessons/lessons.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    UserModule,\n    AuthModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '6h' },\n    }),\n    CoursesModule,\n    LessonsModule,\n  ],\n  controllers: [],\n  providers: [],\n  exports: [JwtModule],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .exclude(\n        { path: 'auth', method: RequestMethod.POST },\n        { path: 'user', method: RequestMethod.POST },\n        { path: 'documentation', method: RequestMethod.GET },\n      )\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'User login'})@ApiBody({type: LoginAuthDto})@ApiResponse({status: 200, description: 'The user has been successfully logged in.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'User login' })\n  @ApiBody({ type: LoginAuthDto })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully logged in.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  login(@Body() loginAuthDto: LoginAuthDto) {\n    return this.authService.login(loginAuthDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.middleware.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.middleware.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private jwtService: JwtService) {}\n  use(req: any, res: any, next: () => void) {\n    const { authorization } = req.headers;\n    const token = authorization?.replace('Bearer ', '');\n    if (!token) {\n      throw new UnauthorizedException('Token not provided');\n    }\n    try {\n      const payload = this.jwtService.verify(token);\n      req['user'] = {\n        id: payload.sub,\n        role: payload.role,\n      };\n\n      next();\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { DatabaseModule } from 'src/database/database.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '6h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserRepository } from '../user/repository/user.repository';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async login(loginAuthDto: LoginAuthDto) {\n    const { email, username, password } = loginAuthDto;\n\n    if (!email && !username) {\n      throw new BadRequestException('Email or Username is required');\n    }\n\n    const user = username\n      ? await this.userRepository.findByUsername(username)\n      : await this.userRepository.findByEmail(email);\n    if (!user) {\n      throw new UnauthorizedException('User or Password is invalid');\n    }\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('User or Password is invalid');\n    }\n\n    const payload = { user: email, sub: user.id, role: user.role };\n    const token = this.jwtService.sign(payload);\n\n    return {\n      user: {\n        id: user.id,\n        name: user.name,\n        username: user.username,\n        email: user.email,\n      },\n      token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/entities/course.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    banner\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                                \n                                    lessons\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/courses/entities/course.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/entities/course.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/entities/course.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:31\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:35\n                                \n                            \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        banner\n                    \n                \n\n                \n                    \n                        getbanner()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setbanner(banner: string)\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            banner\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lessons\n                    \n                \n\n                \n                    \n                        getlessons()\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:63\n                                \n                            \n\n                \n                    \n                        setlessons(lessons: Lesson[])\n                    \n                \n                            \n                                \n                                    Defined in src/courses/entities/course.entity.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            lessons\n                                                    \n                                                            \n                                                                            Lesson[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Replace } from 'src/utils/replace';\n\ninterface CourseSchema {\n  name: string;\n  description: string;\n  banner: string;\n  createdAt: Date;\n  updatedAt?: Date;\n  lessons?: Lesson[];\n}\n\nexport class Course {\n  private props: CourseSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get description() {\n    return this.props.description;\n  }\n\n  get banner() {\n    return this.props.banner;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set description(description: string) {\n    this.props.description = description;\n  }\n\n  set banner(banner: string) {\n    this.props.banner = banner;\n  }\n\n  get lessons() {\n    return this.props.lessons;\n  }\n\n  set lessons(lessons: Lesson[]) {\n    this.props.lessons = lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseRepository.html":{"url":"classes/CourseRepository.html","title":"class - CourseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/repository/course.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/repository/course.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '../entities/course.entity';\n\nexport abstract class CourseRepository {\n  abstract create(course: Course): Promise;\n  abstract findAll(skip: number, take: number): Promise;\n  abstract findById(id: string): Promise;\n  abstract delete(id: string): Promise;\n  abstract update(course: Course): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseSchema.html":{"url":"interfaces/CourseSchema.html","title":"interface - CourseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CourseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/entities/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            banner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lessons\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        banner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lessons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lessons:         Lesson[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Replace } from 'src/utils/replace';\n\ninterface CourseSchema {\n  name: string;\n  description: string;\n  banner: string;\n  createdAt: Date;\n  updatedAt?: Date;\n  lessons?: Lesson[];\n}\n\nexport class Course {\n  private props: CourseSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get description() {\n    return this.props.description;\n  }\n\n  get banner() {\n    return this.props.banner;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set description(description: string) {\n    this.props.description = description;\n  }\n\n  set banner(banner: string) {\n    this.props.banner = banner;\n  }\n\n  get lessons() {\n    return this.props.lessons;\n  }\n\n  set lessons(lessons: Lesson[]) {\n    this.props.lessons = lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_imports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nDatabaseModule->CoursesModule\n\n\n\n\n\nCreateCourseUseCase\n\nCreateCourseUseCase\n\nCoursesModule -->\n\nCreateCourseUseCase->CoursesModule\n\n\n\n\n\nDeleteCourseByIdUseCase\n\nDeleteCourseByIdUseCase\n\nCoursesModule -->\n\nDeleteCourseByIdUseCase->CoursesModule\n\n\n\n\n\nFindAllCoursesUseCase\n\nFindAllCoursesUseCase\n\nCoursesModule -->\n\nFindAllCoursesUseCase->CoursesModule\n\n\n\n\n\nFindCourseByIdUseCase\n\nFindCourseByIdUseCase\n\nCoursesModule -->\n\nFindCourseByIdUseCase->CoursesModule\n\n\n\n\n\nUpdateCourseUseCase\n\nUpdateCourseUseCase\n\nCoursesModule -->\n\nUpdateCourseUseCase->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateCourseUseCase\n                        \n                        \n                            DeleteCourseByIdUseCase\n                        \n                        \n                            FindAllCoursesUseCase\n                        \n                        \n                            FindCourseByIdUseCase\n                        \n                        \n                            UpdateCourseUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateCoursesController\n                        \n                        \n                            FindAllCoursesController\n                        \n                        \n                            FindCourseByIdController\n                        \n                        \n                            DeleteCourseByIdController\n                        \n                        \n                            UpdateCourseByIdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateCoursesController } from './controller/create.controller';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { CreateCourseUseCase } from './useCase/create.useCase';\nimport { FindAllCoursesController } from './controller/findAll.controller';\nimport { FindAllCoursesUseCase } from './useCase/findAll.useCase';\nimport { FindCourseByIdController } from 'src/courses/controller/findById.controller';\nimport { FindCourseByIdUseCase } from './useCase/findById.useCase';\nimport { DeleteCourseByIdController } from './controller/delete.controller';\nimport { DeleteCourseByIdUseCase } from './useCase/delete.useCase';\nimport { UpdateCourseUseCase } from './useCase/update.useCase';\nimport { UpdateCourseByIdController } from './controller/update.controller';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateCoursesController,\n    FindAllCoursesController,\n    FindCourseByIdController,\n    DeleteCourseByIdController,\n    UpdateCourseByIdController,\n  ],\n  providers: [\n    CreateCourseUseCase,\n    FindAllCoursesUseCase,\n    FindCourseByIdUseCase,\n    DeleteCourseByIdUseCase,\n    UpdateCourseUseCase,\n  ],\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/create-course.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                banner\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course banner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateCourseDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course name' })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course description' })\n  description: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ description: 'Course banner' })\n  banner: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCourseUseCase.html":{"url":"injectables/CreateCourseUseCase.html","title":"injectable - CreateCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/create.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/create.useCase.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { Course } from '../entities/course.entity';\nimport { CourseRepository } from '../repository/course.repository';\n\n@Injectable()\nexport class CreateCourseUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository)\n    private courseRepository: CourseRepository,\n  ) {}\n\n  async execute({ name, description, banner }): Promise {\n    if (!name) {\n      throw new BadRequestException('Name is required');\n    }\n\n    if (!description) {\n      throw new BadRequestException('Description is required');\n    }\n\n    if (!banner) {\n      throw new BadRequestException('Banner is required');\n    }\n\n    const course = new Course({\n      name,\n      description,\n      banner,\n    });\n    await this.courseRepository.create(course);\n\n    return course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateCoursesController.html":{"url":"controllers/CreateCoursesController.html","title":"controller - CreateCoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateCoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new course'})@ApiBody({type: Course})@ApiResponse({status: 201, description: 'The course has been successfully created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/create.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateCourseUseCase } from '../useCase/create.useCase';\nimport { Course } from '../entities/course.entity';\nimport { viewModelCourse } from '../viewModelCourse';\n\n@ApiTags('courses')\n@Controller('courses')\nexport class CreateCoursesController {\n  constructor(private useCase: CreateCourseUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new course' })\n  @ApiBody({ type: Course })\n  @ApiResponse({\n    status: 201,\n    description: 'The course has been successfully created.',\n  })\n  async create(@Body() course: Course) {\n    const result = await this.useCase.execute(course);\n    return viewModelCourse.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLessonDto.html":{"url":"classes/CreateLessonDto.html","title":"class - CreateLessonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLessonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/dto/create-lesson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The content of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The role of the lesson'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/create-lesson.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LessonRole } from '@prisma/client';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateLessonDto {\n  @ApiProperty({ description: 'The name of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ description: 'The description of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({ description: 'The content of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  content: string;\n\n  @ApiProperty({ description: 'The role of the lesson' })\n  @IsString()\n  @IsNotEmpty()\n  role: LessonRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateLessonUseCase.html":{"url":"injectables/CreateLessonUseCase.html","title":"injectable - CreateLessonUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateLessonUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/create.useCase.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(userRole: string, undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/create.useCase.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class CreateLessonUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository)\n    private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    userRole: string,\n    { name, description, content, role, courseId },\n  ): Promise {\n    if (!name || !description || !content)\n      throw new BadRequestException(\n        'Name, description and content are required',\n      );\n\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can create lessons',\n      );\n    }\n\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n\n    if (['FILE'].includes(role)) {\n      const fileExtension = content.split('.').pop().toLowerCase();\n      const allowedExtensions = ['pdf', 'xlsx', 'docx', 'pptx'];\n      if (!allowedExtensions.includes(fileExtension)) {\n        throw new BadRequestException('Invalid file extension');\n      }\n    }\n\n    if (['LINK'].includes(role)) {\n      const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n      if (!urlRegex.test(content)) {\n        throw new BadRequestException('Invalid URL');\n      }\n    }\n\n    if (\n      ['TEXT'].includes(role) &&\n      (content.length  5000)\n    ) {\n      throw new BadRequestException(\n        'Text content must be between 50 and 5000 characters',\n      );\n    }\n\n    const lesson = new Lesson({\n      name,\n      description,\n      content,\n      role,\n      courseId,\n    });\n    await this.lessonRepository.create(lesson);\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateLessonsController.html":{"url":"controllers/CreateLessonsController.html","title":"controller - CreateLessonsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateLessonsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: Request, courseId: string, lesson: Lesson)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new lesson'})@ApiBody({type: Lesson})@ApiResponse({status: 201, description: 'The lesson has been successfully created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/create.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Req } from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateLessonUseCase } from '../useCase/create.useCase';\nimport { Lesson } from '../entities/lesson.entity';\nimport { viewModelLesson } from '../viewModelLesson';\n\n@ApiTags('lessons')\n@Controller('courses/:courseId/lessons')\nexport class CreateLessonsController {\n  constructor(private useCase: CreateLessonUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new lesson' })\n  @ApiBody({ type: Lesson })\n  @ApiResponse({\n    status: 201,\n    description: 'The lesson has been successfully created.',\n  })\n  async create(\n    @Req() req: Request,\n    @Param('courseId') courseId: string,\n    @Body() lesson: Lesson,\n  ) {\n    /* req['user'] { id: '59f501ef-7373-47a3-a14e-26ad0bdcda7c', role: 'ADMINISTRATOR' }\nreq.body {\n  name: 'Lição de Texto 1',\n  description: 'Esta é uma lição de texto',\n  content: 'Este é o conteúdo da lição de texto 1.',\n  role: 'TEXT' */\n\n    const roleUser = req['user'].role;\n    const { name, description, content, role } = lesson;\n\n    const result = await this.useCase.execute(roleUser, {\n      courseId,\n      name,\n      description,\n      content,\n      role,\n    });\n    return viewModelLesson.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateUserController.html":{"url":"controllers/CreateUserController.html","title":"controller - CreateUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/create.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'The user has been successfully created.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/create.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\n\nimport { CreateUserUseCase } from '../useCase/create.useCase';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ViewModelUser } from '../viewModelUser';\n\n@ApiTags('users')\n@Controller('user')\nexport class CreateUserController {\n  constructor(private useCase: CreateUserUseCase) {}\n  @Post()\n  @ApiOperation({ summary: 'Create a new user' })\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({\n    status: 201,\n    description: 'The user has been successfully created.',\n  })\n  async create(@Body() createUserDto: CreateUserDto) {\n    const user = await this.useCase.execute(createUserDto);\n\n    return ViewModelUser.toHttp(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user'})@IsEmail()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The role of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserRole } from '@prisma/client';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: 'The name of the user' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ description: 'The username of the user' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty({ description: 'The email of the user' })\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({ description: 'The password of the user' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({ description: 'The role of the user' })\n  @IsString()\n  @IsNotEmpty()\n  role: UserRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserRequest.html":{"url":"interfaces/CreateUserRequest.html","title":"interface - CreateUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/create.useCase.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { UserRepository } from '../../user/repository/user.repository';\nimport { User } from '../../user/entities/user.entity';\nimport { hash } from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRole } from '@prisma/client';\n\ninterface CreateUserRequest {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: string;\n}\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute({ name, username, email, password, role }: CreateUserRequest) {\n    const userAlreadyExist =\n      (await this.userRepository.findByEmail(email)) ||\n      (await this.userRepository.findByUsername(username));\n\n    if (userAlreadyExist)\n      throw new ConflictException(\n        'User already exists, username or email already in use',\n      );\n\n    if (!Object.values(UserRole).includes(role as UserRole)) {\n      throw new BadRequestException(\n        'Invalid role value. Please provide a valid value [ADMINISTRATOR | PROFESSOR | STUDENTS].',\n      );\n    }\n\n    const user = new User({\n      name,\n      username,\n      email,\n      password: await hash(password, 10),\n      role: role as User['role'],\n    });\n\n    await this.userRepository.create(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/create.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/create.useCase.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: CreateUserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/create.useCase.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { UserRepository } from '../../user/repository/user.repository';\nimport { User } from '../../user/entities/user.entity';\nimport { hash } from 'bcrypt';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRole } from '@prisma/client';\n\ninterface CreateUserRequest {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: string;\n}\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute({ name, username, email, password, role }: CreateUserRequest) {\n    const userAlreadyExist =\n      (await this.userRepository.findByEmail(email)) ||\n      (await this.userRepository.findByUsername(username));\n\n    if (userAlreadyExist)\n      throw new ConflictException(\n        'User already exists, username or email already in use',\n      );\n\n    if (!Object.values(UserRole).includes(role as UserRole)) {\n      throw new BadRequestException(\n        'Invalid role value. Please provide a valid value [ADMINISTRATOR | PROFESSOR | STUDENTS].',\n      );\n    }\n\n    const user = new User({\n      name,\n      username,\n      email,\n      password: await hash(password, 10),\n      role: role as User['role'],\n    });\n\n    await this.userRepository.create(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nPrismaCourseRepository \n\nPrismaCourseRepository \n\n\n\nPrismaLessonRepository \n\nPrismaLessonRepository \n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nPrismaCourseRepository  -->\n\nDatabaseModule->PrismaCourseRepository \n\n\n\nPrismaLessonRepository  -->\n\nDatabaseModule->PrismaLessonRepository \n\n\n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\n\n\nPrismaCourseRepository\n\nPrismaCourseRepository\n\nDatabaseModule -->\n\nPrismaCourseRepository->DatabaseModule\n\n\n\n\n\nPrismaLessonRepository\n\nPrismaLessonRepository\n\nDatabaseModule -->\n\nPrismaLessonRepository->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaCourseRepository\n                        \n                        \n                            PrismaLessonRepository\n                        \n                        \n                            PrismaService\n                        \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaCourseRepository\n                        \n                        \n                            PrismaLessonRepository\n                        \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaUserRepository } from './prisma/repository/prisma.user.repository';\nimport { PrismaCourseRepository } from './prisma/repository/prisma.course.repository';\nimport { PrismaLessonRepository } from './prisma/repository/prisma.lesson.repository';\n\n@Module({\n  providers: [\n    PrismaService,\n    PrismaUserRepository,\n    PrismaCourseRepository,\n    PrismaLessonRepository,\n  ],\n  exports: [\n    PrismaUserRepository,\n    PrismaCourseRepository,\n    PrismaLessonRepository,\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteCourseByIdController.html":{"url":"controllers/DeleteCourseByIdController.html","title":"controller - DeleteCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/delete.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { DeleteCourseByIdUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('courses')\n@Controller('courses')\nexport class DeleteCourseByIdController {\n  constructor(private useCase: DeleteCourseByIdUseCase) {}\n\n  @Delete(':id')\n  async delete(@Req() req: Request, @Param('id') id: string) {\n    const role = req['user'].role;\n    await this.useCase.execute(id, role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteCourseByIdUseCase.html":{"url":"injectables/DeleteCourseByIdUseCase.html","title":"injectable - DeleteCourseByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteCourseByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/delete.useCase.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/delete.useCase.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\n\n@Injectable()\nexport class DeleteCourseByIdUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, role: string): Promise {\n    if (role === 'STUDENTS') {\n      throw new UnauthorizedException('Only administrators can delete courses');\n    }\n    const courseExists = await this.courseRepository.findById(id);\n    if (!courseExists) throw new NotFoundException('Course not found');\n\n    await this.courseRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteLessonByIdController.html":{"url":"controllers/DeleteLessonByIdController.html","title":"controller - DeleteLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/delete.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { DeleteLessonByIdUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('lessons')\n@Controller('courses/:courseId/lessons')\nexport class DeleteLessonByIdController {\n  constructor(private useCase: DeleteLessonByIdUseCase) {}\n  @Delete(':id')\n  async delete(\n    @Req() req: Request,\n    @Param('id') id: string,\n    @Param('courseId') courseId: string,\n  ) {\n    const userRole = req['user'].role;\n    await this.useCase.execute(id, courseId, userRole);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteLessonByIdUseCase.html":{"url":"injectables/DeleteLessonByIdUseCase.html","title":"injectable - DeleteLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: PrismaLessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/delete.useCase.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        PrismaLessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, courseId: string, userRole: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/delete.useCase.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\n\n@Injectable()\nexport class DeleteLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository)\n    private lessonRepository: PrismaLessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, courseId: string, userRole: string): Promise {\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can delete lessons',\n      );\n    }\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n    await this.lessonRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteUserController.html":{"url":"controllers/DeleteUserController.html","title":"controller - DeleteUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/delete.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(req: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/delete.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Req } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { DeleteUserUseCase } from '../useCase/delete.useCase';\n\n@ApiTags('users')\n@Controller('user')\nexport class DeleteUserController {\n  constructor(private useCase: DeleteUserUseCase) {}\n\n  @Delete(':id')\n  async delete(@Req() req: Request, @Param('id') id: string) {\n    const role = req['user'].role;\n    await this.useCase.execute(id, role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserUseCase.html":{"url":"injectables/DeleteUserUseCase.html","title":"injectable - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/delete.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/delete.useCase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/delete.useCase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\n\n@Injectable()\nexport class DeleteUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string, role: string): Promise {\n    if (role !== 'ADMINISTRATOR') {\n      throw new UnauthorizedException('Only administrators can delete users');\n    }\n    await this.userRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllCoursesController.html":{"url":"controllers/FindAllCoursesController.html","title":"controller - FindAllCoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllCoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/findAll.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, size: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all courses'})@ApiResponse({status: 200, description: 'The list of courses has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiQuery({name: 'page', required: false, type: Number, description: 'Page number'})@ApiQuery({name: 'size', required: false, type: Number, description: 'Number of items per page'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/findAll.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags, ApiQuery } from '@nestjs/swagger';\nimport { FindAllCoursesUseCase } from '../useCase/findAll.useCase';\nimport { viewModelCourse } from '../viewModelCourse';\n\n@ApiTags('courses')\n@Controller('courses')\nexport class FindAllCoursesController {\n  constructor(private useCase: FindAllCoursesUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find all courses' })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of courses has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Page number',\n  })\n  @ApiQuery({\n    name: 'size',\n    required: false,\n    type: Number,\n    description: 'Number of items per page',\n  })\n  async findAll(\n    @Query('page') page: number = 1,\n    @Query('size') size: number = 10,\n  ) {\n    const courses = await this.useCase.execute(+page, +size);\n    return courses.map(viewModelCourse.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllCoursesUseCase.html":{"url":"injectables/FindAllCoursesUseCase.html","title":"injectable - FindAllCoursesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllCoursesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/findAll.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/findAll.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/findAll.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { CourseRepository } from '../repository/course.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class FindAllCoursesUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(page: number, size: number): Promise {\n    const skip = (page - 1) * size;\n    const courses = await this.courseRepository.findAll(skip, size);\n    if (!courses || courses.length === 0) {\n      throw new NotFoundException('Courses not found');\n    }\n\n    return courses;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllLessonsByCourseController.html":{"url":"controllers/FindAllLessonsByCourseController.html","title":"controller - FindAllLessonsByCourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllLessonsByCourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/findAllByCourse.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, size: number, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find all lessons'})@ApiResponse({status: 200, type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Course not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})@ApiQuery({name: 'size', required: false, type: Number, description: 'Number of items per page'})@ApiQuery({name: 'page', required: false, type: Number, description: 'Page number'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/findAllByCourse.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { viewModelLesson } from '../viewModelLesson';\nimport { FindAllLessonsByCourseUseCase } from '../useCase/findAllByCourse.useCase';\n\n@ApiTags('lessons')\n@Controller('courses/:courseId/lessons')\nexport class FindAllLessonsByCourseController {\n  constructor(private useCase: FindAllLessonsByCourseUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find all lessons' })\n  @ApiResponse({ status: 200, type: [viewModelLesson] })\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 404, description: 'Course not found.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  @ApiQuery({\n    name: 'size',\n    required: false,\n    type: Number,\n    description: 'Number of items per page',\n  })\n  @ApiQuery({\n    name: 'page',\n    required: false,\n    type: Number,\n    description: 'Page number',\n  })\n  async findAll(\n    @Query('page') page: number = 1,\n    @Query('size') size: number = 10,\n    @Param('courseId') courseId: string,\n  ) {\n    const result = await this.useCase.execute(courseId, +page, +size);\n    return result.map(viewModelLesson.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllLessonsByCourseUseCase.html":{"url":"injectables/FindAllLessonsByCourseUseCase.html","title":"injectable - FindAllLessonsByCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllLessonsByCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/findAllByCourse.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/findAllByCourse.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(courseId: string, page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/findAllByCourse.useCase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\n\n@Injectable()\nexport class FindAllLessonsByCourseUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    courseId: string,\n    page: number,\n    size: number,\n  ): Promise {\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n\n    const skip = (page - 1) * size;\n    const lessons = await this.lessonRepository.findAllByCourse(\n      courseId,\n      skip,\n      size,\n    );\n\n    if (!lessons || lessons.length === 0) {\n      throw new NotFoundException('Lessons not found');\n    }\n    return lessons;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindAllUserController.html":{"url":"controllers/FindAllUserController.html","title":"controller - FindAllUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindAllUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/findAll.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')@ApiOperation({summary: 'Find all users'})@ApiResponse({status: 200, description: 'The list of users has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/findAll.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ViewModelUser } from '../viewModelUser';\nimport { FindAllUsersUseCase } from '../useCase/findAll.useCase';\n\n@ApiTags('users')\n@Controller('user')\nexport class FindAllUserController {\n  constructor(private useCase: FindAllUsersUseCase) {}\n\n  @Get('all')\n  @ApiOperation({ summary: 'Find all users' })\n  @ApiResponse({\n    status: 200,\n    description: 'The list of users has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  async findAll(@Req() req: Request) {\n    const role = req['user'].role;\n    const users = await this.useCase.execute(role);\n    return users.map(ViewModelUser.toHttp);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllUsersUseCase.html":{"url":"injectables/FindAllUsersUseCase.html","title":"injectable - FindAllUsersUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllUsersUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/findAll.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/findAll.useCase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/findAll.useCase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\n\n@Injectable()\nexport class FindAllUsersUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(role: string) {\n    if (role !== 'ADMINISTRATOR') {\n      throw new UnauthorizedException('Only administrators can see all users');\n    }\n    const users = await this.userRepository.findAll();\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindCourseByIdController.html":{"url":"controllers/FindCourseByIdController.html","title":"controller - FindCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find course by ID'})@ApiResponse({status: 200, description: 'The course has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/findById.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Controller, Get, Param } from '@nestjs/common';\nimport { viewModelCourse } from '../viewModelCourse';\nimport { FindCourseByIdUseCase } from '../useCase/findById.useCase';\n\n@ApiTags('courses')\n@Controller('courses')\nexport class FindCourseByIdController {\n  constructor(private useCase: FindCourseByIdUseCase) {}\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find course by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The course has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  async findById(@Param('id') id: string) {\n    const course = await this.useCase.execute(id);\n    return viewModelCourse.toHttp(course);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindCourseByIdUseCase.html":{"url":"injectables/FindCourseByIdUseCase.html","title":"injectable - FindCourseByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindCourseByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/findById.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/findById.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class FindCourseByIdUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string): Promise {\n    const course = await this.courseRepository.findById(id);\n    if (!course) throw new NotFoundException('Course not found');\n    return course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindLessonByIdController.html":{"url":"controllers/FindLessonByIdController.html","title":"controller - FindLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string, courseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find lesson by ID'})@ApiResponse({status: 200, description: 'The lesson has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 404, description: 'Lesson not found.'})@ApiResponse({status: 500, description: 'Internal server error.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/findById.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { viewModelLesson } from '../viewModelLesson';\nimport { FindLessonByIdUseCase } from '../useCase/findById.useCase';\n\n@ApiTags('lessons')\n@Controller('courses/:courseId/lessons')\nexport class FindLessonByIdController {\n  constructor(private useCase: FindLessonByIdUseCase) {}\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find lesson by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The lesson has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  @ApiResponse({ status: 404, description: 'Lesson not found.' })\n  @ApiResponse({ status: 500, description: 'Internal server error.' })\n  async findById(@Param('id') id: string, @Param('courseId') courseId: string) {\n    const lesson = await this.useCase.execute(id, courseId);\n    return viewModelLesson.toHttp(lesson);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindLessonByIdUseCase.html":{"url":"injectables/FindLessonByIdUseCase.html","title":"injectable - FindLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/findById.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, courseId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/findById.useCase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { Lesson } from '../entities/lesson.entity';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class FindLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(id: string, courseId: string): Promise {\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) throw new NotFoundException('Course not found');\n    const lesson = await this.lessonRepository.findById(id);\n    if (!lesson) throw new NotFoundException('Lesson not found');\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FindUserByIdController.html":{"url":"controllers/FindUserByIdController.html","title":"controller - FindUserByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FindUserByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/findById.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Find user by ID'})@ApiResponse({status: 200, description: 'The user has been successfully retrieved.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/findById.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Controller, Get, Req } from '@nestjs/common';\nimport { FindUserByIdUseCase } from '../useCase/findById.useCase';\nimport { ViewModelUser } from '../viewModelUser';\nimport { Request } from 'express';\n\n@ApiTags('users')\n@Controller('user')\nexport class FindUserByIdController {\n  constructor(private useCase: FindUserByIdUseCase) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Find user by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully retrieved.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  async findById(@Req() req: Request) {\n    const userId = req['user'].id;\n\n    const user = await this.useCase.execute(userId);\n    return ViewModelUser.toHttp(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByIdUseCase.html":{"url":"injectables/FindUserByIdUseCase.html","title":"injectable - FindUserByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/findById.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/findById.useCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/findById.useCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UserRepository } from '../repository/user.repository';\nimport { User } from '../entities/user.entity';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\n\n@Injectable()\nexport class FindUserByIdUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string): Promise {\n    const user = await this.userRepository.findById(id);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/entities/lesson.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    content\n                                \n                                \n                                    role\n                                \n                                \n                                    courseId\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/entities/lesson.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lessons/entities/lesson.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/lessons/entities/lesson.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:27\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:30\n                                \n                            \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:33\n                                \n                            \n\n                \n                    \n                        setcontent(content: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:54\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            content\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:36\n                                \n                            \n\n                \n                    \n                        setrole(role: LessonRole)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            role\n                                                    \n                                                            \n                                                                            LessonRole\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courseId\n                    \n                \n\n                \n                    \n                        getcourseId()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setcourseId(courseId: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            courseId\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/lessons/entities/lesson.entity.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { LessonRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface LessonSchema {\n  name: string;\n  description: string;\n  content: string;\n  role: LessonRole;\n  courseId: string;\n  createdAt: Date;\n  updatedAt?: Date;\n}\nexport class Lesson {\n  private props: LessonSchema;\n  private _id: string;\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n  get id() {\n    return this._id;\n  }\n  get name() {\n    return this.props.name;\n  }\n  get description() {\n    return this.props.description;\n  }\n  get content() {\n    return this.props.content;\n  }\n  get role() {\n    return this.props.role;\n  }\n  get courseId() {\n    return this.props.courseId;\n  }\n  get createdAt() {\n    return this.props.createdAt;\n  }\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n  set name(name: string) {\n    this.props.name = name;\n  }\n  set description(description: string) {\n    this.props.description = description;\n  }\n  set content(content: string) {\n    this.props.content = content;\n  }\n  set role(role: LessonRole) {\n    this.props.role = role;\n  }\n  set courseId(courseId: string) {\n    this.props.courseId = courseId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonRepository.html":{"url":"classes/LessonRepository.html","title":"class - LessonRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/repository/lesson.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAllByCourse\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllByCourse\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByCourse(courseId: string, skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/repository/lesson.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from '../entities/lesson.entity';\n\nexport abstract class LessonRepository {\n  abstract create(lesson: Lesson): Promise;\n  abstract findById(id: string): Promise;\n  abstract findAllByCourse(\n    courseId: string,\n    skip: number,\n    take: number,\n  ): Promise;\n  abstract delete(id: string): Promise;\n  abstract update(lesson: Lesson): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonSchema.html":{"url":"interfaces/LessonSchema.html","title":"interface - LessonSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/entities/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         LessonRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LessonRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LessonRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface LessonSchema {\n  name: string;\n  description: string;\n  content: string;\n  role: LessonRole;\n  courseId: string;\n  createdAt: Date;\n  updatedAt?: Date;\n}\nexport class Lesson {\n  private props: LessonSchema;\n  private _id: string;\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n  get id() {\n    return this._id;\n  }\n  get name() {\n    return this.props.name;\n  }\n  get description() {\n    return this.props.description;\n  }\n  get content() {\n    return this.props.content;\n  }\n  get role() {\n    return this.props.role;\n  }\n  get courseId() {\n    return this.props.courseId;\n  }\n  get createdAt() {\n    return this.props.createdAt;\n  }\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n  set name(name: string) {\n    this.props.name = name;\n  }\n  set description(description: string) {\n    this.props.description = description;\n  }\n  set content(content: string) {\n    this.props.content = content;\n  }\n  set role(role: LessonRole) {\n    this.props.role = role;\n  }\n  set courseId(courseId: string) {\n    this.props.courseId = courseId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonsModule.html":{"url":"modules/LessonsModule.html","title":"module - LessonsModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonsModule\n\n\n\ncluster_LessonsModule_imports\n\n\n\ncluster_LessonsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nLessonsModule\n\nLessonsModule\n\nLessonsModule -->\n\nDatabaseModule->LessonsModule\n\n\n\n\n\nCreateLessonUseCase\n\nCreateLessonUseCase\n\nLessonsModule -->\n\nCreateLessonUseCase->LessonsModule\n\n\n\n\n\nDeleteLessonByIdUseCase\n\nDeleteLessonByIdUseCase\n\nLessonsModule -->\n\nDeleteLessonByIdUseCase->LessonsModule\n\n\n\n\n\nFindAllLessonsByCourseUseCase\n\nFindAllLessonsByCourseUseCase\n\nLessonsModule -->\n\nFindAllLessonsByCourseUseCase->LessonsModule\n\n\n\n\n\nFindLessonByIdUseCase\n\nFindLessonByIdUseCase\n\nLessonsModule -->\n\nFindLessonByIdUseCase->LessonsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lessons/lessons.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateLessonUseCase\n                        \n                        \n                            DeleteLessonByIdUseCase\n                        \n                        \n                            FindAllLessonsByCourseUseCase\n                        \n                        \n                            FindLessonByIdUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateLessonsController\n                        \n                        \n                            FindLessonByIdController\n                        \n                        \n                            FindAllLessonsByCourseController\n                        \n                        \n                            DeleteLessonByIdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateLessonsController } from './controller/create.controller';\nimport { CreateLessonUseCase } from './useCase/create.useCase';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { FindLessonByIdController } from './controller/findById.controller';\nimport { FindLessonByIdUseCase } from './useCase/findById.useCase';\nimport { FindAllLessonsByCourseController } from './controller/findAllByCourse.controller';\nimport { FindAllLessonsByCourseUseCase } from './useCase/findAllByCourse.useCase';\nimport { DeleteLessonByIdController } from './controller/delete.controller';\nimport { DeleteLessonByIdUseCase } from './useCase/delete.useCase';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateLessonsController,\n    FindLessonByIdController,\n    FindAllLessonsByCourseController,\n    DeleteLessonByIdController,\n  ],\n  providers: [\n    CreateLessonUseCase,\n    FindLessonByIdUseCase,\n    FindAllLessonsByCourseUseCase,\n    DeleteLessonByIdUseCase,\n  ],\n})\nexport class LessonsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAuthDto.html":{"url":"classes/LoginAuthDto.html","title":"class - LoginAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The username of the user', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginAuthDto {\n  @ApiProperty({ description: 'The username of the user', required: false })\n  username?: string;\n\n  @ApiProperty({ description: 'The email of the user', required: false })\n  email?: string;\n\n  @ApiProperty({ description: 'The password of the user', required: true })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaCourseMapper.html":{"url":"classes/PrismaCourseMapper.html","title":"class - PrismaCourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaCourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(courseRaw: CourseRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.course.mapper.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseRaw\n                                            \n                                                            CourseRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Course\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.course.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CourseRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from 'src/courses/entities/course.entity';\nimport { Course as CourseRaw } from '@prisma/client';\nexport class PrismaCourseMapper {\n  static toPrisma(course: Course): CourseRaw {\n    return {\n      id: course.id,\n      name: course.name,\n      description: course.description,\n      banner: course.banner,\n      createdAt: course.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(courseRaw: CourseRaw): Course {\n    return new Course(\n      {\n        name: courseRaw.name,\n        description: courseRaw.description,\n        banner: courseRaw.banner,\n        createdAt: courseRaw.createdAt,\n      },\n      courseRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaCourseRepository.html":{"url":"injectables/PrismaCourseRepository.html","title":"injectable - PrismaCourseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaCourseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.course.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.course.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(course: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.course.repository.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                course\n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\nimport { PrismaService } from '../prisma.service';\nimport { Course } from 'src/courses/entities/course.entity';\nimport { PrismaCourseMapper } from '../mappers/prisma.course.mapper';\nimport { PrismaLessonMapper } from '../mappers/prisma.lesson.mapper';\n\n@Injectable()\nexport class PrismaCourseRepository implements CourseRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(course: Course): Promise {\n    const courseRaw = PrismaCourseMapper.toPrisma(course);\n    await this.prisma.course.create({\n      data: courseRaw,\n    });\n  }\n\n  async findAll(skip: number, take: number): Promise {\n    const coursesRaw = await this.prisma.course.findMany({\n      skip: skip,\n      take: take,\n      include: {\n        lessons: true,\n      },\n    });\n\n    const result = coursesRaw.map((courseRaw) => {\n      const lessons = courseRaw.lessons.map(PrismaLessonMapper.toDomain);\n      const course = PrismaCourseMapper.toDomain(courseRaw);\n      course.lessons = lessons;\n      return course;\n    });\n\n    return result;\n  }\n\n  async findById(id: string): Promise {\n    const courseRaw = await this.prisma.course.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        lessons: true,\n      },\n    });\n\n    if (!courseRaw) return null;\n\n    const lessons = courseRaw.lessons.map(PrismaLessonMapper.toDomain);\n\n    const course = PrismaCourseMapper.toDomain(courseRaw);\n\n    course.lessons = lessons;\n\n    return course;\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.course.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(course: Course): Promise {\n    const courseRaw = PrismaCourseMapper.toPrisma(course);\n    await this.prisma.course.update({\n      where: {\n        id: courseRaw.id,\n      },\n      data: courseRaw,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaLessonMapper.html":{"url":"classes/PrismaLessonMapper.html","title":"class - PrismaLessonMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaLessonMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.lesson.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(lessonRaw: LessonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.lesson.mapper.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonRaw\n                                            \n                                                            LessonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Lesson\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.lesson.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LessonRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { Lessons as LessonRaw } from '@prisma/client';\nexport class PrismaLessonMapper {\n  static toPrisma(lesson: Lesson): LessonRaw {\n    return {\n      id: lesson.id,\n      name: lesson.name,\n      description: lesson.description,\n      content: lesson.content,\n      role: lesson.role,\n      courseId: lesson.courseId,\n      createdAt: lesson.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(lessonRaw: LessonRaw): Lesson {\n    return new Lesson(\n      {\n        name: lessonRaw.name,\n        description: lessonRaw.description,\n        content: lessonRaw.content,\n        role: lessonRaw.role,\n        courseId: lessonRaw.courseId,\n        createdAt: lessonRaw.createdAt,\n      },\n      lessonRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaLessonRepository.html":{"url":"injectables/PrismaLessonRepository.html","title":"injectable - PrismaLessonRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaLessonRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.lesson.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByCourse\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.lesson.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByCourse\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByCourse(courseId: string, skip: number, take: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(lesson: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.lesson.repository.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lesson\n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LessonRepository } from 'src/lessons/repository/lesson.repository';\nimport { PrismaService } from '../prisma.service';\nimport { Lesson } from 'src/lessons/entities/lesson.entity';\nimport { PrismaLessonMapper } from '../mappers/prisma.lesson.mapper';\n@Injectable()\nexport class PrismaLessonRepository implements LessonRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(lesson: Lesson): Promise {\n    const lessonRaw = PrismaLessonMapper.toPrisma(lesson);\n    await this.prisma.lessons.create({\n      data: lessonRaw,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const lesson = await this.prisma.lessons.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!lesson) return null;\n    return PrismaLessonMapper.toDomain(lesson);\n  }\n  async findAllByCourse(\n    courseId: string,\n    skip: number,\n    take: number,\n  ): Promise {\n    const lessons = await this.prisma.lessons.findMany({\n      where: {\n        courseId: courseId,\n      },\n      skip,\n      take,\n    });\n    return lessons.map((lesson) => PrismaLessonMapper.toDomain(lesson));\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.lessons.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(lesson: Lesson): Promise {\n    const lessonRaw = PrismaLessonMapper.toPrisma(lesson);\n    await this.prisma.lessons.update({\n      where: {\n        id: lessonRaw.id,\n      },\n      data: lessonRaw,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaUserMapper.html":{"url":"classes/PrismaUserMapper.html","title":"class - PrismaUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/mappers/prisma.user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(userRaw: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.user.mapper.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRaw\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/mappers/prisma.user.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/user/entities/user.entity';\nimport { User as UserRaw, UserRole } from '@prisma/client';\n\nexport class PrismaUserMapper {\n  static toPrisma(user: User): UserRaw {\n    return {\n      id: user.id,\n      name: user.name,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      role: user.role as UserRole,\n      createdAt: user.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(userRaw: UserRaw): User {\n    return new User(\n      {\n        name: userRaw.name,\n        username: userRaw.username,\n        email: userRaw.email,\n        password: userRaw.password,\n        role: userRaw.role as UserRole,\n        createdAt: userRaw.createdAt,\n      },\n      userRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaUserRepository.html":{"url":"injectables/PrismaUserRepository.html","title":"injectable - PrismaUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma/repository/prisma.user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/database/prisma/repository/prisma.user.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma/repository/prisma.user.repository.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from 'src/user/entities/user.entity';\nimport { UserRepository } from 'src/user/repository/user.repository';\nimport { PrismaService } from '../prisma.service';\nimport { PrismaUserMapper } from '../mappers/prisma.user.mapper';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PrismaUserRepository implements UserRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(user: User): Promise {\n    const userRaw = PrismaUserMapper.toPrisma(user);\n\n    await this.prisma.user.create({\n      data: userRaw,\n    });\n  }\n\n  async findByEmail(email: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async findByUsername(username: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        username,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async findAll(): Promise {\n    const users = await this.prisma.user.findMany();\n    return users.map(PrismaUserMapper.toDomain);\n  }\n\n  async findById(id: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async update(user: User): Promise {\n    const userRaw = PrismaUserMapper.toPrisma(user);\n    await this.prisma.user.update({\n      where: {\n        id: userRaw.id,\n      },\n      data: userRaw,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateCourseByIdController.html":{"url":"controllers/UpdateCourseByIdController.html","title":"controller - UpdateCourseByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateCourseByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/controller/update.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, updateCourseDto: UpdateCourseDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update course'})@ApiResponse({status: 200, description: 'The course has been successfully updated.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/courses/controller/update.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            UpdateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Req } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { UpdateCourseUseCase } from '../useCase/update.useCase';\nimport { viewModelCourse } from '../viewModelCourse';\nimport { UpdateCourseDto } from '../dto/update-course.dto';\n\n@ApiTags('courses')\n@Controller('courses')\nexport class UpdateCourseByIdController {\n  constructor(private useCase: UpdateCourseUseCase) {}\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update course' })\n  @ApiResponse({\n    status: 200,\n    description: 'The course has been successfully updated.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  async update(\n    @Req() req: Request,\n    @Body() updateCourseDto: UpdateCourseDto,\n    @Param('id') id: string,\n  ) {\n    const { role } = req['user'];\n    const result = await this.useCase.execute(id, role, updateCourseDto);\n    return viewModelCourse.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCourseDto.html":{"url":"classes/UpdateCourseDto.html","title":"class - UpdateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/update-course.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCourseDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                banner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course banner'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/update-course.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCourseDto } from './create-course.dto';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateCourseDto extends PartialType(CreateCourseDto) {\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course name' })\n  name?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course description' })\n  description?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ description: 'Course banner' })\n  banner?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateCourseUseCase.html":{"url":"injectables/UpdateCourseUseCase.html","title":"injectable - UpdateCourseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateCourseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/courses/useCase/update.useCase.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, role: string, updateCourseDto: UpdateCourseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/useCase/update.useCase.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            UpdateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { CourseRepository } from '../repository/course.repository';\n\nimport { UpdateCourseDto } from '../dto/update-course.dto';\nimport { Course } from '../entities/course.entity';\n\n@Injectable()\nexport class UpdateCourseUseCase {\n  constructor(\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    id: string,\n    role: string,\n    updateCourseDto: UpdateCourseDto,\n  ): Promise {\n    if (role === 'STUDENTS') {\n      throw new UnauthorizedException(\n        'Only administrators and teachers can update courses',\n      );\n    }\n    const Course = await this.courseRepository.findById(id);\n    if (!Course) throw new NotFoundException('Course not found');\n\n    if (updateCourseDto.name) Course.name = updateCourseDto.name;\n\n    if (updateCourseDto.description)\n      Course.description = updateCourseDto.description;\n\n    if (updateCourseDto.banner) Course.banner = updateCourseDto.banner;\n\n    await this.courseRepository.update(Course);\n\n    return Course;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateLessonByIdController.html":{"url":"controllers/UpdateLessonByIdController.html","title":"controller - UpdateLessonByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateLessonByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/controller/update.Controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses/:courseId/lessons\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, courseId: string, lessonId: string, updateLessonDto: UpdateLessonDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a lesson'})@ApiBody({type: UpdateLessonDto})@ApiResponse({status: 200, description: 'The lesson has been successfully updated.'})\n                \n            \n\n                    \n                        \n                            Defined in src/lessons/controller/update.Controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLessonDto\n                                            \n                                                            UpdateLessonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Patch, Param, Body, Req } from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { UpdateLessonDto } from '../dto/update-lesson.dto';\nimport { UpdateLessonByIdUseCase } from '../useCase/update.useCase';\n\n@ApiTags('lessons')\n@Controller('courses/:courseId/lessons')\nexport class UpdateLessonByIdController {\n  constructor(private useCase: UpdateLessonByIdUseCase) {}\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update a lesson' })\n  @ApiBody({ type: UpdateLessonDto })\n  @ApiResponse({\n    status: 200,\n    description: 'The lesson has been successfully updated.',\n  })\n  async update(\n    @Req() req: Request,\n    @Param('courseId') courseId: string,\n    @Param('id') lessonId: string,\n    @Body() updateLessonDto: UpdateLessonDto,\n  ) {\n    const userRole = req['user'].role;\n\n    const updatedLesson = await this.useCase.execute(\n      courseId,\n      lessonId,\n      userRole,\n      updateLessonDto,\n    );\n\n    return updatedLesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateLessonByIdUseCase.html":{"url":"injectables/UpdateLessonByIdUseCase.html","title":"injectable - UpdateLessonByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateLessonByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lessonRepository: LessonRepository, courseRepository: CourseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lessons/useCase/update.useCase.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lessonRepository\n                                                  \n                                                        \n                                                                        LessonRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepository\n                                                  \n                                                        \n                                                                        CourseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(courseId: string, lessonId: string, userRole: string, lessonUpdate: UpdateLessonDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/useCase/update.useCase.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonUpdate\n                                            \n                                                            UpdateLessonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaLessonRepository } from 'src/database/prisma/repository/prisma.lesson.repository';\nimport { UpdateLessonDto } from '../dto/update-lesson.dto';\nimport { Lesson } from '../entities/lesson.entity';\nimport { PrismaCourseRepository } from 'src/database/prisma/repository/prisma.course.repository';\nimport { LessonRepository } from '../repository/lesson.repository';\nimport { CourseRepository } from 'src/courses/repository/course.repository';\n\n@Injectable()\nexport class UpdateLessonByIdUseCase {\n  constructor(\n    @Inject(PrismaLessonRepository) private lessonRepository: LessonRepository,\n    @Inject(PrismaCourseRepository) private courseRepository: CourseRepository,\n  ) {}\n\n  async execute(\n    courseId: string,\n    lessonId: string,\n    userRole: string,\n    lessonUpdate: UpdateLessonDto,\n  ): Promise {\n    const { content, role } = lessonUpdate;\n\n    if (['STUDENTS'].includes(userRole)) {\n      throw new UnauthorizedException(\n        'Only admins and teachers can update lessons',\n      );\n    }\n\n    const course = await this.courseRepository.findById(courseId);\n    if (!course) {\n      throw new NotFoundException('Course not found');\n    }\n\n    const lesson = await this.lessonRepository.findById(lessonId);\n    if (!lesson) {\n      throw new NotFoundException('Lesson not found');\n    }\n\n    if (lesson.courseId !== course.id) {\n      throw new UnauthorizedException('Lesson not part of the course');\n    }\n    if (['FILE'].includes(role)) {\n      const fileExtension = content.split('.').pop().toLowerCase();\n      const allowedExtensions = ['pdf', 'xlsx', 'docx', 'pptx'];\n      if (!allowedExtensions.includes(fileExtension)) {\n        throw new BadRequestException('Invalid file extension');\n      }\n    }\n\n    if (['LINK'].includes(role)) {\n      const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n      if (!urlRegex.test(content)) {\n        throw new BadRequestException('Invalid URL');\n      }\n    }\n\n    if (\n      ['TEXT'].includes(role) &&\n      (content.length  5000)\n    ) {\n      throw new BadRequestException(\n        'Text content must be between 50 and 5000 characters',\n      );\n    }\n\n    if (lessonUpdate.name) lesson.name = lessonUpdate.name;\n    if (lessonUpdate.description) lesson.description = lessonUpdate.description;\n    if (lessonUpdate.content) lesson.content = lessonUpdate.content;\n    if (lessonUpdate.role) lesson.role = lessonUpdate.role;\n\n    await this.lessonRepository.update(lesson);\n\n    return lesson;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLessonDto.html":{"url":"classes/UpdateLessonDto.html","title":"class - UpdateLessonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLessonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/dto/update-lesson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLessonDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The content of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The description of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The name of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The role of the lesson'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lessons/dto/update-lesson.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateLessonDto } from './create-lesson.dto';\nimport { IsOptional, IsString } from 'class-validator';\nimport { LessonRole } from '@prisma/client';\n\nexport class UpdateLessonDto extends PartialType(CreateLessonDto) {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The name of the lesson' })\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The description of the lesson' })\n  description?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The content of the lesson' })\n  content?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ description: 'The role of the lesson' })\n  role?: LessonRole;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateUserController.html":{"url":"controllers/UpdateUserController.html","title":"controller - UpdateUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/update.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(req: Request, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiOperation({summary: 'Update user'})@ApiResponse({status: 200, description: 'The user has been successfully updated.'})@ApiResponse({status: 401, description: 'Unauthorized.'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controller/update.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Patch, Req } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { UpdateUserUseCase } from '../useCase/update.useCase';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { ViewModelUser } from '../viewModelUser';\n\n@ApiTags('users')\n@Controller('user')\nexport class UpdateUserController {\n  constructor(private useCase: UpdateUserUseCase) {}\n\n  @Patch()\n  @ApiOperation({ summary: 'Update user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The user has been successfully updated.',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n  })\n  async update(@Req() req: Request, @Body() updateUserDto: UpdateUserDto) {\n    const { id } = req['user'];\n    const result = await this.useCase.execute(id, updateUserDto);\n    return ViewModelUser.toHttp(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  Password?: string;\n\n  @IsOptional()\n  @IsString()\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserUseCase.html":{"url":"injectables/UpdateUserUseCase.html","title":"injectable - UpdateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/useCase/update.useCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/useCase/update.useCase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/useCase/update.useCase.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Inject, Injectable } from '@nestjs/common';\nimport { PrismaUserRepository } from 'src/database/prisma/repository/prisma.user.repository';\nimport { UserRepository } from '../repository/user.repository';\nimport { User } from '../entities/user.entity';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UpdateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(id: string, updateUserDto: UpdateUserDto): Promise {\n    const user = await this.userRepository.findById(id);\n\n    if (updateUserDto.name) user.name = updateUserDto.name;\n\n    if (updateUserDto.email) {\n      const userAlreadyExist = await this.userRepository.findByEmail(\n        updateUserDto.email,\n      );\n\n      if (userAlreadyExist && userAlreadyExist.id !== id)\n        throw new ConflictException('This email is already in use');\n\n      user.email = updateUserDto.email;\n    }\n\n    if (updateUserDto.password) {\n      user.password = await bcrypt.hash(updateUserDto.password, 10);\n    }\n    await this.userRepository.update(user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    role\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/entities/user.entity.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:31\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:35\n                                \n                            \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:39\n                                \n                            \n\n                \n                    \n                        setemail(email: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            email\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:43\n                                \n                            \n\n                \n                    \n                        setpassword(password: string)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            password\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:47\n                                \n                            \n\n                \n                    \n                        setrole(role: UserRole)\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:71\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            role\n                                                    \n                                                            \n                                                                            UserRole\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/user/entities/user.entity.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { UserRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface UserSchema {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\nexport class User {\n  private props: UserSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get username() {\n    return this.props.username;\n  }\n\n  get email() {\n    return this.props.email;\n  }\n\n  get password() {\n    return this.props.password;\n  }\n\n  get role() {\n    return this.props.role;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set username(username: string) {\n    this.props.username = username;\n  }\n\n  set email(email: string) {\n    this.props.email = email;\n  }\n\n  set password(password: string) {\n    this.props.password = password;\n  }\n\n  set role(role: UserRole) {\n    this.props.role = role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFindAllUsersUseCase\n\nFindAllUsersUseCase\n\nUserModule -->\n\nFindAllUsersUseCase->UserModule\n\n\n\n\n\nFindUserByIdUseCase\n\nFindUserByIdUseCase\n\nUserModule -->\n\nFindUserByIdUseCase->UserModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nUserModule -->\n\nUpdateUserUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserUseCase\n                        \n                        \n                            DeleteUserUseCase\n                        \n                        \n                            FindAllUsersUseCase\n                        \n                        \n                            FindUserByIdUseCase\n                        \n                        \n                            UpdateUserUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateUserController\n                        \n                        \n                            FindAllUserController\n                        \n                        \n                            FindUserByIdController\n                        \n                        \n                            DeleteUserController\n                        \n                        \n                            UpdateUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateUserController } from './controller/create.controller';\nimport { CreateUserUseCase } from './useCase/create.useCase';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { FindAllUsersUseCase } from './useCase/findAll.useCase';\nimport { FindAllUserController } from './controller/findAll.controller';\nimport { FindUserByIdController } from './controller/findById.controller';\nimport { FindUserByIdUseCase } from './useCase/findById.useCase';\nimport { DeleteUserController } from './controller/delete.controller';\nimport { DeleteUserUseCase } from './useCase/delete.useCase';\nimport { UpdateUserController } from './controller/update.controller';\nimport { UpdateUserUseCase } from './useCase/update.useCase';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [\n    CreateUserController,\n    FindAllUserController,\n    FindUserByIdController,\n    DeleteUserController,\n    UpdateUserController,\n  ],\n  providers: [\n    CreateUserUseCase,\n    FindAllUsersUseCase,\n    FindUserByIdUseCase,\n    DeleteUserUseCase,\n    UpdateUserUseCase,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/user.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                findByEmail\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByUsername\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/repository/user.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport abstract class UserRepository {\n  abstract create(user: User): Promise;\n\n  abstract findByEmail(email: string): Promise;\n\n  abstract findByUsername(username: string): Promise;\n\n  abstract findAll(): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract delete(id: string): Promise;\n\n  abstract update(user: User): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSchema.html":{"url":"interfaces/UserSchema.html","title":"interface - UserSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport { Replace } from 'src/utils/replace';\n\ninterface UserSchema {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\nexport class User {\n  private props: UserSchema;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get username() {\n    return this.props.username;\n  }\n\n  get email() {\n    return this.props.email;\n  }\n\n  get password() {\n    return this.props.password;\n  }\n\n  get role() {\n    return this.props.role;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set username(username: string) {\n    this.props.username = username;\n  }\n\n  set email(email: string) {\n    this.props.email = email;\n  }\n\n  set password(password: string) {\n    this.props.password = password;\n  }\n\n  set role(role: UserRole) {\n    this.props.role = role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewModelUser.html":{"url":"classes/ViewModelUser.html","title":"class - ViewModelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewModelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/viewModelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/viewModelUser.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: User; name: User; username: User; email: User; role: User; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './entities/user.entity';\n\nexport class ViewModelUser {\n  static toHttp({ id, name, username, email, role }: User) {\n    return {\n      id,\n      name,\n      username,\n      email,\n      role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-auth.dto.ts\n            \n            class\n            LoginAuthDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/controller/create.controller.ts\n            \n            controller\n            CreateCoursesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/delete.controller.ts\n            \n            controller\n            DeleteCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/findAll.controller.ts\n            \n            controller\n            FindAllCoursesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/findById.controller.ts\n            \n            controller\n            FindCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/controller/update.controller.ts\n            \n            controller\n            UpdateCourseByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/dto/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/dto/update-course.dto.ts\n            \n            class\n            UpdateCourseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/entities/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/entities/course.entity.ts\n            \n            interface\n            CourseSchema\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/courses/repository/course.repository.ts\n            \n            class\n            CourseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/courses/useCase/create.useCase.ts\n            \n            injectable\n            CreateCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteCourseByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/findAll.useCase.ts\n            \n            injectable\n            FindAllCoursesUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/findById.useCase.ts\n            \n            injectable\n            FindCourseByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/useCase/update.useCase.ts\n            \n            injectable\n            UpdateCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/viewModelCourse.ts\n            \n            class\n            viewModelCourse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.course.mapper.ts\n            \n            class\n            PrismaCourseMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.lesson.mapper.ts\n            \n            class\n            PrismaLessonMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/mappers/prisma.user.mapper.ts\n            \n            class\n            PrismaUserMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.course.repository.ts\n            \n            injectable\n            PrismaCourseRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.lesson.repository.ts\n            \n            injectable\n            PrismaLessonRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/database/prisma/repository/prisma.user.repository.ts\n            \n            injectable\n            PrismaUserRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lessons/controller/create.controller.ts\n            \n            controller\n            CreateLessonsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/delete.controller.ts\n            \n            controller\n            DeleteLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/findAllByCourse.controller.ts\n            \n            controller\n            FindAllLessonsByCourseController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/findById.controller.ts\n            \n            controller\n            FindLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/controller/update.Controller.ts\n            \n            controller\n            UpdateLessonByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lessons/dto/create-lesson.dto.ts\n            \n            class\n            CreateLessonDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lessons/dto/update-lesson.dto.ts\n            \n            class\n            UpdateLessonDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lessons/entities/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lessons/entities/lesson.entity.ts\n            \n            interface\n            LessonSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lessons/repository/lesson.repository.ts\n            \n            class\n            LessonRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lessons/useCase/create.useCase.ts\n            \n            injectable\n            CreateLessonUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/findAllByCourse.useCase.ts\n            \n            injectable\n            FindAllLessonsByCourseUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/findById.useCase.ts\n            \n            injectable\n            FindLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/useCase/update.useCase.ts\n            \n            injectable\n            UpdateLessonByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lessons/viewModelLesson.ts\n            \n            class\n            viewModelLesson\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controller/create.controller.ts\n            \n            controller\n            CreateUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/delete.controller.ts\n            \n            controller\n            DeleteUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/findAll.controller.ts\n            \n            controller\n            FindAllUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/findById.controller.ts\n            \n            controller\n            FindUserByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/controller/update.controller.ts\n            \n            controller\n            UpdateUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            interface\n            UserSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/repository/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/useCase/create.useCase.ts\n            \n            injectable\n            CreateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/create.useCase.ts\n            \n            interface\n            CreateUserRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/useCase/delete.useCase.ts\n            \n            injectable\n            DeleteUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/findAll.useCase.ts\n            \n            injectable\n            FindAllUsersUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/findById.useCase.ts\n            \n            injectable\n            FindUserByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/useCase/update.useCase.ts\n            \n            injectable\n            UpdateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/viewModelUser.ts\n            \n            class\n            ViewModelUser\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.13.0\n        \n            @types/faker : ^6.6.9\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            faker : ^6.6.6\n        \n            jsonwebtoken : ^9.0.2\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            superagent : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOnline Course Registration System\nAPI Documentation   |   Code Documentation\nThis project is an API for managing online courses, with functionalities for teachers and students.\nTable of Contents\n\nInstallation\nRunning with Docker\nDatabase Migrations and Seeding\nAPI Endpoints\nContribution\nLicense\n\nInstallation\nTo run the project locally, follow these steps:\n\nClone the repository from the master branch. https://github.com/Walttinho/lms.git\nNavigate to the project directory. cd lms\nInstall dependencies using npm or yarn: npm install or yarn install.\nSet up your environment variables as needed.  touch .env && echo -e \"DATABASE_URL=\\nPORT=\\nJWT_SECRET=\" >> .env\nRun the application: npm run start:dev or yarn start:dev.\n\nRunning with Docker\nTo run the project using Docker, follow these steps:\n\nInstall Docker on your machine if you haven't already.\nBuild the Docker image: docker build -t lms-backend .\nRun the Docker container: docker run -p 3000:3000 lms-backend\n\nDatabase Migrations and Seeding\nTo apply database migrations and seeding, follow these steps:\n\nRun database migrations: prisma migrate dev\nSeed the database with initial data: prisma db seed\n\nSimulating Different Access Types\n\nAdministrator Access: Use the appropriate token in the request header to simulate administrator access.\nProfessor Access: Use the appropriate token in the request header to simulate professor access.\nStudent Access: Use the appropriate token in the request header to simulate student access.\n\nAPI Endpoints\nFor detailed information on each endpoint, click on the endpoint name. Additionally, you can visit the interactive documentation at Swagger to explore and test the API endpoints directly in your browser.\n\nPOST /user: Create a new user.\nGET /user/all: List all users.\nGET /user: Find a user by ID.\nDELETE /user/:id: Delete a user by ID.\nPATCH /user: Update a user.\nPOST /auth: User login.\nPOST /courses: Create a new course.\nPOST /courses/:courseId/lessons: Create a new lesson for a specific course.\nGET /courses: List all courses.\nGET /courses/:courseId/lessons: List all lessons for a specific course.\nGET /courses/:id: Find a course by ID.\nGET /courses/:courseId/lessons/:id: Find a lesson by ID for a specific course.\nPUT /courses/:id: Update a course by ID.\nPUT /courses/:courseId/lessons/:id: Update a lesson by ID for a specific course.\nDELETE /courses/:id: Delete a course by ID.\nDELETE /courses/:courseId/lessons/:id: Delete a lesson by ID for a specific course.\n\nContribution\nWe appreciate all contributors who have helped make this project what it is today. If you are interested in contributing, please follow the instructions below:\n\nFork the project.\nCreate a branch with the name of your feature or fix (git checkout -b feature/my-new-feature).\nMake your changes and commit them (git commit -am 'Add some feature').\nPush to your branch (git push origin feature/my-new-feature).\nOpen a Pull Request.\n\nPlease ensure your code is in line with the project's style guidelines and that all test checks are passing.\nLicense\nNest is MIT licensed.\n1. Create a New User\nRoute: POST /user\nDescription: Creates a new user.\nRequest Body:\nExample :{\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"role\": \"STUDENTS\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"role\": \"STUDENTS\"\n}2. List All Users\nRoute: GET /user/all\nDescription: Lists all users available.\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n    \"name\": \"John Doe\",\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"STUDENTS\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417401\",\n    \"name\": \"Jane Smith\",\n    \"username\": \"janesmith\",\n    \"email\": \"jane.smith@example.com\",\n    \"role\": \"PROFESSOR\"\n  }\n]3. Find a User by ID\nRoute: GET /user\nDescription: Finds a user by ID.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\",\n  \"email\": \"john.doe@example.com\",\n  \"role\": \"STUDENTS\"\n}4. Delete a User by ID\nRoute: DELETE /user/:id\nDescription: Deletes a user by ID.\nResponse:\nExample :{\n  \"message\": \"User deleted successfully\"\n}5. Update a User\nRoute: PATCH /user\nDescription: Updates a user.\nRequest Body:\nExample :{\n  \"name\": \"Johnathan Doe\",\n  \"username\": \"johnathandoe\",\n  \"email\": \"johnathan.doe@example.com\",\n  \"password\": \"NewSecurePassword123!\",\n  \"role\": \"ADMINISTRATOR\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n  \"name\": \"Johnathan Doe\",\n  \"username\": \"johnathandoe\",\n  \"email\": \"johnathan.doe@example.com\",\n  \"role\": \"ADMINISTRATOR\"\n}6. User Login\nRoute: POST /auth\nDescription: Logs in a user.\nRequest Body:\nExample :{\n  \"email\": \"johnathan.doe@example.com\",\n  \"username\": \"johnathandoe\",\n  \"password\": \"NewSecurePassword123!\"\n}Response:\nExample :{\n  \"user\": {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417400\",\n    \"name\": \"Johnathan Doe\",\n    \"username\": \"johnathandoe\",\n    \"email\": \"johnathan.doe@example.com\"\n  },\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3OCwidXNlcm5hbWUiOiJqb2huYWRvbm9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}7. Create a New Course\nRoute: POST /courses\nDescription: Creates a new course.\nRequest Body:\nExample :{\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-01T00:00:00Z\"\n}8. Create a New Lesson\nRoute: POST /courses/:courseId/lessons\nDescription: Creates a new lesson for a specific course.\nRequest Body:\nExample :{\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}9. List All Courses\nRoute: GET /courses\nDescription: Lists all courses available.\nQuery Parameters:\n\npage: Page number (optional, default 1)\nsize: Number of items per page (optional, default 10)\n\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n    \"name\": \"Introduction to Programming\",\n    \"description\": \"Learn the basics of programming.\",\n    \"banner\": \"https://example.com/images/programming.jpg\",\n    \"createdAt\": \"2023-04-01T00:00:00Z\",\n    \"updatedAt\": \"2023-04-01T00:00:00Z\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417404\",\n    \"name\": \"Advanced Python Programming\",\n    \"description\": \"Dive deeper into Python programming.\",\n    \"banner\": \"https://example.com/images/advanced-python.jpg\",\n    \"createdAt\": \"2023-04-02T00:00:00Z\",\n    \"updatedAt\": \"2023-04-02T00:00:00Z\"\n  }\n]10. List All Lessons for a Specific Course\nRoute: GET /courses/:courseId/lessons\nDescription: Lists all lessons for a specific course.\nQuery Parameters:\n\npage: Page number (optional, default 1)\nsize: Number of items per page (optional, default 10)\n\nResponse:\nExample :[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n    \"name\": \"Getting Started with Python\",\n    \"description\": \"Learn how to write your first Python program.\",\n    \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417405\",\n    \"name\": \"Variables and Data Types\",\n    \"description\": \"Understand variables and data types in Python.\",\n    \"content\": \"In this lesson, you will learn about variables and data types in Python.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417403\"\n  },\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-42661417406\",\n    \"name\": \"Control Flow\",\n    \"description\": \"Learn about loops and conditionals in Python.\",\n    \"content\": \"In this lesson, you will learn how to use loops and conditionals in Python.\",\n    \"role\": \"TEXT\",\n    \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n  }\n]11. Find a Course by ID\nRoute: GET /courses/:id\nDescription: Finds a course by ID.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming.\",\n  \"banner\": \"https://example.com/images/programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-01T00:00:00Z\"\n}12. Find a Lesson by ID for a Specific Course\nRoute: GET /courses/:courseId/lessons/:id\nDescription: Finds a lesson by ID for a specific course.\nResponse:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Getting Started with Python\",\n  \"description\": \"Learn how to write your first Python program.\",\n  \"content\": \"In this lesson, you will learn how to write a simple Python program.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}13. Update a Course by ID\nRoute: PUT /courses/:id\nDescription: Updates a course by ID.\nRequest Body:\nExample :{\n  \"name\": \"Advanced Introduction to Programming\",\n  \"description\": \"Dive deeper into the basics of programming.\",\n  \"banner\": \"https://example.com/images/advanced-programming.jpg\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417402\",\n  \"name\": \"Advanced Introduction to Programming\",\n  \"description\": \"Dive deeper into the basics of programming.\",\n  \"banner\": \"https://example.com/images/advanced-programming.jpg\",\n  \"createdAt\": \"2023-04-01T00:00:00Z\",\n  \"updatedAt\": \"2023-04-02T00:00:00Z\"\n}14. Update a Lesson by ID for a Specific Course\nRoute: PUT /courses/:courseId/lessons/:id\nDescription: Updates a lesson by ID for a specific course.\nRequest Body:\nExample :{\n  \"name\": \"Advanced Python Programming\",\n  \"description\": \"Dive deeper into Python programming.\",\n  \"content\": \"In this lesson, you will learn advanced Python programming concepts.\",\n  \"role\": \"TEXT\"\n}Response:\nExample :{\n  \"id\": \"123e4567-e89b-12d3-a456-42661417403\",\n  \"name\": \"Advanced Python Programming\",\n  \"description\": \"Dive deeper into Python programming.\",\n  \"content\": \"In this lesson, you will learn advanced Python programming concepts.\",\n  \"role\": \"TEXT\",\n  \"courseId\": \"123e4567-e89b-12d3-a456-42661417402\"\n}15. Delete a Course by ID\nRoute: DELETE /courses/:id\nDescription: Deletes a course by ID.\nResponse:\nExample :{\n  \"message\": \"Course deleted successfully\"\n}16. Delete a Lesson by ID for a Specific Course\nRoute: DELETE /courses/:courseId/lessons/:id\nDescription: Deletes a lesson by ID for a specific course.\nResponse:\nExample :{\n  \"message\": \"Lesson deleted successfully\"\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) [2024] [fullname]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_LessonsModule\n\n\n\ncluster_LessonsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\nCoursesModule -->\n\nDatabaseModule->CoursesModule\n\n\n\n\n\nLessonsModule\n\nLessonsModule\n\nLessonsModule -->\n\nDatabaseModule->LessonsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaCourseRepository \n\nPrismaCourseRepository \n\nPrismaCourseRepository  -->\n\nDatabaseModule->PrismaCourseRepository \n\n\n\n\n\nPrismaLessonRepository \n\nPrismaLessonRepository \n\nPrismaLessonRepository  -->\n\nDatabaseModule->PrismaLessonRepository \n\n\n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\nAppModule -->\n\nLessonsModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCreateCourseUseCase\n\nCreateCourseUseCase\n\nCoursesModule -->\n\nCreateCourseUseCase->CoursesModule\n\n\n\n\n\nDeleteCourseByIdUseCase\n\nDeleteCourseByIdUseCase\n\nCoursesModule -->\n\nDeleteCourseByIdUseCase->CoursesModule\n\n\n\n\n\nFindAllCoursesUseCase\n\nFindAllCoursesUseCase\n\nCoursesModule -->\n\nFindAllCoursesUseCase->CoursesModule\n\n\n\n\n\nFindCourseByIdUseCase\n\nFindCourseByIdUseCase\n\nCoursesModule -->\n\nFindCourseByIdUseCase->CoursesModule\n\n\n\n\n\nUpdateCourseUseCase\n\nUpdateCourseUseCase\n\nCoursesModule -->\n\nUpdateCourseUseCase->CoursesModule\n\n\n\n\n\nPrismaCourseRepository\n\nPrismaCourseRepository\n\nDatabaseModule -->\n\nPrismaCourseRepository->DatabaseModule\n\n\n\n\n\nPrismaLessonRepository\n\nPrismaLessonRepository\n\nDatabaseModule -->\n\nPrismaLessonRepository->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\nCreateLessonUseCase\n\nCreateLessonUseCase\n\nLessonsModule -->\n\nCreateLessonUseCase->LessonsModule\n\n\n\n\n\nDeleteLessonByIdUseCase\n\nDeleteLessonByIdUseCase\n\nLessonsModule -->\n\nDeleteLessonByIdUseCase->LessonsModule\n\n\n\n\n\nFindAllLessonsByCourseUseCase\n\nFindAllLessonsByCourseUseCase\n\nLessonsModule -->\n\nFindAllLessonsByCourseUseCase->LessonsModule\n\n\n\n\n\nFindLessonByIdUseCase\n\nFindLessonByIdUseCase\n\nLessonsModule -->\n\nFindLessonByIdUseCase->LessonsModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nUserModule -->\n\nDeleteUserUseCase->UserModule\n\n\n\n\n\nFindAllUsersUseCase\n\nFindAllUsersUseCase\n\nUserModule -->\n\nFindAllUsersUseCase->UserModule\n\n\n\n\n\nFindUserByIdUseCase\n\nFindUserByIdUseCase\n\nUserModule -->\n\nFindUserByIdUseCase->UserModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nUserModule -->\n\nUpdateUserUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Replace   (src/.../replace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/replace.ts\n    \n    \n        \n            \n                \n                    \n                    Replace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelCourse.html":{"url":"classes/viewModelCourse.html","title":"class - viewModelCourse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelCourse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/viewModelCourse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: Course)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/viewModelCourse.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            Course\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: Course; name: Course; description: Course; banner: Course; updatedAt: Course; lessons: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { viewModelLesson } from 'src/lessons/viewModelLesson';\nimport { Course } from './entities/course.entity';\n\nexport class viewModelCourse {\n  static toHttp({ id, name, description, banner, updatedAt, lessons }: Course) {\n    return {\n      id,\n      name,\n      description,\n      banner,\n      updatedAt,\n      lessons: lessons?.map((lesson) => viewModelLesson.toHttp(lesson)),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelLesson.html":{"url":"classes/viewModelLesson.html","title":"class - viewModelLesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelLesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lessons/viewModelLesson.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: Lesson)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lessons/viewModelLesson.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            Lesson\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: Lesson; name: Lesson; description: Lesson; content: Lesson; role: Lesson; courseId: Lesson; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson } from './entities/lesson.entity';\n\nexport class viewModelLesson {\n  static toHttp({ id, name, description, content, role, courseId }: Lesson) {\n    return {\n      id,\n      name,\n      description,\n      content,\n      role,\n      courseId,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
